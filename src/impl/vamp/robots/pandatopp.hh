#pragma once

#include <vamp/vector.hh>
#include <vamp/vector/math.hh>
#include <vamp/collision/environment.hh>
#include <vamp/collision/validity.hh>

// NOLINTBEGIN(*-magic-numbers)
namespace vamp::robots
{
    struct Pandatopp
    {
        static constexpr char *name = "pandatopp";
        static constexpr std::size_t dimension = 21;
        static constexpr std::size_t n_spheres = 59;
        static constexpr float min_radius = 0.012000000104308128;
        static constexpr float max_radius = 0.07999999821186066;
        static constexpr std::size_t resolution = 16;

        static constexpr std::array<std::string_view, dimension> joint_names = {
            "panda_joint1",
            "panda_joint2",
            "panda_joint3",
            "panda_joint4",
            "panda_joint5",
            "panda_joint6",
            "panda_joint7"};
        static constexpr char *end_effector = "panda_grasptarget";

        using Configuration = FloatVector<dimension>;
        using ConfigurationArray = std::array<FloatT, dimension>;

        struct alignas(FloatVectorAlignment) ConfigurationBuffer
          : std::array<float, Configuration::num_scalars_rounded>
        {
        };

        template <std::size_t rake>
        using ConfigurationBlock = FloatVector<rake, dimension / 3>;

        template <std::size_t rake>
        struct Spheres
        {
            FloatVector<rake, n_spheres> x;
            FloatVector<rake, n_spheres> y;
            FloatVector<rake, n_spheres> z;
            FloatVector<rake, n_spheres> r;
        };

        alignas(Configuration::S::Alignment) static constexpr std::array<float, dimension> s_m{
            5.934199810028076, // position ranges
            3.6651999950408936,
            5.934199810028076,
            3.2288999557495117,
            5.934199810028076,
            3.909600019454956,
            5.934199810028076,
            5.24, // velocity ranges
            5.24,
            5.24,
            5.24,
            10.52,
            8.36,
            10.52,
            20, // acceleration ranges
            20,
            20,
            20,
            20,
            20,
            20};

        alignas(Configuration::S::Alignment) static constexpr std::array<float, dimension> s_a{
            -2.967099905014038, // position mins
            -1.8325999975204468,
            -2.967099905014038,
            -3.1415998935699463,
            -2.967099905014038,
            -0.08730000257492065,
            -2.967099905014038,
            -2.62, // velocity mins
            -2.62,
            -2.62,
            -2.62,
            -5.26,
            -4.18,
            -5.26, 
            -10, // acceleration mins
            -10,
            -10,
            -10,
            -10,
            -10,
            -10};

        alignas(Configuration::S::Alignment) static constexpr std::array<float, dimension> d_m{
            0.16851471364498138, // position descale
            0.2728364169597626,
            0.16851471364498138,
            0.30970299243927,
            0.16851471364498138,
            0.2557806372642517,
            0.16851471364498138,
            0.1908, // velocity descale
            0.1908,
            0.1908,
            0.1908,
            0.0951,
            0.1196,
            0.0951,
            0.05, // acceleration descale
            0.05,
            0.05,
            0.05,
            0.05,
            0.05,
            0.05};

        inline static void scale_configuration(Configuration &q) noexcept
        {
            q = q * Configuration(s_m) + Configuration(s_a);
        }

        inline static void descale_configuration(Configuration &q) noexcept
        {
            q = (q - Configuration(s_a)) * Configuration(d_m);
        }

        template <std::size_t rake>
        inline static void scale_configuration_block(ConfigurationBlock<rake> &q) noexcept
        {
            q[0] = -2.967099905014038 + (q[0] * 5.934199810028076);
            q[1] = -1.8325999975204468 + (q[1] * 3.6651999950408936);
            q[2] = -2.967099905014038 + (q[2] * 5.934199810028076);
            q[3] = -3.1415998935699463 + (q[3] * 3.2288999557495117);
            q[4] = -2.967099905014038 + (q[4] * 5.934199810028076);
            q[5] = -0.08730000257492065 + (q[5] * 3.909600019454956);
            q[6] = -2.967099905014038 + (q[6] * 5.934199810028076);
        }

        template <std::size_t rake>
        inline static void descale_configuration_block(ConfigurationBlock<rake> &q) noexcept
        {
            q[0] = 0.16851471364498138 * (q[0] - -2.967099905014038);
            q[1] = 0.2728364169597626 * (q[1] - -1.8325999975204468);
            q[2] = 0.16851471364498138 * (q[2] - -2.967099905014038);
            q[3] = 0.30970299243927 * (q[3] - -3.1415998935699463);
            q[4] = 0.16851471364498138 * (q[4] - -2.967099905014038);
            q[5] = 0.2557806372642517 * (q[5] - -0.08730000257492065);
            q[6] = 0.16851471364498138 * (q[6] - -2.967099905014038);
        }

        inline static auto space_measure() noexcept -> float
        {
            return 57376.4026747593;
        }

        // topple forward pass
        template <typename InputVector, typename OutputVector>
        static inline auto topple_nn_forward(const InputVector &x, OutputVector &out) noexcept
        {
            // FloatVector<8, 63> v;
            // FloatVector<8, 29> y;
            std::array<double, 63> v;
            std::array<double, 29> y;
            v[0] = 0.402872 + 0.015485742 * x[41] + -0.034053423 * x[40] + -0.0069409143 * x[39] + 0.011269291 * x[38] + 0.022611868 * x[37] + 0.009696519 * x[36] + -0.01044799 * x[35] + 0.04874406 * x[34] + -0.028093217 * x[33] + 0.05762263 * x[32] + -0.10481633 * x[31] + -0.11262423 * x[30] + -0.026545648 * x[29] + 0.08223713 * x[28] + -0.12928239 * x[27] + 0.5306107 * x[26] + -0.4540731 * x[25] + 0.10217234 * x[24] + 0.20562267 * x[23] + 0.52558887 * x[22] + -0.05590825 * x[21] + 0.014911669 * x[20] + 0.011194749 * x[19] + -0.05364745 * x[18] + 0.01217942 * x[17] + 0.034251526 * x[16] + -0.017200679 * x[15] + 0.029755618 * x[14] + 0.025088755 * x[13] + -0.018163225 * x[12] + -0.078984976 * x[11] + -0.09583885 * x[10] + 0.027789176 * x[9] + -0.07802391 * x[8] + 0.06818557 * x[7] + 0.015879832 * x[6] + 0.07760279 * x[5] + 0.19192794 * x[4] + -0.44863328 * x[3] + -0.1377915 * x[2] + -0.043356102 * x[1] + -0.0045386585 * x[0];
            if( v[0] >= 0. ) {
                v[0] = v[0];
            } else {
                v[0] = 0.;
            }
            v[1] = 0.50676364 + 0.0070456504 * x[41] + -0.032222576 * x[40] + 0.021149738 * x[39] + -0.046998937 * x[38] + -0.043811616 * x[37] + -0.04723738 * x[36] + 0.08437956 * x[35] + -0.07600702 * x[34] + 0.2406887 * x[33] + 0.03777286 * x[32] + 0.008981059 * x[31] + -0.060756765 * x[30] + 0.00319245 * x[29] + -0.055798505 * x[28] + 0.27104622 * x[27] + -0.039897483 * x[26] + -0.2661662 * x[25] + -0.18239568 * x[24] + 0.108828254 * x[23] + -0.28844875 * x[22] + -0.12039207 * x[21] + 0.013189897 * x[20] + 0.01361711 * x[19] + -0.0013432178 * x[18] + -0.061419386 * x[17] + 0.01643544 * x[16] + 0.14192028 * x[15] + 0.045509063 * x[14] + 0.18189411 * x[13] + 0.17162684 * x[12] + 0.11862255 * x[11] + -0.08942278 * x[10] + -0.00423935 * x[9] + 0.024792736 * x[8] + -0.037204776 * x[7] + 0.21315083 * x[6] + 0.6308345 * x[5] + 0.2339908 * x[4] + -0.7036952 * x[3] + -0.12644038 * x[2] + -0.04280257 * x[1] + -0.09004939 * x[0];
            if( v[1] >= 0. ) {
                v[1] = v[1];
            } else {
                v[1] = 0.;
            }
            v[2] = 0.45488012 + 0.0065934216 * x[41] + 0.0128337825 * x[40] + 0.014758727 * x[39] + 0.014120835 * x[38] + -0.0043919417 * x[37] + 0.011592614 * x[36] + -0.068034805 * x[35] + 0.05182203 * x[34] + -0.20326534 * x[33] + 0.05313994 * x[32] + 0.07738981 * x[31] + 0.08357313 * x[30] + 0.0064511113 * x[29] + 0.0814009 * x[28] + -0.01785288 * x[27] + 0.4057372 * x[26] + -0.2927051 * x[25] + -0.57487726 * x[24] + -0.025578067 * x[23] + 0.19456145 * x[22] + -0.23477356 * x[21] + 0.007881733 * x[20] + -0.03045197 * x[19] + 0.057672497 * x[18] + -0.026345057 * x[17] + -0.025875298 * x[16] + -0.008540095 * x[15] + 0.00045830925 * x[14] + 0.039766055 * x[13] + 0.11729048 * x[12] + 0.2072253 * x[11] + -0.081937976 * x[10] + -0.014782308 * x[9] + 8.873041e-05 * x[8] + -0.13213922 * x[7] + -0.0015174173 * x[6] + 0.4150464 * x[5] + 0.35565522 * x[4] + -0.5551947 * x[3] + 0.4503337 * x[2] + 0.1411526 * x[1] + 0.14685616 * x[0];
            if( v[2] >= 0. ) {
                v[2] = v[2];
            } else {
                v[2] = 0.;
            }
            v[3] = 0.55847204 + 0.028503733 * x[41] + -0.013976918 * x[40] + -0.0076285284 * x[39] + -0.028265294 * x[38] + 0.023550898 * x[37] + -0.009103707 * x[36] + -0.017077243 * x[35] + -0.1373287 * x[34] + -0.015710078 * x[33] + 0.039840426 * x[32] + 0.17524518 * x[31] + 0.0070238523 * x[30] + 0.17195395 * x[29] + 0.06219016 * x[28] + 0.24592212 * x[27] + 0.07283494 * x[26] + 0.13066773 * x[25] + -0.90279806 * x[24] + -0.105622165 * x[23] + -0.6043875 * x[22] + 0.050845046 * x[21] + 0.0053987806 * x[20] + -0.002687403 * x[19] + -0.041541744 * x[18] + 0.0020021014 * x[17] + 0.017641867 * x[16] + -0.015854431 * x[15] + -0.007175255 * x[14] + 0.028567603 * x[13] + -0.035378836 * x[12] + -0.019490559 * x[11] + -0.108379364 * x[10] + 0.09373993 * x[9] + -0.054094017 * x[8] + 0.06624785 * x[7] + -0.027883263 * x[6] + 0.04204416 * x[5] + 0.25384012 * x[4] + -0.67485446 * x[3] + 0.12781331 * x[2] + -0.23336664 * x[1] + 0.12308379 * x[0];
            if( v[3] >= 0. ) {
                v[3] = v[3];
            } else {
                v[3] = 0.;
            }
            v[4] = 0.43263084 + 0.023067554 * x[41] + 0.011122348 * x[40] + -0.007851488 * x[39] + -0.019094512 * x[38] + 0.042031016 * x[37] + 0.012527631 * x[36] + -0.0026830826 * x[35] + -0.059811946 * x[34] + -0.16120031 * x[33] + -0.07522466 * x[32] + 0.1609501 * x[31] + -0.003305264 * x[30] + 0.13889965 * x[29] + -0.004688627 * x[28] + 0.17087106 * x[27] + 0.38325712 * x[26] + -0.03199968 * x[25] + -0.5475521 * x[24] + 0.19667575 * x[23] + -0.4653285 * x[22] + -0.24986477 * x[21] + -0.004054292 * x[20] + 0.014765808 * x[19] + -0.01469438 * x[18] + 0.02568106 * x[17] + 0.012410969 * x[16] + 0.023881257 * x[15] + -0.0028446002 * x[14] + -0.023307493 * x[13] + 0.23399857 * x[12] + -0.20542404 * x[11] + -0.049133055 * x[10] + -0.07409249 * x[9] + 0.18646173 * x[8] + -0.005065966 * x[7] + 0.14833495 * x[6] + 0.8660339 * x[5] + -0.37993717 * x[4] + -0.362017 * x[3] + -0.4568655 * x[2] + 0.33786872 * x[1] + 0.24757439 * x[0];
            if( v[4] >= 0. ) {
                v[4] = v[4];
            } else {
                v[4] = 0.;
            }
            v[5] = 0.26285198 + 0.04442725 * x[41] + -0.015318356 * x[40] + -0.020669144 * x[39] + -0.078045055 * x[38] + -0.00646282 * x[37] + -0.057503436 * x[36] + 0.03994666 * x[35] + -0.16123164 * x[34] + 0.17698413 * x[33] + 0.06507998 * x[32] + 0.0793689 * x[31] + 0.12628217 * x[30] + 0.106231086 * x[29] + 0.09821254 * x[28] + 0.009495148 * x[27] + 0.36509022 * x[26] + -0.15299569 * x[25] + -0.30173656 * x[24] + 0.22521242 * x[23] + -0.07054364 * x[22] + 0.0401497 * x[21] + -0.026940484 * x[20] + -0.0026969211 * x[19] + 0.032525074 * x[18] + -0.05610916 * x[17] + 0.006245368 * x[16] + 0.09497877 * x[15] + 0.014051086 * x[14] + -0.022683762 * x[13] + -0.030229012 * x[12] + 0.18091328 * x[11] + -0.02514728 * x[10] + 0.027402727 * x[9] + 0.05255357 * x[8] + -0.01321227 * x[7] + -0.011730456 * x[6] + -0.06636544 * x[5] + 0.1139123 * x[4] + -0.038058426 * x[3] + -0.11216592 * x[2] + -0.07106804 * x[1] + 0.16740406 * x[0];
            if( v[5] >= 0. ) {
                v[5] = v[5];
            } else {
                v[5] = 0.;
            }
            v[6] = 0.50035745 + -0.002015705 * x[41] + -0.054720495 * x[40] + 0.02740474 * x[39] + 0.054442506 * x[38] + 0.012928801 * x[37] + -0.019273037 * x[36] + -0.032102246 * x[35] + -0.013578111 * x[34] + 0.119456135 * x[33] + -0.05136214 * x[32] + -0.28357127 * x[31] + -0.08219593 * x[30] + -0.04189867 * x[29] + 0.23586984 * x[28] + 0.2766638 * x[27] + 0.04028086 * x[26] + -0.08489468 * x[25] + -0.11492922 * x[24] + 0.06886816 * x[23] + 0.08763312 * x[22] + -0.20400882 * x[21] + 0.004441022 * x[20] + -0.01333764 * x[19] + -0.037300404 * x[18] + 0.012409937 * x[17] + 0.00023620199 * x[16] + -0.042472504 * x[15] + -0.06486554 * x[14] + 0.08472108 * x[13] + -0.0022581622 * x[12] + -0.14369956 * x[11] + 0.05471942 * x[10] + 0.00031997377 * x[9] + -0.0026090746 * x[8] + -0.16875783 * x[7] + 0.30179992 * x[6] + 0.51132804 * x[5] + -0.30852646 * x[4] + -0.297375 * x[3] + -0.0435309 * x[2] + 0.08223295 * x[1] + -0.1356146 * x[0];
            if( v[6] >= 0. ) {
                v[6] = v[6];
            } else {
                v[6] = 0.;
            }
            v[7] = 0.3180383 + 0.0008269331 * x[41] + 0.01844736 * x[40] + -0.032326184 * x[39] + -0.000855145 * x[38] + 0.011434877 * x[37] + -0.01926172 * x[36] + -0.0077430476 * x[35] + -0.05517675 * x[34] + -0.16847818 * x[33] + 0.17414775 * x[32] + 0.043952655 * x[31] + -0.062466104 * x[30] + 0.011275902 * x[29] + -0.02641866 * x[28] + 0.074903555 * x[27] + 0.8848897 * x[26] + -0.17821415 * x[25] + -0.213042 * x[24] + 0.21365623 * x[23] + -0.09249115 * x[22] + 0.06241527 * x[21] + 0.003288094 * x[20] + 0.009597961 * x[19] + 0.0009948442 * x[18] + -0.013891143 * x[17] + 0.00660377 * x[16] + -0.01166231 * x[15] + 0.008402765 * x[14] + 0.13274369 * x[13] + 0.09878824 * x[12] + -0.019618379 * x[11] + -0.023316009 * x[10] + 0.109306484 * x[9] + -0.058210425 * x[8] + 0.11888543 * x[7] + 0.5136309 * x[6] + 0.55301434 * x[5] + -0.13623539 * x[4] + -0.25935024 * x[3] + 0.34498987 * x[2] + -0.010142042 * x[1] + 0.025638144 * x[0];
            if( v[7] >= 0. ) {
                v[7] = v[7];
            } else {
                v[7] = 0.;
            }
            v[8] = 0.40439495 + -0.0064564296 * x[41] + 0.0136012025 * x[40] + -0.028359309 * x[39] + 0.010521981 * x[38] + -0.023144241 * x[37] + -0.009105036 * x[36] + 0.002044119 * x[35] + -0.058769405 * x[34] + -0.1255251 * x[33] + 0.1658365 * x[32] + 0.03915205 * x[31] + -0.019616293 * x[30] + -0.09657421 * x[29] + -0.042529617 * x[28] + 0.14236222 * x[27] + 0.3961357 * x[26] + -0.0047738724 * x[25] + -0.17176233 * x[24] + -0.005572523 * x[23] + 0.30085972 * x[22] + 0.13871408 * x[21] + -0.025400203 * x[20] + -0.013699861 * x[19] + 0.048628647 * x[18] + -0.023353474 * x[17] + -0.04752654 * x[16] + -0.0066584484 * x[15] + 0.016685128 * x[14] + -0.033458617 * x[13] + 0.04264927 * x[12] + 0.10990309 * x[11] + -0.11265211 * x[10] + -0.1270625 * x[9] + -0.04676578 * x[8] + 0.09169547 * x[7] + -0.05615675 * x[6] + 0.35945395 * x[5] + 0.26491177 * x[4] + -0.8023405 * x[3] + -0.5175305 * x[2] + 0.09443377 * x[1] + 0.27930066 * x[0];
            if( v[8] >= 0. ) {
                v[8] = v[8];
            } else {
                v[8] = 0.;
            }
            v[9] = 0.5105826 + 0.020858616 * x[41] + -0.01859576 * x[40] + -0.0018633943 * x[39] + 0.007163612 * x[38] + -0.0053746956 * x[37] + -0.00057404005 * x[36] + -0.029401358 * x[35] + -0.104720704 * x[34] + 0.019966623 * x[33] + 0.106421016 * x[32] + 0.058793485 * x[31] + -0.020401213 * x[30] + -0.14297067 * x[29] + 0.07052215 * x[28] + 0.0400824 * x[27] + 0.31750548 * x[26] + -0.34422636 * x[25] + -0.65003234 * x[24] + 0.113725 * x[23] + 0.36274332 * x[22] + -0.16625556 * x[21] + 0.001518486 * x[20] + 0.010742214 * x[19] + 0.002162691 * x[18] + 0.01821974 * x[17] + 0.010892177 * x[16] + -0.004546898 * x[15] + -0.02232514 * x[14] + -0.057802334 * x[13] + 0.0048004147 * x[12] + -0.035324562 * x[11] + 0.04248003 * x[10] + -0.01213635 * x[9] + -0.10442357 * x[8] + 0.00620618 * x[7] + -0.21367821 * x[6] + 0.3457084 * x[5] + -0.53628045 * x[4] + -0.37176794 * x[3] + -0.11625018 * x[2] + -0.39076892 * x[1] + -0.16369295 * x[0];
            if( v[9] >= 0. ) {
                v[9] = v[9];
            } else {
                v[9] = 0.;
            }
            v[10] = 0.25035536 + -0.0009238671 * x[41] + -0.0029379576 * x[40] + 0.031849045 * x[39] + -0.012505035 * x[38] + -0.026116716 * x[37] + -0.009129276 * x[36] + -0.0018130451 * x[35] + -0.0036994338 * x[34] + -0.14186926 * x[33] + -0.054168373 * x[32] + 0.07297697 * x[31] + 0.10538037 * x[30] + -0.043404598 * x[29] + 0.05348499 * x[28] + 0.0455132 * x[27] + 0.74658775 * x[26] + -0.1342488 * x[25] + -0.6953051 * x[24] + -0.7088727 * x[23] + 0.042655718 * x[22] + 0.0978366 * x[21] + 0.0173238 * x[20] + 0.012027148 * x[19] + -0.03666256 * x[18] + -0.018138524 * x[17] + 0.013008539 * x[16] + 0.011388524 * x[15] + 0.0052285376 * x[14] + 0.012829625 * x[13] + 0.028188411 * x[12] + -0.024765437 * x[11] + -0.08353347 * x[10] + -0.050765686 * x[9] + 0.07208559 * x[8] + 0.015119975 * x[7] + -0.15137352 * x[6] + 0.2582041 * x[5] + -0.07092347 * x[4] + -0.19971836 * x[3] + -0.27954438 * x[2] + 0.2649034 * x[1] + 0.024831146 * x[0];
            if( v[10] >= 0. ) {
                v[10] = v[10];
            } else {
                v[10] = 0.;
            }
            v[11] = 0.26312038 + -0.03815861 * x[41] + 0.032172315 * x[40] + -0.015834998 * x[39] + 0.0028503046 * x[38] + -0.042783536 * x[37] + 0.0130155 * x[36] + 0.11097366 * x[35] + 0.09583793 * x[34] + 0.047352985 * x[33] + 0.031857695 * x[32] + 0.055255502 * x[31] + 0.24147108 * x[30] + -0.014916291 * x[29] + -0.12822954 * x[28] + -0.0016055016 * x[27] + 0.15938053 * x[26] + -0.27834934 * x[25] + -0.10780944 * x[24] + -0.25035653 * x[23] + 0.052697595 * x[22] + 0.06696134 * x[21] + -0.039289717 * x[20] + 0.06569746 * x[19] + -0.016339254 * x[18] + 0.051955678 * x[17] + 0.024595473 * x[16] + 0.017198255 * x[15] + -0.060030445 * x[14] + 0.041244004 * x[13] + 0.122682154 * x[12] + 0.09696105 * x[11] + 0.12433922 * x[10] + 0.07036801 * x[9] + 0.03029389 * x[8] + -0.12522615 * x[7] + 0.3294977 * x[6] + -0.06445076 * x[5] + 0.42624727 * x[4] + 0.18419975 * x[3] + -0.17574151 * x[2] + 0.079106115 * x[1] + -0.08393141 * x[0];
            if( v[11] >= 0. ) {
                v[11] = v[11];
            } else {
                v[11] = 0.;
            }
            v[12] = 0.55390733 + -0.006452838 * x[41] + -0.007485979 * x[40] + -0.010259145 * x[39] + 0.002724517 * x[38] + 0.010968065 * x[37] + -0.014204751 * x[36] + -0.02045632 * x[35] + 0.107700065 * x[34] + -0.035639465 * x[33] + -0.051500447 * x[32] + 0.0053984085 * x[31] + 0.10100098 * x[30] + 0.0740292 * x[29] + 0.13483363 * x[28] + -0.3832797 * x[27] + 0.6663531 * x[26] + 0.33249894 * x[25] + -0.19968511 * x[24] + -0.26005512 * x[23] + -0.16063692 * x[22] + -0.6633438 * x[21] + -0.007993324 * x[20] + 0.017390024 * x[19] + -0.0049573355 * x[18] + 0.001156734 * x[17] + 0.014345253 * x[16] + -0.021827769 * x[15] + -0.004660992 * x[14] + -0.07330854 * x[13] + 0.13870195 * x[12] + 0.019168364 * x[11] + -0.06552736 * x[10] + -0.02196261 * x[9] + -0.1507249 * x[8] + 0.08413595 * x[7] + -0.17706633 * x[6] + 0.5952164 * x[5] + 0.10700114 * x[4] + -0.4145668 * x[3] + -0.06238088 * x[2] + -0.44911844 * x[1] + 0.13905534 * x[0];
            if( v[12] >= 0. ) {
                v[12] = v[12];
            } else {
                v[12] = 0.;
            }
            v[13] = 0.48977238 + -0.032038707 * x[41] + -0.022278279 * x[40] + -0.008228068 * x[39] + 0.012608924 * x[38] + -0.027200377 * x[37] + -0.024321325 * x[36] + 0.0022033341 * x[35] + 0.1013567 * x[34] + 0.14542954 * x[33] + 0.097789615 * x[32] + 0.0861567 * x[31] + 0.047899358 * x[30] + 0.23594823 * x[29] + -0.10635966 * x[28] + -0.028350264 * x[27] + 0.34731537 * x[26] + -0.5538228 * x[25] + -0.350394 * x[24] + 0.03416093 * x[23] + -0.7169996 * x[22] + 0.20720384 * x[21] + -0.003870082 * x[20] + 0.0051543573 * x[19] + 0.034666996 * x[18] + -0.0037852435 * x[17] + -0.021365637 * x[16] + -0.021806294 * x[15] + -0.029753428 * x[14] + -0.039909266 * x[13] + 0.01644939 * x[12] + 0.019156657 * x[11] + -0.07175584 * x[10] + -0.03722119 * x[9] + -0.19244874 * x[8] + -0.041797247 * x[7] + -0.22488251 * x[6] + 0.4609208 * x[5] + -0.008968761 * x[4] + -0.41921267 * x[3] + 0.026834192 * x[2] + -0.28768873 * x[1] + -0.1609055 * x[0];
            if( v[13] >= 0. ) {
                v[13] = v[13];
            } else {
                v[13] = 0.;
            }
            v[14] = 0.49383652 + 0.005469109 * x[41] + -0.044140745 * x[40] + 0.010324001 * x[39] + -0.033527274 * x[38] + 0.004438807 * x[37] + -0.009103366 * x[36] + -0.0033987847 * x[35] + 0.046723537 * x[34] + 0.0137119545 * x[33] + -0.008683008 * x[32] + 0.14223988 * x[31] + -0.08543505 * x[30] + -0.07395309 * x[29] + -0.032548085 * x[28] + -0.34013304 * x[27] + 0.41123325 * x[26] + 0.030366015 * x[25] + -0.6186365 * x[24] + 0.3774498 * x[23] + 0.309121 * x[22] + -0.1794661 * x[21] + 0.019007903 * x[20] + -0.014076491 * x[19] + 0.0039269705 * x[18] + 9.121019e-05 * x[17] + -0.0018788204 * x[16] + 0.045150127 * x[15] + -0.021620153 * x[14] + 0.06760213 * x[13] + -0.041733112 * x[12] + -0.054465707 * x[11] + 0.044345498 * x[10] + -0.012553417 * x[9] + 0.15576199 * x[8] + 0.012579317 * x[7] + 0.17984012 * x[6] + 0.1041561 * x[5] + 0.2391989 * x[4] + -0.3614111 * x[3] + -0.05275977 * x[2] + 0.4701766 * x[1] + 0.08804155 * x[0];
            if( v[14] >= 0. ) {
                v[14] = v[14];
            } else {
                v[14] = 0.;
            }
            v[15] = 0.49785686 + -0.05355103 * x[41] + 0.016586466 * x[40] + 0.0020930613 * x[39] + 0.06753282 * x[38] + -0.07268787 * x[37] + -0.0039596274 * x[36] + 0.08684173 * x[35] + 0.018615143 * x[34] + 0.06121447 * x[33] + -0.01689704 * x[32] + -0.009913703 * x[31] + -0.140781 * x[30] + -0.048301894 * x[29] + 0.099240646 * x[28] + -0.081232324 * x[27] + 0.2659185 * x[26] + 0.3566881 * x[25] + -0.5517876 * x[24] + -0.10064646 * x[23] + -0.15263802 * x[22] + -0.15070026 * x[21] + -0.017511731 * x[20] + 0.04239136 * x[19] + 0.08392945 * x[18] + 0.03336282 * x[17] + 0.0126503 * x[16] + 0.01437659 * x[15] + 0.011378298 * x[14] + 0.10635762 * x[13] + 0.10331809 * x[12] + 0.17591628 * x[11] + 0.1866116 * x[10] + 0.33794227 * x[9] + 0.02877273 * x[8] + 0.1392689 * x[7] + -0.04599174 * x[6] + 0.6639064 * x[5] + 0.013590141 * x[4] + 0.072905 * x[3] + 0.44209334 * x[2] + 0.06800619 * x[1] + 0.18198106 * x[0];
            if( v[15] >= 0. ) {
                v[15] = v[15];
            } else {
                v[15] = 0.;
            }
            v[16] = 0.536634 + 0.04023407 * x[41] + -0.03627637 * x[40] + -0.008734292 * x[39] + 0.019541541 * x[38] + -0.042603407 * x[37] + -0.014400377 * x[36] + -0.008061251 * x[35] + -0.11899137 * x[34] + -0.06609174 * x[33] + 0.094143905 * x[32] + -0.09790975 * x[31] + 0.0046267104 * x[30] + 0.10307829 * x[29] + 0.03514013 * x[28] + 0.043950066 * x[27] + 0.40614626 * x[26] + -0.1319728 * x[25] + 0.12735851 * x[24] + -0.00638949 * x[23] + -0.29683733 * x[22] + -0.07986917 * x[21] + 0.010930075 * x[20] + 0.04850327 * x[19] + -0.027669108 * x[18] + 0.030571751 * x[17] + -0.004910397 * x[16] + -0.0260792 * x[15] + -0.03582484 * x[14] + -0.08595275 * x[13] + 0.19870967 * x[12] + 0.041020647 * x[11] + -0.07691294 * x[10] + -0.0032580746 * x[9] + 0.16811153 * x[8] + -0.1067914 * x[7] + -0.3045012 * x[6] + 0.46318397 * x[5] + 0.07679371 * x[4] + -0.63361937 * x[3] + 0.15705664 * x[2] + 0.46842232 * x[1] + -0.2600043 * x[0];
            if( v[16] >= 0. ) {
                v[16] = v[16];
            } else {
                v[16] = 0.;
            }
            v[17] = 0.3806964 + -0.009832122 * x[41] + -0.015570705 * x[40] + -0.0075337477 * x[39] + -2.9128914e-05 * x[38] + -0.0189344 * x[37] + 0.004827753 * x[36] + -0.0073344475 * x[35] + 0.059350174 * x[34] + 0.058676682 * x[33] + 0.006210221 * x[32] + 0.1592185 * x[31] + 0.041539866 * x[30] + -0.05900903 * x[29] + -0.051821556 * x[28] + -0.28310302 * x[27] + 0.13732266 * x[26] + 0.30246446 * x[25] + -0.67261845 * x[24] + -0.011919411 * x[23] + 0.18247646 * x[22] + 0.052625462 * x[21] + 0.027406076 * x[20] + 0.015124433 * x[19] + 0.010790654 * x[18] + -0.009897648 * x[17] + -0.035216514 * x[16] + -0.032244865 * x[15] + -0.017287537 * x[14] + 0.16520046 * x[13] + 0.07041005 * x[12] + 0.02179591 * x[11] + -0.16203848 * x[10] + -0.14441814 * x[9] + -0.18405597 * x[8] + -0.09647396 * x[7] + 0.52128565 * x[6] + 0.5727971 * x[5] + -0.09197825 * x[4] + -0.7314549 * x[3] + -0.059331726 * x[2] + -0.16142848 * x[1] + -0.35648546 * x[0];
            if( v[17] >= 0. ) {
                v[17] = v[17];
            } else {
                v[17] = 0.;
            }
            v[18] = 0.5951367 + -0.0023118998 * x[41] + -0.013921843 * x[40] + -0.03591591 * x[39] + -0.014240987 * x[38] + 0.029845564 * x[37] + -0.0038350325 * x[36] + 0.043903142 * x[35] + 0.011098375 * x[34] + 0.005541906 * x[33] + 0.022199826 * x[32] + 0.13624527 * x[31] + 0.062010076 * x[30] + -0.047932636 * x[29] + -0.21901163 * x[28] + 0.12998761 * x[27] + 0.14759152 * x[26] + 0.006930168 * x[25] + -0.51172954 * x[24] + -0.09235141 * x[23] + 0.42726538 * x[22] + 0.29064468 * x[21] + -0.01848324 * x[20] + 0.036099974 * x[19] + -0.014209863 * x[18] + -0.00014468013 * x[17] + 0.018526973 * x[16] + -0.011607302 * x[15] + 0.007731572 * x[14] + -0.11114523 * x[13] + 0.28261963 * x[12] + -0.18084489 * x[11] + -0.12756735 * x[10] + 0.14159822 * x[9] + -0.06244932 * x[8] + 0.11320228 * x[7] + -0.32160366 * x[6] + 0.72747695 * x[5] + -0.20763321 * x[4] + -0.6218842 * x[3] + 0.44118932 * x[2] + -0.28013843 * x[1] + 0.44721964 * x[0];
            if( v[18] >= 0. ) {
                v[18] = v[18];
            } else {
                v[18] = 0.;
            }
            v[19] = 0.31143346 + 0.0011080453 * x[41] + 0.029752243 * x[40] + 0.012027808 * x[39] + -0.0056321328 * x[38] + -0.060393702 * x[37] + -0.02633686 * x[36] + 0.0028261775 * x[35] + -0.07720771 * x[34] + -0.09764985 * x[33] + -0.018677734 * x[32] + -0.09380005 * x[31] + 0.08601422 * x[30] + -0.11063256 * x[29] + 0.13516589 * x[28] + 0.2026072 * x[27] + 0.099684216 * x[26] + 0.17547326 * x[25] + -0.12797943 * x[24] + 0.011450947 * x[23] + 0.006920872 * x[22] + -0.07188594 * x[21] + -0.03417335 * x[20] + -0.014167811 * x[19] + -0.063478015 * x[18] + -0.03505823 * x[17] + 0.033054296 * x[16] + 0.061673302 * x[15] + 0.043738022 * x[14] + -0.12630452 * x[13] + -0.070549645 * x[12] + -0.17038485 * x[11] + 0.09398406 * x[10] + 0.1000906 * x[9] + -0.05318052 * x[8] + -0.10220842 * x[7] + -0.16326347 * x[6] + 0.30935985 * x[5] + -0.005739771 * x[4] + -0.2298755 * x[3] + 0.21644361 * x[2] + -0.17045236 * x[1] + -0.24447387 * x[0];
            if( v[19] >= 0. ) {
                v[19] = v[19];
            } else {
                v[19] = 0.;
            }
            v[20] = 0.5699884 + 0.010020414 * x[41] + -0.011181131 * x[40] + 0.021591239 * x[39] + -0.017763495 * x[38] + -0.008700328 * x[37] + 0.013368143 * x[36] + -0.019787664 * x[35] + -0.076374605 * x[34] + 0.02973271 * x[33] + -0.08887467 * x[32] + -0.0036292775 * x[31] + 0.049480505 * x[30] + -0.023153877 * x[29] + -0.071754515 * x[28] + 0.21213563 * x[27] + 0.5901089 * x[26] + 0.5644156 * x[25] + -0.040830962 * x[24] + 0.08291492 * x[23] + 0.16305818 * x[22] + 0.41467622 * x[21] + 0.022338858 * x[20] + -0.010309137 * x[19] + -0.012384691 * x[18] + -0.010697758 * x[17] + -0.029001221 * x[16] + 0.018662091 * x[15] + -0.029574016 * x[14] + 0.03444637 * x[13] + -0.01683432 * x[12] + -0.008607719 * x[11] + 0.030629516 * x[10] + -0.12554552 * x[9] + -0.04565493 * x[8] + -0.023897607 * x[7] + -0.4331783 * x[6] + 0.51068425 * x[5] + -0.21225944 * x[4] + -0.122044004 * x[3] + -0.054523602 * x[2] + 0.28876245 * x[1] + 0.11503495 * x[0];
            if( v[20] >= 0. ) {
                v[20] = v[20];
            } else {
                v[20] = 0.;
            }
            v[21] = 0.067577235 + 0.046088647 * x[41] + -0.065153964 * x[40] + 0.039374683 * x[39] + -0.013515354 * x[38] + 0.050547782 * x[37] + -0.0223337 * x[36] + -0.13296257 * x[35] + -0.091336735 * x[34] + -0.039026655 * x[33] + -0.031536467 * x[32] + -0.022919733 * x[31] + -0.30493113 * x[30] + -0.01898722 * x[29] + 0.10451588 * x[28] + -5.0920593e-05 * x[27] + -0.25355208 * x[26] + 0.34828603 * x[25] + 0.15668468 * x[24] + 0.21161227 * x[23] + 0.046134993 * x[22] + -0.19839555 * x[21] + 0.042868823 * x[20] + -0.09638006 * x[19] + 0.036560558 * x[18] + -0.064290725 * x[17] + -0.036735367 * x[16] + -0.019881267 * x[15] + 0.08846878 * x[14] + -0.06926233 * x[13] + -0.11936523 * x[12] + -0.11156775 * x[11] + -0.1792613 * x[10] + -0.11221231 * x[9] + -0.077562466 * x[8] + 0.15245791 * x[7] + -0.352137 * x[6] + 0.065533586 * x[5] + -0.5338432 * x[4] + -0.36437753 * x[3] + 0.20479786 * x[2] + -0.09999612 * x[1] + 0.1864643 * x[0];
            if( v[21] >= 0. ) {
                v[21] = v[21];
            } else {
                v[21] = 0.;
            }
            v[22] = 0.39664444 + 0.017314058 * x[41] + -0.015507571 * x[40] + 0.022588162 * x[39] + -0.019571282 * x[38] + -0.0018293341 * x[37] + 0.035144135 * x[36] + -0.0047027585 * x[35] + -0.12897651 * x[34] + 0.021756561 * x[33] + -0.07489319 * x[32] + 0.028486427 * x[31] + 0.083446205 * x[30] + -0.13464974 * x[29] + 0.053589113 * x[28] + 0.19852771 * x[27] + 0.43316188 * x[26] + -0.10393056 * x[25] + 0.0022765566 * x[24] + -0.33119878 * x[23] + 0.2782083 * x[22] + -0.123360015 * x[21] + 0.025293162 * x[20] + -0.007929003 * x[19] + -0.01797401 * x[18] + 0.020320946 * x[17] + 0.01114158 * x[16] + 0.015701612 * x[15] + -0.05040882 * x[14] + 0.034611806 * x[13] + -0.12274644 * x[12] + -0.04388386 * x[11] + -0.18019071 * x[10] + 0.05253041 * x[9] + -0.033485338 * x[8] + 0.009217285 * x[7] + 0.1105389 * x[6] + 0.3457651 * x[5] + 0.14669867 * x[4] + -0.8982547 * x[3] + 0.3701613 * x[2] + -0.3861521 * x[1] + 0.20651408 * x[0];
            if( v[22] >= 0. ) {
                v[22] = v[22];
            } else {
                v[22] = 0.;
            }
            v[23] = 0.4216865 + -0.019756494 * x[41] + 0.042074237 * x[40] + -0.00898822 * x[39] + -0.0040642642 * x[38] + 0.030363064 * x[37] + 0.019486252 * x[36] + 0.025235062 * x[35] + 0.006452393 * x[34] + -0.043264776 * x[33] + -0.09200482 * x[32] + 0.12309037 * x[31] + -0.14456739 * x[30] + 0.014989693 * x[29] + 0.07739735 * x[28] + 0.24769866 * x[27] + 0.49580377 * x[26] + 0.15949899 * x[25] + -0.38264778 * x[24] + 0.6927055 * x[23] + 0.08381169 * x[22] + -0.23329875 * x[21] + -0.018480485 * x[20] + 0.021155266 * x[19] + -0.024448877 * x[18] + -0.0025208776 * x[17] + 0.023419889 * x[16] + -0.0123721855 * x[15] + -0.012917531 * x[14] + -0.089780785 * x[13] + 0.09843888 * x[12] + -0.013947317 * x[11] + -0.25370637 * x[10] + 0.07798329 * x[9] + 0.06952299 * x[8] + -0.01352162 * x[7] + -0.32412174 * x[6] + 0.42596126 * x[5] + 0.11429074 * x[4] + -0.64017856 * x[3] + 0.16538866 * x[2] + 0.1685561 * x[1] + -0.22595419 * x[0];
            if( v[23] >= 0. ) {
                v[23] = v[23];
            } else {
                v[23] = 0.;
            }
            v[24] = 0.38031855 + 0.0102785565 * x[41] + -0.021690242 * x[40] + 0.003910267 * x[39] + -0.010198943 * x[38] + -0.01416702 * x[37] + -0.0059719235 * x[36] + 0.010378991 * x[35] + 0.008567761 * x[34] + -0.079105444 * x[33] + 0.03441417 * x[32] + 0.11989361 * x[31] + -0.1294787 * x[30] + 0.011490232 * x[29] + 0.010325469 * x[28] + -0.046967693 * x[27] + 0.5615253 * x[26] + -0.13751848 * x[25] + -0.723853 * x[24] + 0.2941864 * x[23] + -0.19642463 * x[22] + -0.0052232905 * x[21] + 0.006521848 * x[20] + -0.006635485 * x[19] + -0.03748891 * x[18] + 0.019155882 * x[17] + -0.029964147 * x[16] + -0.015547385 * x[15] + 0.007748875 * x[14] + -0.06594629 * x[13] + 0.04421663 * x[12] + -0.051591687 * x[11] + 0.086009644 * x[10] + -0.12860183 * x[9] + -0.18436335 * x[8] + -0.026225401 * x[7] + -0.24351317 * x[6] + 0.37286592 * x[5] + 0.13515194 * x[4] + 0.2988068 * x[3] + 0.04282668 * x[2] + -0.5415445 * x[1] + 0.2572622 * x[0];
            if( v[24] >= 0. ) {
                v[24] = v[24];
            } else {
                v[24] = 0.;
            }
            v[25] = 0.45011282 + -0.002529823 * x[41] + -0.016568312 * x[40] + 0.031109177 * x[39] + 0.03380403 * x[38] + -0.020590337 * x[37] + -0.015189352 * x[36] + -0.0040134345 * x[35] + 0.032514777 * x[34] + -0.054772537 * x[33] + -0.2025835 * x[32] + -0.053599376 * x[31] + -0.012057058 * x[30] + 0.05071522 * x[29] + -0.082801014 * x[28] + 0.049829785 * x[27] + 0.57324994 * x[26] + 0.372524 * x[25] + -0.3993851 * x[24] + 0.052861206 * x[23] + -0.25179985 * x[22] + 0.4199881 * x[21] + -0.012699721 * x[20] + -0.0013166852 * x[19] + 0.01701571 * x[18] + 0.011943835 * x[17] + 0.03208521 * x[16] + 0.0076153614 * x[15] + 0.016640197 * x[14] + -0.057268124 * x[13] + -0.029658465 * x[12] + 0.02949088 * x[11] + -0.104897656 * x[10] + 0.04128426 * x[9] + -0.024583003 * x[8] + 0.066565625 * x[7] + 0.20660177 * x[6] + -0.010607293 * x[5] + -0.11425608 * x[4] + -0.86388457 * x[3] + 0.10617338 * x[2] + -0.101406544 * x[1] + 0.2815743 * x[0];
            if( v[25] >= 0. ) {
                v[25] = v[25];
            } else {
                v[25] = 0.;
            }
            v[26] = 0.46107763 + 0.029183961 * x[41] + -0.032119825 * x[40] + 0.011172902 * x[39] + -0.0060633738 * x[38] + 0.040016096 * x[37] + -0.0022572933 * x[36] + -0.031487655 * x[35] + -0.12777859 * x[34] + -0.02022896 * x[33] + -0.07536032 * x[32] + 0.045492377 * x[31] + 0.033107135 * x[30] + -0.058562875 * x[29] + -0.101477735 * x[28] + 0.2860209 * x[27] + 0.57131845 * x[26] + 0.009220988 * x[25] + -0.41258845 * x[24] + -0.055692483 * x[23] + 0.11252058 * x[22] + 0.19809654 * x[21] + 0.016842721 * x[20] + 0.014093283 * x[19] + 0.036478203 * x[18] + 0.021741599 * x[17] + 0.022510363 * x[16] + 0.0071349842 * x[15] + -0.028825212 * x[14] + -0.04239444 * x[13] + 0.12336249 * x[12] + 0.16724391 * x[11] + 0.09511249 * x[10] + -0.025963245 * x[9] + -0.0735082 * x[8] + -0.0741496 * x[7] + -0.06373818 * x[6] + 0.8695722 * x[5] + 0.6207111 * x[4] + -0.03411581 * x[3] + -0.1566334 * x[2] + -0.24343912 * x[1] + -0.46365455 * x[0];
            if( v[26] >= 0. ) {
                v[26] = v[26];
            } else {
                v[26] = 0.;
            }
            v[27] = 0.6063655 + 0.0031405033 * x[41] + -0.026457964 * x[40] + -0.024205312 * x[39] + 0.007532936 * x[38] + 0.002768415 * x[37] + -0.008304563 * x[36] + -0.017848222 * x[35] + -0.029650604 * x[34] + 0.12393137 * x[33] + 0.07011889 * x[32] + 0.09613688 * x[31] + 0.1135668 * x[30] + -0.015527395 * x[29] + 0.016793208 * x[28] + 0.24633254 * x[27] + 0.38250142 * x[26] + -0.073515736 * x[25] + -0.6410415 * x[24] + -0.5124925 * x[23] + 0.071144596 * x[22] + -0.1879759 * x[21] + -0.016594708 * x[20] + -0.021486482 * x[19] + 0.0021882202 * x[18] + 0.013829489 * x[17] + 0.0023297665 * x[16] + 0.010453609 * x[15] + 0.021316946 * x[14] + -0.10337961 * x[13] + -0.07604864 * x[12] + -0.032093488 * x[11] + -0.016566038 * x[10] + -0.018138343 * x[9] + 0.05007103 * x[8] + 0.019053366 * x[7] + -0.0029934105 * x[6] + 0.3607004 * x[5] + 0.06507812 * x[4] + -0.3299108 * x[3] + 0.31984037 * x[2] + 0.89058304 * x[1] + -0.276927 * x[0];
            if( v[27] >= 0. ) {
                v[27] = v[27];
            } else {
                v[27] = 0.;
            }
            v[28] = 0.3938815 + 0.0025614752 * x[41] + -0.015524038 * x[40] + 0.009753026 * x[39] + 0.0034390788 * x[38] + -0.040094614 * x[37] + -0.009378648 * x[36] + -0.018330917 * x[35] + 0.10494398 * x[34] + 0.03633775 * x[33] + 0.03674029 * x[32] + 0.04052534 * x[31] + -0.03908605 * x[30] + 0.0013057012 * x[29] + 0.014271231 * x[28] + -0.5047225 * x[27] + 0.12253597 * x[26] + -0.09150194 * x[25] + -0.47917962 * x[24] + -0.1007045 * x[23] + 0.17904831 * x[22] + 0.57480085 * x[21] + -0.012340504 * x[20] + -0.00088929385 * x[19] + -0.038541965 * x[18] + 0.0016305993 * x[17] + 0.006193232 * x[16] + -0.011700565 * x[15] + 0.011490242 * x[14] + -0.054607294 * x[13] + 0.12464452 * x[12] + -0.0049057314 * x[11] + -0.07218792 * x[10] + 0.0007745299 * x[9] + 0.05254656 * x[8] + 0.031116012 * x[7] + 0.080839805 * x[6] + 0.82729197 * x[5] + 0.04021505 * x[4] + -0.28100723 * x[3] + 0.05699246 * x[2] + 0.15485097 * x[1] + -0.06462806 * x[0];
            if( v[28] >= 0. ) {
                v[28] = v[28];
            } else {
                v[28] = 0.;
            }
            v[29] = 0.35658824 + 0.038546633 * x[41] + 0.010794113 * x[40] + -0.039672863 * x[39] + 0.07390916 * x[38] + 0.07646146 * x[37] + 0.04307831 * x[36] + -0.026062237 * x[35] + -0.119112715 * x[34] + -0.0031805593 * x[33] + 0.0811373 * x[32] + -0.16641818 * x[31] + -0.07320566 * x[30] + -0.068956375 * x[29] + -0.072242655 * x[28] + -0.1667408 * x[27] + 0.5754413 * x[26] + -0.107141376 * x[25] + -0.016434494 * x[24] + -0.02702802 * x[23] + -0.21498895 * x[22] + 0.37732792 * x[21] + 0.074321724 * x[20] + -0.035941668 * x[19] + -0.028217813 * x[18] + 0.04619368 * x[17] + -0.0005208581 * x[16] + -0.018820697 * x[15] + 0.0015416126 * x[14] + 0.19289179 * x[13] + -0.15868609 * x[12] + -0.108434476 * x[11] + 0.12446933 * x[10] + -0.2035496 * x[9] + 0.06776135 * x[8] + -0.02551532 * x[7] + 0.08157426 * x[6] + -0.057041064 * x[5] + -0.09354078 * x[4] + -0.24358228 * x[3] + -0.21863788 * x[2] + -0.19283815 * x[1] + 0.14050175 * x[0];
            if( v[29] >= 0. ) {
                v[29] = v[29];
            } else {
                v[29] = 0.;
            }
            v[30] = 0.5186406 + 0.001691173 * x[41] + -0.035514247 * x[40] + 0.013831648 * x[39] + 0.013522779 * x[38] + 0.015314625 * x[37] + -0.0061452747 * x[36] + -0.019132975 * x[35] + -0.00029439156 * x[34] + 0.12117218 * x[33] + 0.0061586425 * x[32] + -0.09574023 * x[31] + 0.007675774 * x[30] + -0.0731236 * x[29] + 0.006904123 * x[28] + -0.33660832 * x[27] + 0.07372 * x[26] + -0.19493073 * x[25] + -0.31539503 * x[24] + 0.15371539 * x[23] + -0.23220137 * x[22] + 0.033310253 * x[21] + 0.024101848 * x[20] + 0.032169234 * x[19] + -0.02310458 * x[18] + 0.011362821 * x[17] + 0.041584957 * x[16] + 0.0127901975 * x[15] + -0.011697769 * x[14] + -0.023991894 * x[13] + 0.0024287049 * x[12] + 0.051428508 * x[11] + -0.022689147 * x[10] + 0.035337362 * x[9] + 0.06561387 * x[8] + 0.2156825 * x[7] + -0.16835202 * x[6] + 0.5552527 * x[5] + 0.15171306 * x[4] + -0.663086 * x[3] + 0.16590883 * x[2] + 0.57300097 * x[1] + 0.657756 * x[0];
            if( v[30] >= 0. ) {
                v[30] = v[30];
            } else {
                v[30] = 0.;
            }
            v[31] = 0.44875717 + -0.00948387 * x[41] + 0.020136574 * x[40] + 0.0014275068 * x[39] + -0.01189122 * x[38] + 0.02398466 * x[37] + 0.0073721902 * x[36] + 0.029877199 * x[35] + 0.08110428 * x[34] + -0.1820837 * x[33] + 0.007550482 * x[32] + 0.005581297 * x[31] + -0.032781024 * x[30] + -0.06073707 * x[29] + -0.0828563 * x[28] + -0.5040136 * x[27] + 0.47751182 * x[26] + -0.052033193 * x[25] + -0.13441409 * x[24] + 0.069959335 * x[23] + -0.10365669 * x[22] + 0.2500868 * x[21] + -0.013178023 * x[20] + -0.014379348 * x[19] + 0.018827345 * x[18] + -0.012217596 * x[17] + 0.00090849434 * x[16] + 0.03841812 * x[15] + -0.013661643 * x[14] + -0.061381698 * x[13] + 0.0302136 * x[12] + -0.046379372 * x[11] + -0.061333016 * x[10] + 0.09555146 * x[9] + 0.036907077 * x[8] + -0.15176669 * x[7] + -0.3856924 * x[6] + 0.36897483 * x[5] + -0.006263384 * x[4] + -0.651757 * x[3] + 0.1855855 * x[2] + -0.057331167 * x[1] + -0.3714069 * x[0];
            if( v[31] >= 0. ) {
                v[31] = v[31];
            } else {
                v[31] = 0.;
            }
            v[32] = 0.011045071 + 0.12080748 * v[0] + -0.038693525 * v[1] + 0.11271527 * v[2] + -0.24081995 * v[3] + 0.18538998 * v[4] + 0.11226686 * v[5] + -0.32375726 * v[6] + -0.05405131 * v[7] + -0.07112618 * v[8] + -0.1916739 * v[9] + 0.08025158 * v[10] + 0.22484341 * v[11] + -0.1755184 * v[12] + -0.17835315 * v[13] + -0.023502491 * v[14] + 0.06493885 * v[15] + -0.020504246 * v[16] + -0.31848365 * v[17] + -0.48242712 * v[18] + 0.12399322 * v[19] + -0.105744384 * v[20] + 0.09640045 * v[21] + 0.15567783 * v[22] + 0.08175411 * v[23] + 0.13129804 * v[24] + -0.24091235 * v[25] + 0.045282528 * v[26] + -0.11599885 * v[27] + 0.07663322 * v[28] + -0.11684341 * v[29] + -0.05223796 * v[30] + -0.07594404 * v[31];
            if( v[32] >= 0. ) {
                v[32] = v[32];
            } else {
                v[32] = 0.;
            }
            v[33] = -0.03038328 + 0.32064804 * v[0] + 0.16052242 * v[1] + -0.092446506 * v[2] + 0.09625639 * v[3] + -0.21028306 * v[4] + -0.12198328 * v[5] + 0.28941026 * v[6] + 0.0131125925 * v[7] + -0.032386854 * v[8] + -0.038226146 * v[9] + 0.06478204 * v[10] + -0.08751868 * v[11] + -0.2962758 * v[12] + -0.07307099 * v[13] + -0.02839552 * v[14] + -0.18500927 * v[15] + -0.1825617 * v[16] + 0.29490456 * v[17] + -0.007079788 * v[18] + -0.13727805 * v[19] + 0.19089179 * v[20] + -0.055029083 * v[21] + -0.058299944 * v[22] + -0.022644004 * v[23] + 0.15299839 * v[24] + -0.011342115 * v[25] + 0.06818517 * v[26] + -0.28338867 * v[27] + -0.11443164 * v[28] + -0.021481501 * v[29] + -0.19097239 * v[30] + 0.15357311 * v[31];
            if( v[33] >= 0. ) {
                v[33] = v[33];
            } else {
                v[33] = 0.;
            }
            v[34] = 0.09872975 + -0.20152843 * v[0] + 0.286615 * v[1] + -0.20627925 * v[2] + -0.16949981 * v[3] + 0.09656208 * v[4] + -0.049794614 * v[5] + 0.037357684 * v[6] + -0.124821216 * v[7] + 0.016844919 * v[8] + -0.12970349 * v[9] + -0.11550546 * v[10] + -0.07932449 * v[11] + -0.21931742 * v[12] + -0.00966513 * v[13] + 0.15919189 * v[14] + -0.0062153856 * v[15] + 0.041991614 * v[16] + -0.117508635 * v[17] + 0.053449154 * v[18] + -0.25428987 * v[19] + 0.215104 * v[20] + -0.11749827 * v[21] + -0.37825873 * v[22] + -0.07650663 * v[23] + 0.10516194 * v[24] + 0.09794498 * v[25] + 0.21729062 * v[26] + 0.036196508 * v[27] + -0.08257091 * v[28] + 0.20898889 * v[29] + -0.072596475 * v[30] + -0.013310375 * v[31];
            if( v[34] >= 0. ) {
                v[34] = v[34];
            } else {
                v[34] = 0.;
            }
            v[35] = 0.12224903 + -0.0347539 * v[0] + -0.09381236 * v[1] + -0.058483496 * v[2] + 0.024140682 * v[3] + -0.1055036 * v[4] + 0.0783524 * v[5] + -0.008040462 * v[6] + 0.41629905 * v[7] + -0.36087945 * v[8] + 0.08606971 * v[9] + 0.3042929 * v[10] + 0.18412098 * v[11] + 0.013194106 * v[12] + 0.06442016 * v[13] + 0.18328004 * v[14] + -0.019241806 * v[15] + 0.20677526 * v[16] + 0.039869573 * v[17] + -0.016450737 * v[18] + -0.02933613 * v[19] + 0.110828206 * v[20] + 0.0151860835 * v[21] + -0.17274675 * v[22] + 0.09547706 * v[23] + 0.19712426 * v[24] + 0.3391383 * v[25] + 0.06523779 * v[26] + 0.24193145 * v[27] + -0.31312662 * v[28] + -0.12948911 * v[29] + -0.29716974 * v[30] + 0.18293084 * v[31];
            if( v[35] >= 0. ) {
                v[35] = v[35];
            } else {
                v[35] = 0.;
            }
            v[36] = -0.07906668 + -0.06092701 * v[0] + 0.017197905 * v[1] + 0.124682985 * v[2] + 0.21680397 * v[3] + -0.1352819 * v[4] + 0.03591085 * v[5] + -0.10890361 * v[6] + -0.12700745 * v[7] + 0.07219714 * v[8] + 0.34041962 * v[9] + 0.1455349 * v[10] + 0.014171684 * v[11] + -0.18873246 * v[12] + -0.1937772 * v[13] + 0.23485522 * v[14] + -0.08899108 * v[15] + 0.023345208 * v[16] + 0.24620666 * v[17] + 0.1274286 * v[18] + 0.055801697 * v[19] + -0.12114848 * v[20] + 0.0411564 * v[21] + 0.0071635395 * v[22] + 0.48863348 * v[23] + -0.0290224 * v[24] + 0.03959128 * v[25] + 0.0707487 * v[26] + 0.013832613 * v[27] + -0.077683955 * v[28] + -0.055881802 * v[29] + -0.15840942 * v[30] + 0.12712212 * v[31];
            if( v[36] >= 0. ) {
                v[36] = v[36];
            } else {
                v[36] = 0.;
            }
            v[37] = 0.07114318 + 0.120489985 * v[0] + -0.08244935 * v[1] + -0.07784002 * v[2] + -0.1313284 * v[3] + 0.23494582 * v[4] + 0.19351476 * v[5] + 0.044116706 * v[6] + 0.18211375 * v[7] + -0.07673133 * v[8] + 0.36260042 * v[9] + 0.011853409 * v[10] + -0.12058994 * v[11] + 0.093955964 * v[12] + 0.052768175 * v[13] + 0.14825611 * v[14] + 0.056946106 * v[15] + 0.06859665 * v[16] + -0.09432884 * v[17] + -0.117292784 * v[18] + -0.078071445 * v[19] + 0.19533743 * v[20] + 0.12603176 * v[21] + -0.029986266 * v[22] + 0.008106839 * v[23] + 0.1628857 * v[24] + -0.016454525 * v[25] + -0.16925882 * v[26] + -0.005268063 * v[27] + 0.07220029 * v[28] + 0.19445285 * v[29] + 0.045603514 * v[30] + 0.29216212 * v[31];
            if( v[37] >= 0. ) {
                v[37] = v[37];
            } else {
                v[37] = 0.;
            }
            v[38] = 0.10763011 + -0.083913304 * v[0] + -0.08006512 * v[1] + -0.005641779 * v[2] + 0.38138023 * v[3] + -0.13278079 * v[4] + 0.06782974 * v[5] + -0.059197158 * v[6] + 0.39541593 * v[7] + -0.09084536 * v[8] + -0.1482295 * v[9] + -0.26240933 * v[10] + -0.1945462 * v[11] + 0.069007605 * v[12] + -0.023385588 * v[13] + -0.10660007 * v[14] + 0.13019224 * v[15] + 0.07704325 * v[16] + 0.23282652 * v[17] + 0.16903283 * v[18] + 0.11492829 * v[19] + 0.18576913 * v[20] + 0.06370743 * v[21] + 0.20203327 * v[22] + 0.06214854 * v[23] + 0.2251967 * v[24] + 0.4876641 * v[25] + 0.14696132 * v[26] + -0.20977695 * v[27] + 0.10838017 * v[28] + 0.17373611 * v[29] + -0.23325925 * v[30] + 0.18512262 * v[31];
            if( v[38] >= 0. ) {
                v[38] = v[38];
            } else {
                v[38] = 0.;
            }
            v[39] = 0.1449788 + 0.20840967 * v[0] + 0.04556208 * v[1] + -0.014699522 * v[2] + -0.09147115 * v[3] + 0.09694177 * v[4] + 0.03676226 * v[5] + -0.03125908 * v[6] + -0.011214287 * v[7] + 0.16964522 * v[8] + 0.22658326 * v[9] + 0.067786984 * v[10] + 0.019379308 * v[11] + 0.22634579 * v[12] + -0.0032718226 * v[13] + 0.075773805 * v[14] + 0.036618322 * v[15] + -0.18528594 * v[16] + 0.103848055 * v[17] + -0.15532283 * v[18] + -0.10127099 * v[19] + -0.093017645 * v[20] + 0.026481543 * v[21] + -0.12603822 * v[22] + 0.2975432 * v[23] + 0.25359428 * v[24] + 0.19679645 * v[25] + 0.33962005 * v[26] + -0.4209039 * v[27] + 0.100671545 * v[28] + 0.012218339 * v[29] + 0.002157256 * v[30] + 0.10420414 * v[31];
            if( v[39] >= 0. ) {
                v[39] = v[39];
            } else {
                v[39] = 0.;
            }
            v[40] = -0.088252 + 0.11771792 * v[0] + -0.26793832 * v[1] + 0.10165175 * v[2] + -0.11801561 * v[3] + 0.044410378 * v[4] + 0.09696553 * v[5] + -0.1884896 * v[6] + -0.19905356 * v[7] + 0.036321983 * v[8] + -0.00021417059 * v[9] + -0.14687492 * v[10] + 0.11961182 * v[11] + -0.014644684 * v[12] + -0.11285815 * v[13] + -0.09633038 * v[14] + -0.16462024 * v[15] + 0.04300786 * v[16] + -0.12681411 * v[17] + 0.00928398 * v[18] + -0.0045102723 * v[19] + 0.14621997 * v[20] + 0.19729255 * v[21] + -0.058873687 * v[22] + 0.01558082 * v[23] + 0.08330365 * v[24] + 0.021263434 * v[25] + -0.011318493 * v[26] + 0.039567962 * v[27] + 0.025071662 * v[28] + 0.008634349 * v[29] + -0.06357191 * v[30] + 0.14041959 * v[31];
            if( v[40] >= 0. ) {
                v[40] = v[40];
            } else {
                v[40] = 0.;
            }
            v[41] = 0.14110811 + 0.028746959 * v[0] + -0.119264975 * v[1] + -0.06617704 * v[2] + 0.007456596 * v[3] + 0.02980669 * v[4] + 0.10800463 * v[5] + -0.09136796 * v[6] + -0.06327414 * v[7] + 0.14497444 * v[8] + 0.05418973 * v[9] + 0.24827935 * v[10] + 0.1779579 * v[11] + 0.30894017 * v[12] + -0.06319764 * v[13] + 0.06469466 * v[14] + -0.11482351 * v[15] + -0.11582185 * v[16] + 0.19897418 * v[17] + 0.0043248073 * v[18] + 0.062124565 * v[19] + -0.069336325 * v[20] + 0.004812215 * v[21] + 0.05735844 * v[22] + -0.09890218 * v[23] + -0.20602591 * v[24] + 0.22955987 * v[25] + 0.02994797 * v[26] + -0.000613459 * v[27] + 0.30925518 * v[28] + -0.04180349 * v[29] + -0.09409945 * v[30] + 0.24299791 * v[31];
            if( v[41] >= 0. ) {
                v[41] = v[41];
            } else {
                v[41] = 0.;
            }
            v[42] = 0.029506166 + -0.06456165 * v[0] + -0.07316793 * v[1] + 0.045859285 * v[2] + 0.35669965 * v[3] + 0.037692666 * v[4] + 0.03289017 * v[5] + -0.010298156 * v[6] + -0.16417772 * v[7] + 0.18716303 * v[8] + 0.14007019 * v[9] + 0.33120018 * v[10] + 0.09002663 * v[11] + -0.25233117 * v[12] + 0.24655552 * v[13] + 0.24071363 * v[14] + -0.010542398 * v[15] + -0.30734923 * v[16] + 0.017850265 * v[17] + 0.26729324 * v[18] + -0.041966457 * v[19] + -0.045064997 * v[20] + -0.064846925 * v[21] + 0.0017731463 * v[22] + 0.0013096083 * v[23] + 0.18638778 * v[24] + 0.186547 * v[25] + -0.015647782 * v[26] + -0.031951662 * v[27] + 0.22755459 * v[28] + 0.16213702 * v[29] + 0.07308709 * v[30] + -0.09707949 * v[31];
            if( v[42] >= 0. ) {
                v[42] = v[42];
            } else {
                v[42] = 0.;
            }
            v[43] = -0.050472006 + -0.0634411 * v[0] + 0.034270372 * v[1] + 0.3880387 * v[2] + -0.21738856 * v[3] + -0.067037724 * v[4] + -0.06772475 * v[5] + -0.04245801 * v[6] + 0.10118414 * v[7] + -0.1260818 * v[8] + -0.24831538 * v[9] + 0.24117465 * v[10] + -0.09830068 * v[11] + 0.3256132 * v[12] + 0.2215151 * v[13] + -0.1199707 * v[14] + 0.0598676 * v[15] + 0.25747523 * v[16] + -0.18744405 * v[17] + 0.008570451 * v[18] + -0.021664962 * v[19] + 0.049882255 * v[20] + -0.0063546663 * v[21] + 0.124503404 * v[22] + 0.25223875 * v[23] + 0.061378617 * v[24] + -0.004439716 * v[25] + 0.17370826 * v[26] + -0.08122475 * v[27] + 0.20670222 * v[28] + -0.082151905 * v[29] + 0.11465692 * v[30] + 0.54607064 * v[31];
            if( v[43] >= 0. ) {
                v[43] = v[43];
            } else {
                v[43] = 0.;
            }
            v[44] = -0.03864541 + -0.12772918 * v[0] + -0.22696209 * v[1] + -0.027627451 * v[2] + -0.02487159 * v[3] + -0.14935687 * v[4] + -0.11277608 * v[5] + 0.008256927 * v[6] + 0.0060055233 * v[7] + -0.16719632 * v[8] + 0.18593264 * v[9] + -0.23753692 * v[10] + 0.07072127 * v[11] + -0.15559614 * v[12] + -0.15078735 * v[13] + 0.070566505 * v[14] + 0.014631898 * v[15] + -0.19740234 * v[16] + 0.24310657 * v[17] + -0.043541137 * v[18] + -0.06353278 * v[19] + 0.36797357 * v[20] + 0.17591538 * v[21] + -0.08974697 * v[22] + 0.022933349 * v[23] + -0.18508798 * v[24] + -0.0953126 * v[25] + 0.09141896 * v[26] + -0.4081232 * v[27] + -0.2425001 * v[28] + 0.13675249 * v[29] + -0.14637089 * v[30] + 0.0032802485 * v[31];
            if( v[44] >= 0. ) {
                v[44] = v[44];
            } else {
                v[44] = 0.;
            }
            v[45] = 0.018139431 + 0.034471612 * v[0] + -0.13053097 * v[1] + 0.16501418 * v[2] + 0.050713748 * v[3] + -0.10522145 * v[4] + 0.26515687 * v[5] + 0.04119323 * v[6] + 0.05718895 * v[7] + 0.008905702 * v[8] + -0.31844163 * v[9] + 0.2410746 * v[10] + -0.0460905 * v[11] + -0.047974877 * v[12] + 0.055196654 * v[13] + 0.14982897 * v[14] + -0.031173173 * v[15] + 0.03968088 * v[16] + 0.25812882 * v[17] + -0.27082047 * v[18] + 0.05134503 * v[19] + -0.21077503 * v[20] + -0.24224113 * v[21] + -0.30380878 * v[22] + -0.06270247 * v[23] + -0.2096978 * v[24] + -0.08366993 * v[25] + 0.20646118 * v[26] + -0.3421536 * v[27] + -0.080360256 * v[28] + 0.04067191 * v[29] + -0.06459485 * v[30] + -0.06107681 * v[31];
            if( v[45] >= 0. ) {
                v[45] = v[45];
            } else {
                v[45] = 0.;
            }
            v[46] = 0.054114968 + -0.037002143 * v[0] + 0.08404373 * v[1] + -0.12818007 * v[2] + 0.028168727 * v[3] + 0.34706908 * v[4] + -0.03646996 * v[5] + 0.058795184 * v[6] + 0.11486161 * v[7] + 0.251889 * v[8] + 0.30188778 * v[9] + 0.08789576 * v[10] + -0.039889622 * v[11] + 0.15436904 * v[12] + 0.01620518 * v[13] + -0.33934253 * v[14] + -0.028454013 * v[15] + 0.22972916 * v[16] + 0.036268733 * v[17] + 0.11606158 * v[18] + 0.20840733 * v[19] + 0.2122057 * v[20] + 0.06919665 * v[21] + 0.20108706 * v[22] + 0.16792026 * v[23] + 0.030062022 * v[24] + 0.2810124 * v[25] + 0.075817734 * v[26] + -0.12312169 * v[27] + -0.27558696 * v[28] + -0.0889362 * v[29] + -0.32144943 * v[30] + -0.080414966 * v[31];
            if( v[46] >= 0. ) {
                v[46] = v[46];
            } else {
                v[46] = 0.;
            }
            v[47] = 0.1274001 + 0.27756235 * v[0] + 0.16446282 * v[1] + 0.23299934 * v[2] + -0.07333061 * v[3] + 0.10755677 * v[4] + 0.123636656 * v[5] + 0.09735748 * v[6] + 0.5666774 * v[7] + 0.38584033 * v[8] + 0.034845307 * v[9] + 0.0933562 * v[10] + 0.15054096 * v[11] + -0.3615153 * v[12] + 0.07579986 * v[13] + -0.054541137 * v[14] + -0.0642111 * v[15] + 0.32280472 * v[16] + -0.0044350014 * v[17] + -0.107655145 * v[18] + -0.13135004 * v[19] + -0.18848413 * v[20] + -0.05186833 * v[21] + 0.22303428 * v[22] + 0.1271138 * v[23] + -0.109265335 * v[24] + 0.1664256 * v[25] + 0.107234396 * v[26] + 0.12174623 * v[27] + -0.043665763 * v[28] + 0.08954285 * v[29] + 0.03712345 * v[30] + -0.098434076 * v[31];
            if( v[47] >= 0. ) {
                v[47] = v[47];
            } else {
                v[47] = 0.;
            }
            v[48] = -0.09679394 + 0.31445947 * v[0] + -0.11170347 * v[1] + -0.12739126 * v[2] + -0.033986248 * v[3] + -0.0072230957 * v[4] + 0.16583332 * v[5] + -0.044895593 * v[6] + -0.11555739 * v[7] + -0.13963093 * v[8] + 0.012672786 * v[9] + -0.3013652 * v[10] + -0.031015087 * v[11] + 0.20593344 * v[12] + -0.10168771 * v[13] + -0.2205904 * v[14] + -0.34847513 * v[15] + -0.12546979 * v[16] + 0.09749938 * v[17] + -0.06267596 * v[18] + 0.05813337 * v[19] + -0.047091227 * v[20] + 0.12826648 * v[21] + -0.1294984 * v[22] + -0.005824611 * v[23] + -0.26994044 * v[24] + 0.38310927 * v[25] + -0.07250371 * v[26] + 0.00431083 * v[27] + -0.20937835 * v[28] + -0.022363609 * v[29] + -0.23787192 * v[30] + -0.12204048 * v[31];
            if( v[48] >= 0. ) {
                v[48] = v[48];
            } else {
                v[48] = 0.;
            }
            v[49] = 0.10107208 + -0.16769944 * v[0] + -0.11423211 * v[1] + 0.026929177 * v[2] + 0.09291595 * v[3] + 0.18535598 * v[4] + 0.07627842 * v[5] + -0.030332867 * v[6] + -0.21116723 * v[7] + -0.2608689 * v[8] + 0.292153 * v[9] + 0.17729114 * v[10] + -0.14419344 * v[11] + 0.0777045 * v[12] + -0.21465565 * v[13] + 0.13731663 * v[14] + 0.25003058 * v[15] + 0.13987081 * v[16] + 0.23416209 * v[17] + -0.070530295 * v[18] + -0.0046987226 * v[19] + 0.14852752 * v[20] + 0.028156137 * v[21] + -0.19126166 * v[22] + 0.108619325 * v[23] + -0.17280337 * v[24] + 0.08688181 * v[25] + 0.046957728 * v[26] + 0.25098157 * v[27] + 0.17208175 * v[28] + 0.11935186 * v[29] + -0.11288747 * v[30] + 0.26253852 * v[31];
            if( v[49] >= 0. ) {
                v[49] = v[49];
            } else {
                v[49] = 0.;
            }
            v[50] = -0.1482471 + -0.19937259 * v[0] + -0.115093745 * v[1] + -0.108516835 * v[2] + -0.31231663 * v[3] + -0.013276567 * v[4] + -0.30661058 * v[5] + 0.06694363 * v[6] + -0.013362223 * v[7] + -0.05083557 * v[8] + 0.028564315 * v[9] + 0.10222743 * v[10] + -0.11929773 * v[11] + -0.007192807 * v[12] + -0.36022824 * v[13] + -0.24723208 * v[14] + -0.07785344 * v[15] + -0.17482105 * v[16] + 0.17578925 * v[17] + -0.25861546 * v[18] + 0.2928179 * v[19] + -0.14436561 * v[20] + 0.049526826 * v[21] + 0.10900783 * v[22] + 0.0040587247 * v[23] + -0.17024358 * v[24] + 0.058137525 * v[25] + -0.073968 * v[26] + -0.14571723 * v[27] + -0.46283457 * v[28] + -0.42093068 * v[29] + -0.20158496 * v[30] + 0.30236384 * v[31];
            if( v[50] >= 0. ) {
                v[50] = v[50];
            } else {
                v[50] = 0.;
            }
            v[51] = 0.055827994 + -0.08874712 * v[0] + -0.063009284 * v[1] + 0.0835531 * v[2] + -0.06783483 * v[3] + 0.443515 * v[4] + -0.02314788 * v[5] + 0.03794356 * v[6] + 0.51173913 * v[7] + -0.16455576 * v[8] + 0.062716894 * v[9] + 0.25577515 * v[10] + -0.16801746 * v[11] + -0.2978957 * v[12] + 0.22925718 * v[13] + -0.10926127 * v[14] + 0.014020354 * v[15] + -0.083502665 * v[16] + -0.11995714 * v[17] + 0.035485957 * v[18] + 0.032999765 * v[19] + 0.058892433 * v[20] + 0.065263905 * v[21] + -0.07486527 * v[22] + 0.16929013 * v[23] + 0.02629936 * v[24] + 0.06307553 * v[25] + -0.16148534 * v[26] + 0.061184227 * v[27] + 0.16336244 * v[28] + -0.14637579 * v[29] + 0.071253315 * v[30] + 0.13118494 * v[31];
            if( v[51] >= 0. ) {
                v[51] = v[51];
            } else {
                v[51] = 0.;
            }
            v[52] = 0.09717489 + -0.0062080612 * v[0] + 0.027683012 * v[1] + 0.18626817 * v[2] + 0.002038281 * v[3] + 0.08023954 * v[4] + 0.08605398 * v[5] + 0.009930874 * v[6] + 0.20090464 * v[7] + 0.00947522 * v[8] + -0.10446146 * v[9] + 0.15535888 * v[10] + -0.12135724 * v[11] + 0.22454944 * v[12] + -0.22671539 * v[13] + 0.14127746 * v[14] + 0.106113754 * v[15] + -0.018867588 * v[16] + 0.06494789 * v[17] + 0.31427002 * v[18] + -0.06958633 * v[19] + 0.04222786 * v[20] + 0.19861262 * v[21] + 0.24101417 * v[22] + 0.13634475 * v[23] + -0.101036295 * v[24] + 0.27288797 * v[25] + -0.25396836 * v[26] + 0.08320928 * v[27] + 0.039360177 * v[28] + -0.103314266 * v[29] + 0.22304767 * v[30] + -0.13214986 * v[31];
            if( v[52] >= 0. ) {
                v[52] = v[52];
            } else {
                v[52] = 0.;
            }
            v[53] = 0.011876074 + 0.06035271 * v[0] + 0.15499547 * v[1] + -0.16588634 * v[2] + 0.35034505 * v[3] + 0.10440211 * v[4] + -0.12227286 * v[5] + 0.12568095 * v[6] + -0.10876821 * v[7] + 0.28187686 * v[8] + -0.17564441 * v[9] + 0.17399327 * v[10] + -0.267071 * v[11] + 0.16718793 * v[12] + 0.4395746 * v[13] + 0.03976862 * v[14] + -0.13686375 * v[15] + 0.24044003 * v[16] + 0.19351377 * v[17] + -0.21896411 * v[18] + 0.025935072 * v[19] + -0.10827367 * v[20] + 0.14108278 * v[21] + -0.07808033 * v[22] + 0.33351567 * v[23] + -0.19152056 * v[24] + 0.18206896 * v[25] + -0.23468074 * v[26] + 0.08777481 * v[27] + -0.20630428 * v[28] + 0.10636799 * v[29] + -0.002299426 * v[30] + 0.30858907 * v[31];
            if( v[53] >= 0. ) {
                v[53] = v[53];
            } else {
                v[53] = 0.;
            }
            v[54] = -0.11451184 + -0.027813977 * v[0] + 0.10049674 * v[1] + -0.3036747 * v[2] + -0.015146908 * v[3] + -0.17679168 * v[4] + -0.32051572 * v[5] + -0.036896378 * v[6] + -0.08344757 * v[7] + 0.057456847 * v[8] + -0.45643792 * v[9] + 0.036117528 * v[10] + -0.21799038 * v[11] + -0.15075225 * v[12] + -0.28475642 * v[13] + -0.3394165 * v[14] + -0.05413457 * v[15] + 0.035712894 * v[16] + -0.056178506 * v[17] + -0.08426318 * v[18] + -0.06656612 * v[19] + -0.09880485 * v[20] + 0.18051937 * v[21] + -0.13037747 * v[22] + 0.03786959 * v[23] + -0.019064873 * v[24] + 0.16190054 * v[25] + 0.0048123193 * v[26] + -0.10115348 * v[27] + -0.10694069 * v[28] + 0.27899304 * v[29] + -0.17608692 * v[30] + -0.034476113 * v[31];
            if( v[54] >= 0. ) {
                v[54] = v[54];
            } else {
                v[54] = 0.;
            }
            v[55] = 0.10499516 + 0.061926503 * v[0] + -0.18011642 * v[1] + -0.045290913 * v[2] + -0.1964904 * v[3] + 0.019499905 * v[4] + 0.03906884 * v[5] + 0.09063969 * v[6] + 0.06545578 * v[7] + 0.44716233 * v[8] + -0.24663176 * v[9] + 0.075813666 * v[10] + -0.057871062 * v[11] + -0.02640275 * v[12] + -0.21698888 * v[13] + 0.2715348 * v[14] + 0.03755247 * v[15] + 0.11667897 * v[16] + -0.09113142 * v[17] + -0.0150798345 * v[18] + 0.11946954 * v[19] + 0.4122624 * v[20] + 0.027637305 * v[21] + -0.051146608 * v[22] + 0.40578356 * v[23] + 0.14276525 * v[24] + 0.19787675 * v[25] + 0.23079187 * v[26] + 0.0756764 * v[27] + -0.03285298 * v[28] + 0.033433694 * v[29] + -0.03238375 * v[30] + -0.09595391 * v[31];
            if( v[55] >= 0. ) {
                v[55] = v[55];
            } else {
                v[55] = 0.;
            }
            v[56] = 0.18667673 + 0.08722481 * v[0] + -0.10771175 * v[1] + 0.3156027 * v[2] + 0.28315234 * v[3] + -0.06357187 * v[4] + 0.07477941 * v[5] + -0.045783836 * v[6] + 0.031908043 * v[7] + 0.02954539 * v[8] + 0.43117517 * v[9] + -0.0683224 * v[10] + -0.1005702 * v[11] + 0.37778533 * v[12] + 0.26621157 * v[13] + 0.02679367 * v[14] + 0.16434397 * v[15] + -0.07022732 * v[16] + -0.20924376 * v[17] + 0.120088965 * v[18] + 0.25820586 * v[19] + -0.34154028 * v[20] + 0.118219055 * v[21] + 0.13270459 * v[22] + 0.28507784 * v[23] + 0.4415288 * v[24] + -0.23704742 * v[25] + 0.068600014 * v[26] + 0.14381832 * v[27] + -0.016669406 * v[28] + -0.08832641 * v[29] + -0.028486935 * v[30] + -0.15988688 * v[31];
            if( v[56] >= 0. ) {
                v[56] = v[56];
            } else {
                v[56] = 0.;
            }
            v[57] = 0.15533903 + 0.004847629 * v[0] + 0.020218296 * v[1] + 0.19127123 * v[2] + 0.0377268 * v[3] + 0.42542118 * v[4] + -0.035432413 * v[5] + 0.02891643 * v[6] + 0.46665597 * v[7] + -0.058545467 * v[8] + -0.14875576 * v[9] + -0.060755692 * v[10] + 0.10591462 * v[11] + 0.2473475 * v[12] + -0.10568675 * v[13] + 0.31818384 * v[14] + 0.11457729 * v[15] + -0.040544253 * v[16] + 0.26056695 * v[17] + -0.30657944 * v[18] + 0.111323714 * v[19] + -0.20736594 * v[20] + -0.090895034 * v[21] + 0.06304057 * v[22] + 0.09909904 * v[23] + 0.2717571 * v[24] + -0.20537479 * v[25] + 0.08355555 * v[26] + 0.022119667 * v[27] + 0.115785114 * v[28] + -0.011914493 * v[29] + 0.01106882 * v[30] + -0.14752363 * v[31];
            if( v[57] >= 0. ) {
                v[57] = v[57];
            } else {
                v[57] = 0.;
            }
            v[58] = -0.003948484 + -0.15188968 * v[0] + 0.098271735 * v[1] + -0.11570006 * v[2] + -0.24420919 * v[3] + 0.04665338 * v[4] + -0.014679341 * v[5] + -0.4509981 * v[6] + -0.33939192 * v[7] + -0.22063458 * v[8] + -0.022123631 * v[9] + 0.028877666 * v[10] + -0.10532718 * v[11] + -0.15504503 * v[12] + 0.12892371 * v[13] + 0.11878854 * v[14] + -0.11425651 * v[15] + -0.041402016 * v[16] + -0.06553557 * v[17] + -0.0898107 * v[18] + -0.15650433 * v[19] + -0.1390739 * v[20] + -0.026192682 * v[21] + -0.21429119 * v[22] + 0.35371727 * v[23] + -0.0690755 * v[24] + 0.027972188 * v[25] + -0.19970135 * v[26] + -0.29432595 * v[27] + 0.047739826 * v[28] + -0.03209171 * v[29] + -0.0083063645 * v[30] + -0.11457765 * v[31];
            if( v[58] >= 0. ) {
                v[58] = v[58];
            } else {
                v[58] = 0.;
            }
            v[59] = 0.104675256 + -0.047157258 * v[0] + 0.135346 * v[1] + -0.05052254 * v[2] + 0.056405123 * v[3] + 0.316631 * v[4] + 0.032238353 * v[5] + -0.07119569 * v[6] + -0.15011114 * v[7] + 0.09676092 * v[8] + 0.0030663526 * v[9] + -0.24075724 * v[10] + -0.10552666 * v[11] + 0.02862181 * v[12] + 0.1840296 * v[13] + -0.06871417 * v[14] + 0.08064145 * v[15] + 0.21270134 * v[16] + 0.04263363 * v[17] + 0.21731584 * v[18] + -0.00048734795 * v[19] + 0.06532227 * v[20] + 0.21263574 * v[21] + -0.32837147 * v[22] + 0.44654647 * v[23] + 0.09729402 * v[24] + -0.13107148 * v[25] + 0.2208071 * v[26] + -0.021385824 * v[27] + 0.36896282 * v[28] + -0.15551023 * v[29] + 0.39345554 * v[30] + 0.16125405 * v[31];
            if( v[59] >= 0. ) {
                v[59] = v[59];
            } else {
                v[59] = 0.;
            }
            v[60] = 0.12279483 + -0.10149991 * v[0] + -0.0047379066 * v[1] + -0.05330591 * v[2] + 0.19066623 * v[3] + 0.28986317 * v[4] + -0.0013042354 * v[5] + -0.063265465 * v[6] + 0.03778133 * v[7] + 0.25828 * v[8] + -0.20892578 * v[9] + 0.34094727 * v[10] + -0.010844692 * v[11] + 0.275075 * v[12] + 0.051651154 * v[13] + -0.18115067 * v[14] + 0.12937184 * v[15] + -0.025158446 * v[16] + -0.09508936 * v[17] + 0.021125928 * v[18] + 0.02230364 * v[19] + 0.1599938 * v[20] + -0.004329381 * v[21] + 0.011460764 * v[22] + -0.113258496 * v[23] + 0.2704437 * v[24] + -0.13470377 * v[25] + 0.34887952 * v[26] + -0.043666065 * v[27] + 0.039997112 * v[28] + 0.07773919 * v[29] + -0.09289339 * v[30] + -0.15144025 * v[31];
            if( v[60] >= 0. ) {
                v[60] = v[60];
            } else {
                v[60] = 0.;
            }
            v[61] = 0.16756406 + 0.25231543 * v[0] + 0.054596696 * v[1] + -0.025083955 * v[2] + -0.35267305 * v[3] + 0.058872335 * v[4] + -0.1905831 * v[5] + 0.24154387 * v[6] + 0.3085043 * v[7] + -0.011909751 * v[8] + 0.10313181 * v[9] + -0.0067997673 * v[10] + -0.043845862 * v[11] + 0.024811862 * v[12] + 0.044926915 * v[13] + -0.22681707 * v[14] + 0.0020546804 * v[15] + 0.06885269 * v[16] + 0.26902056 * v[17] + 0.32911316 * v[18] + 0.2199379 * v[19] + 0.15506585 * v[20] + 0.0160551 * v[21] + 0.1687528 * v[22] + -0.027028076 * v[23] + -0.11094622 * v[24] + -0.30037278 * v[25] + 0.19582726 * v[26] + 0.12593506 * v[27] + 0.27739662 * v[28] + 0.019878948 * v[29] + -0.2850409 * v[30] + 0.13283871 * v[31];
            if( v[61] >= 0. ) {
                v[61] = v[61];
            } else {
                v[61] = 0.;
            }
            v[62] = 0.09682907 + 0.031435065 * v[0] + 0.13761467 * v[1] + 0.008358421 * v[2] + 0.31435883 * v[3] + 0.06646139 * v[4] + -0.022651792 * v[5] + 0.17029195 * v[6] + 0.08497817 * v[7] + -0.13823277 * v[8] + -0.014897327 * v[9] + -0.057054415 * v[10] + -0.040096655 * v[11] + -0.09809552 * v[12] + -0.044242796 * v[13] + -0.1019305 * v[14] + 0.07207775 * v[15] + 0.11119179 * v[16] + -0.18191774 * v[17] + -0.09173021 * v[18] + 0.24052474 * v[19] + -0.069784 * v[20] + 0.20369543 * v[21] + 0.19953763 * v[22] + 0.3796653 * v[23] + -0.1224361 * v[24] + 0.10846923 * v[25] + 0.6249131 * v[26] + 0.10032589 * v[27] + 0.041600123 * v[28] + -0.047882646 * v[29] + -0.13227181 * v[30] + 0.00798696 * v[31];
            if( v[62] >= 0. ) {
                v[62] = v[62];
            } else {
                v[62] = 0.;
            }
            v[31] = 0.007852805 + -0.20454168 * v[0] + 0.18790655 * v[1] + 0.12294405 * v[2] + 0.1521425 * v[3] + 0.08837299 * v[4] + 0.071311 * v[5] + 0.18130639 * v[6] + -0.07764543 * v[7] + 0.038633708 * v[8] + 0.027858969 * v[9] + 0.009998355 * v[10] + -0.06983358 * v[11] + 0.014508655 * v[12] + 0.12957527 * v[13] + -0.12217284 * v[14] + -0.020753594 * v[15] + 0.04111219 * v[16] + 0.4259885 * v[17] + 0.050756376 * v[18] + -0.099885926 * v[19] + 0.007383271 * v[20] + 0.08595492 * v[21] + 0.020561093 * v[22] + 0.103233136 * v[23] + 0.027684234 * v[24] + -0.019933522 * v[25] + 0.19164106 * v[26] + -0.05137782 * v[27] + 0.06963588 * v[28] + -0.13607286 * v[29] + -0.061089396 * v[30] + -0.14998682 * v[31];
            if( v[31] >= 0. ) {
                v[31] = v[31];
            } else {
                v[31] = 0.;
            }
            y[0] = -0.007905218 + 0.108725354 * v[32] + -0.05942759 * v[33] + 0.004019906 * v[34] + -0.24638717 * v[35] + -0.25175542 * v[36] + 0.15655987 * v[37] + -0.03134355 * v[38] + -0.110775195 * v[39] + 0.02435319 * v[40] + -0.11436027 * v[41] + 0.3295497 * v[42] + 0.10933964 * v[43] + 0.07736796 * v[44] + -0.038141377 * v[45] + 0.23380405 * v[46] + -0.047522362 * v[47] + 0.19773333 * v[48] + -0.27233374 * v[49] + -0.25560567 * v[50] + -0.049085207 * v[51] + 0.39396852 * v[52] + -0.20417573 * v[53] + 0.028463474 * v[54] + 0.120759524 * v[55] + 0.005413994 * v[56] + 0.098497674 * v[57] + 0.14325441 * v[58] + -0.014899102 * v[59] + -0.0013588043 * v[60] + -0.24978602 * v[61] + -0.12762348 * v[62] + -0.019793319 * v[31];
            y[1] = -0.003187813 + 0.16611597 * v[32] + -0.07555146 * v[33] + -0.0053275386 * v[34] + 0.079664715 * v[35] + 0.0038178263 * v[36] + -0.064900585 * v[37] + -0.2201343 * v[38] + -0.22072244 * v[39] + 0.066639036 * v[40] + -0.06827614 * v[41] + -0.03329693 * v[42] + -0.016642822 * v[43] + 0.06944823 * v[44] + 0.114021376 * v[45] + -0.20873964 * v[46] + 0.10769465 * v[47] + -0.01064908 * v[48] + 0.17108117 * v[49] + -0.02412368 * v[50] + 0.1324101 * v[51] + 0.08035216 * v[52] + 0.09887561 * v[53] + 0.31674898 * v[54] + 0.2524701 * v[55] + -0.11001035 * v[56] + 0.035408404 * v[57] + 0.07769469 * v[58] + 0.1041018 * v[59] + 0.032098327 * v[60] + -0.034182042 * v[61] + -0.019890873 * v[62] + -0.04785737 * v[31];
            y[2] = 0.032316778 + -0.17162739 * v[32] + -0.05563842 * v[33] + -0.052606337 * v[34] + 0.18685345 * v[35] + 0.12484558 * v[36] + 0.0038604103 * v[37] + 0.33039403 * v[38] + -0.3773902 * v[39] + 0.06900537 * v[40] + -0.28442755 * v[41] + -0.04323789 * v[42] + 0.2483704 * v[43] + -0.13656464 * v[44] + -0.095470585 * v[45] + -0.16102792 * v[46] + -0.044076946 * v[47] + -0.05854349 * v[48] + -0.056527603 * v[49] + 0.42454588 * v[50] + -0.010018121 * v[51] + 0.21808127 * v[52] + -0.1991001 * v[53] + -0.13012965 * v[54] + -0.14964788 * v[55] + 0.06998623 * v[56] + 0.024781603 * v[57] + 0.013570943 * v[58] + -0.00367893 * v[59] + -0.18385261 * v[60] + 0.057345312 * v[61] + 0.056105096 * v[62] + -0.035158526 * v[31];
            y[3] = 0.13545981 + 0.064745136 * v[32] + 0.020691182 * v[33] + 0.058594275 * v[34] + 0.17333223 * v[35] + -0.12293524 * v[36] + 0.05996647 * v[37] + -0.040847607 * v[38] + 0.06800605 * v[39] + 0.07440295 * v[40] + -0.080622576 * v[41] + -0.08661148 * v[42] + -0.09105139 * v[43] + 0.36366862 * v[44] + 0.06469273 * v[45] + -0.21914323 * v[46] + -0.12472891 * v[47] + 0.038839716 * v[48] + 0.0002232723 * v[49] + -0.12902607 * v[50] + 0.18734755 * v[51] + -0.10660172 * v[52] + -0.24090184 * v[53] + -0.074155934 * v[54] + 0.09749271 * v[55] + 0.063967876 * v[56] + 0.003064812 * v[57] + -0.21074922 * v[58] + -0.036910333 * v[59] + 0.22320668 * v[60] + 0.021098107 * v[61] + 0.042402033 * v[62] + 0.07289224 * v[31];
            y[4] = -0.064920545 + 0.1231744 * v[32] + 0.034842093 * v[33] + -0.004361338 * v[34] + -0.09175566 * v[35] + 0.0745063 * v[36] + -0.29039448 * v[37] + 0.054762702 * v[38] + -0.08888138 * v[39] + -0.067169495 * v[40] + 0.057871193 * v[41] + 0.11339702 * v[42] + 0.20281805 * v[43] + -0.43404245 * v[44] + 0.18017703 * v[45] + -0.3185131 * v[46] + 0.054999113 * v[47] + 0.1377663 * v[48] + -0.2555884 * v[49] + -0.39725882 * v[50] + -0.35724336 * v[51] + -0.15812658 * v[52] + 0.043289956 * v[53] + 0.022475678 * v[54] + 0.24781044 * v[55] + 0.037671957 * v[56] + 0.21773335 * v[57] + -0.03531546 * v[58] + 0.070050284 * v[59] + 0.1657869 * v[60] + -0.09710518 * v[61] + 0.21240793 * v[62] + -0.10267437 * v[31];
            y[5] = -0.104801044 + 0.01519875 * v[32] + -0.0954755 * v[33] + 0.075385675 * v[34] + -0.31373 * v[35] + -0.13795444 * v[36] + 0.027034342 * v[37] + -0.017803025 * v[38] + -0.049326964 * v[39] + 0.014814735 * v[40] + 0.012850066 * v[41] + -0.06020857 * v[42] + 0.10779446 * v[43] + 0.029133571 * v[44] + -0.12808697 * v[45] + 0.03920831 * v[46] + -0.0804313 * v[47] + 0.055356402 * v[48] + -0.010324743 * v[49] + -0.08573124 * v[50] + 0.1260493 * v[51] + -0.015327073 * v[52] + -0.15904725 * v[53] + 0.015733836 * v[54] + -0.0023672662 * v[55] + -0.069974035 * v[56] + 0.15501887 * v[57] + -0.06585183 * v[58] + 0.1441043 * v[59] + 0.11467863 * v[60] + 0.19214582 * v[61] + 0.10784268 * v[62] + 0.1769734 * v[31];
            y[6] = 0.055308394 + 0.24041925 * v[32] + 0.0978022 * v[33] + 0.036692802 * v[34] + -0.003887718 * v[35] + -0.24742366 * v[36] + -0.17647398 * v[37] + 0.15560593 * v[38] + 0.05720989 * v[39] + -0.15500437 * v[40] + 0.2816781 * v[41] + -0.03781527 * v[42] + -0.2538424 * v[43] + -0.076071285 * v[44] + 0.12044982 * v[45] + -0.04639758 * v[46] + 0.14223395 * v[47] + 0.03474164 * v[48] + -0.071094185 * v[49] + 0.22655448 * v[50] + 0.17944029 * v[51] + 0.063586704 * v[52] + -0.089530654 * v[53] + -0.1120448 * v[54] + -0.07337521 * v[55] + -0.16729343 * v[56] + 0.44055435 * v[57] + -0.36556977 * v[58] + -0.15807365 * v[59] + -0.23645169 * v[60] + -0.0013641528 * v[61] + 0.099308826 * v[62] + 0.20105594 * v[31];
            y[7] = 0.016298136 + -0.10918047 * v[32] + -0.06668902 * v[33] + 0.031789143 * v[34] + -0.24553461 * v[35] + -0.20631753 * v[36] + -0.0064007454 * v[37] + 0.03330714 * v[38] + 0.07484657 * v[39] + 0.07021351 * v[40] + -0.07720714 * v[41] + 0.065442726 * v[42] + -0.11413903 * v[43] + -0.052731287 * v[44] + -0.197648 * v[45] + 0.0022878808 * v[46] + 0.03326295 * v[47] + 0.007245231 * v[48] + -0.2065596 * v[49] + 0.11178527 * v[50] + 0.13396464 * v[51] + 0.52079934 * v[52] + -0.109784245 * v[53] + 0.15793248 * v[54] + 0.060591783 * v[55] + 0.10598842 * v[56] + -0.081141375 * v[57] + -0.09028938 * v[58] + 0.026900774 * v[59] + 0.24284035 * v[60] + -0.19695158 * v[61] + -0.1544509 * v[62] + -0.1648219 * v[31];
            y[8] = -0.0039456105 + 0.03956678 * v[32] + -0.08678333 * v[33] + 0.16726157 * v[34] + 0.0008944528 * v[35] + 0.08471446 * v[36] + 0.052590482 * v[37] + -0.24448341 * v[38] + -0.32412758 * v[39] + 0.1267722 * v[40] + -0.014628788 * v[41] + 0.019256724 * v[42] + 0.08416577 * v[43] + -0.018094052 * v[44] + 0.16170807 * v[45] + -0.079475224 * v[46] + 0.12594664 * v[47] + -0.2671297 * v[48] + 0.20389989 * v[49] + 0.06882532 * v[50] + 0.094680406 * v[51] + 0.054511182 * v[52] + -0.01377521 * v[53] + 0.09843305 * v[54] + 0.16320103 * v[55] + -0.21633346 * v[56] + 0.13596913 * v[57] + 0.18537259 * v[58] + 0.12018657 * v[59] + -0.012407843 * v[60] + -0.16342574 * v[61] + 0.0726221 * v[62] + -0.11885383 * v[31];
            y[9] = -0.008305365 + -0.3378937 * v[32] + 0.0024390165 * v[33] + -0.09631984 * v[34] + 0.18662556 * v[35] + 0.028136244 * v[36] + -0.06672891 * v[37] + 0.2958873 * v[38] + -0.23569207 * v[39] + -0.054453272 * v[40] + -0.23065256 * v[41] + -0.04753119 * v[42] + 0.21235041 * v[43] + -0.041469403 * v[44] + -0.17472233 * v[45] + -0.17467254 * v[46] + -0.044044565 * v[47] + -0.027895613 * v[48] + 0.009896668 * v[49] + -0.14662483 * v[50] + 0.06544798 * v[51] + 0.305318 * v[52] + -0.23054881 * v[53] + 0.059317905 * v[54] + -0.23984289 * v[55] + 0.07479794 * v[56] + -0.021868307 * v[57] + -0.007864361 * v[58] + -0.009565232 * v[59] + -0.22085552 * v[60] + 0.03106315 * v[61] + 0.22705428 * v[62] + -0.16398306 * v[31];
            y[10] = 0.04894364 + 0.05616521 * v[32] + -0.058208145 * v[33] + 0.14197269 * v[34] + 0.18614423 * v[35] + -0.27499372 * v[36] + 0.1143848 * v[37] + -0.03210426 * v[38] + -0.046163138 * v[39] + 0.039694402 * v[40] + -0.09304668 * v[41] + 0.115253516 * v[42] + -0.044544265 * v[43] + -0.104610704 * v[44] + 0.09826959 * v[45] + -0.017734908 * v[46] + -0.10096721 * v[47] + 0.0055510732 * v[48] + 0.10547683 * v[49] + 0.25446385 * v[50] + -0.021671636 * v[51] + -0.23139556 * v[52] + -0.3651651 * v[53] + 0.1945261 * v[54] + 0.09666988 * v[55] + 0.05633701 * v[56] + 0.16014136 * v[57] + 0.2972798 * v[58] + 0.039142035 * v[59] + 0.054164816 * v[60] + -0.015681617 * v[61] + 0.06836569 * v[62] + -0.04748637 * v[31];
            y[11] = -0.025689669 + 0.08162639 * v[32] + -0.2055837 * v[33] + 0.110575035 * v[34] + -0.12150193 * v[35] + 0.06479785 * v[36] + -0.3699211 * v[37] + 0.10262518 * v[38] + 0.12984954 * v[39] + -0.070753336 * v[40] + 0.07929599 * v[41] + -0.16530123 * v[42] + 0.19263178 * v[43] + 0.07949682 * v[44] + 0.3546277 * v[45] + -0.43565634 * v[46] + 0.2944702 * v[47] + -0.021985969 * v[48] + -0.025378164 * v[49] + 0.15135774 * v[50] + -0.25560918 * v[51] + -0.1236843 * v[52] + -0.072892874 * v[53] + -0.39624324 * v[54] + 0.21564722 * v[55] + 0.12945592 * v[56] + -0.04729577 * v[57] + -0.19581136 * v[58] + 0.013103584 * v[59] + 0.25796196 * v[60] + -0.27783254 * v[61] + 0.11047388 * v[62] + 0.13957089 * v[31];
            y[12] = -0.18007965 + -0.23692016 * v[32] + -0.18853253 * v[33] + 0.040857244 * v[34] + -0.15248325 * v[35] + -0.07466143 * v[36] + -0.100495405 * v[37] + -0.050022162 * v[38] + 0.07565147 * v[39] + -0.056506384 * v[40] + -0.115224116 * v[41] + -0.1245892 * v[42] + 0.090595566 * v[43] + -0.10665492 * v[44] + -0.048896264 * v[45] + 0.09703929 * v[46] + -0.0061155106 * v[47] + -0.19613427 * v[48] + 0.017175267 * v[49] + 0.22350493 * v[50] + 0.040300224 * v[51] + 0.091906175 * v[52] + -0.20229529 * v[53] + -0.04874313 * v[54] + -0.16944712 * v[55] + -0.16592751 * v[56] + 0.116638206 * v[57] + -0.1458841 * v[58] + 0.3032298 * v[59] + 0.22103466 * v[60] + 0.24953221 * v[61] + -0.006342631 * v[62] + 0.09162689 * v[31];
            y[13] = 0.030552099 + 0.32032114 * v[32] + 0.31032875 * v[33] + 0.19923736 * v[34] + 0.022078013 * v[35] + -0.092232704 * v[36] + -0.10153418 * v[37] + 0.15429921 * v[38] + 0.22025317 * v[39] + -0.2744251 * v[40] + -0.12844467 * v[41] + -0.022100555 * v[42] + -0.21430504 * v[43] + 0.15414195 * v[44] + 0.37937805 * v[45] + -0.196699 * v[46] + 0.14147899 * v[47] + 0.12871033 * v[48] + -0.017240494 * v[49] + 0.0319006 * v[50] + 0.09058469 * v[51] + 0.260265 * v[52] + 0.014692389 * v[53] + 0.17242458 * v[54] + -0.23870403 * v[55] + -0.33804768 * v[56] + 0.41431677 * v[57] + -0.2644153 * v[58] + -0.27773803 * v[59] + -0.009899839 * v[60] + 0.13923997 * v[61] + 0.068993255 * v[62] + 0.19060127 * v[31];
            y[14] = 0.13598566 + 0.2420215 * v[32] + 0.06188506 * v[33] + 0.17127159 * v[34] + 0.16849178 * v[35] + 0.11903188 * v[36] + -0.14249021 * v[37] + 0.3219806 * v[38] + -0.029792635 * v[39] + -0.035252735 * v[40] + 0.075059585 * v[41] + 0.34974453 * v[42] + -0.010142455 * v[43] + 0.1357138 * v[44] + -0.042295814 * v[45] + -0.14694862 * v[46] + 0.14758627 * v[47] + 0.10971761 * v[48] + -0.15138489 * v[49] + -0.116059296 * v[50] + 0.11231426 * v[51] + -0.24552338 * v[52] + -0.14685981 * v[53] + -0.19739074 * v[54] + -0.031608377 * v[55] + -0.37200978 * v[56] + -0.2693555 * v[57] + -0.38898328 * v[58] + 0.28666562 * v[59] + 0.09901625 * v[60] + 0.12062673 * v[61] + -0.06476034 * v[62] + -0.1727576 * v[31];
            y[15] = -0.05933537 + 0.16586441 * v[32] + 0.08552019 * v[33] + -0.084985405 * v[34] + -0.1604058 * v[35] + 0.36811483 * v[36] + -0.011588072 * v[37] + -0.16713847 * v[38] + 0.17924291 * v[39] + 0.28171557 * v[40] + -0.10023 * v[41] + 0.113821745 * v[42] + 0.0063025216 * v[43] + 0.1695647 * v[44] + -0.15592524 * v[45] + 0.012486746 * v[46] + 0.026254248 * v[47] + -0.07194728 * v[48] + 0.09410479 * v[49] + -0.20144095 * v[50] + -0.18414271 * v[51] + 0.1918442 * v[52] + -0.2850788 * v[53] + -0.44005027 * v[54] + 0.16389488 * v[55] + -0.0012031397 * v[56] + -0.08057721 * v[57] + 0.15966618 * v[58] + -0.15435876 * v[59] + -0.11887232 * v[60] + 0.32777664 * v[61] + -0.07643723 * v[62] + -0.09843305 * v[31];
            y[16] = 0.01797674 + -0.028485613 * v[32] + 0.09190168 * v[33] + 0.09663103 * v[34] + -0.020504832 * v[35] + 0.14757612 * v[36] + 0.1687828 * v[37] + 0.154635 * v[38] + 0.42719144 * v[39] + 0.06172718 * v[40] + -0.36748698 * v[41] + -0.14248815 * v[42] + -0.19365478 * v[43] + 0.054679513 * v[44] + -0.019266073 * v[45] + -0.16756108 * v[46] + -0.09430033 * v[47] + 0.17085859 * v[48] + -0.22174662 * v[49] + -0.095210426 * v[50] + 0.21291363 * v[51] + -0.06830599 * v[52] + 0.052244287 * v[53] + -0.023500439 * v[54] + 0.22584957 * v[55] + -0.035324402 * v[56] + 0.066259086 * v[57] + -0.10705466 * v[58] + 0.18048187 * v[59] + -0.32494062 * v[60] + -0.080377564 * v[61] + 0.06995593 * v[62] + 0.0026158725 * v[31];
            y[17] = 0.012735757 + -0.13570537 * v[32] + 0.04534984 * v[33] + 0.048093494 * v[34] + -0.11909103 * v[35] + -0.46669295 * v[36] + 0.067304865 * v[37] + 0.027781682 * v[38] + 0.024036812 * v[39] + 0.10278053 * v[40] + 0.035259727 * v[41] + -0.22463907 * v[42] + 0.1366117 * v[43] + -0.14797182 * v[44] + 0.07303102 * v[45] + 0.16175991 * v[46] + 0.10567036 * v[47] + 0.022735918 * v[48] + -0.124313414 * v[49] + 0.028210968 * v[50] + -0.15326822 * v[51] + 0.03757061 * v[52] + 0.08658411 * v[53] + -0.026542526 * v[54] + 0.10288498 * v[55] + -0.062401153 * v[56] + -0.09293325 * v[57] + 0.115823194 * v[58] + -0.01620683 * v[59] + -0.18263546 * v[60] + 0.11439442 * v[61] + 0.079031646 * v[62] + -0.11987371 * v[31];
            y[18] = -0.059054565 + 0.33255777 * v[32] + 0.11730553 * v[33] + 0.16805992 * v[34] + 0.10489331 * v[35] + -0.2218714 * v[36] + -0.23707625 * v[37] + 0.10593749 * v[38] + 0.2014831 * v[39] + 0.23253712 * v[40] + -0.020044737 * v[41] + -0.03094178 * v[42] + -9.700132e-05 * v[43] + 0.21442938 * v[44] + -0.1189889 * v[45] + 0.13243158 * v[46] + -0.49250218 * v[47] + 0.28380048 * v[48] + 0.2439612 * v[49] + 0.0734129 * v[50] + -0.12147033 * v[51] + 0.32767916 * v[52] + 0.021448387 * v[53] + -0.10530712 * v[54] + 0.28893822 * v[55] + -0.2522103 * v[56] + 0.08381356 * v[57] + -0.057322517 * v[58] + -0.10960566 * v[59] + -0.12801422 * v[60] + -0.11605959 * v[61] + 0.21094659 * v[62] + 0.18673323 * v[31];
            y[19] = -0.079195924 + 0.026181543 * v[32] + -0.05299987 * v[33] + -0.24800946 * v[34] + 0.21306413 * v[35] + 0.2046563 * v[36] + 0.081338376 * v[37] + 0.10158781 * v[38] + 0.10963049 * v[39] + 0.23736502 * v[40] + 0.15288709 * v[41] + -0.2769591 * v[42] + 0.15372318 * v[43] + -0.1720382 * v[44] + 0.15828496 * v[45] + 0.020721013 * v[46] + 0.11848496 * v[47] + 0.13787521 * v[48] + -0.14692436 * v[49] + 0.03176142 * v[50] + 0.26864284 * v[51] + -0.053089797 * v[52] + -0.018269714 * v[53] + 0.08106823 * v[54] + 0.13773485 * v[55] + -0.015616947 * v[56] + 0.015863094 * v[57] + 0.01343306 * v[58] + -0.23907574 * v[59] + 0.28565517 * v[60] + -0.0940786 * v[61] + -0.1472396 * v[62] + -0.32381886 * v[31];
            y[20] = -0.1363032 + -0.21582437 * v[32] + 0.006847741 * v[33] + 0.08500594 * v[34] + -0.08033771 * v[35] + 0.16716748 * v[36] + -0.07602024 * v[37] + 0.0029718971 * v[38] + -0.22530861 * v[39] + 0.12508997 * v[40] + -0.4119577 * v[41] + 0.00086852285 * v[42] + -0.21546441 * v[43] + 0.03518149 * v[44] + -0.09114717 * v[45] + 0.3259766 * v[46] + 0.2605054 * v[47] + 0.21429074 * v[48] + 0.026376605 * v[49] + -0.14769366 * v[50] + 0.05375307 * v[51] + -0.06187382 * v[52] + -0.14226395 * v[53] + -0.0670555 * v[54] + 0.11309359 * v[55] + 0.027283069 * v[56] + -0.19739044 * v[57] + -0.009437393 * v[58] + -0.08548877 * v[59] + 0.25689387 * v[60] + -0.087135784 * v[61] + 0.25077772 * v[62] + 0.0848663 * v[31];
            y[21] = -0.03271675 + 0.213398 * v[32] + 0.065748334 * v[33] + 0.012395102 * v[34] + -0.016230404 * v[35] + -0.04480302 * v[36] + -0.042706985 * v[37] + 0.34461582 * v[38] + -0.0546793 * v[39] + 0.04774412 * v[40] + 0.2834122 * v[41] + 0.23390727 * v[42] + -0.049520407 * v[43] + 0.012379421 * v[44] + -0.032405354 * v[45] + -0.23698384 * v[46] + 0.14634061 * v[47] + -0.007519727 * v[48] + -0.11650411 * v[49] + 0.18665195 * v[50] + 0.3011186 * v[51] + -0.31561267 * v[52] + -0.1730908 * v[53] + -0.14778578 * v[54] + 0.12518731 * v[55] + -0.21581632 * v[56] + -0.34475747 * v[57] + -0.1436607 * v[58] + 0.15799496 * v[59] + 0.020436294 * v[60] + 0.022096163 * v[61] + 0.050959818 * v[62] + 0.042246334 * v[31];
            y[22] = -0.05287959 + 0.18559603 * v[32] + 0.06282189 * v[33] + -0.042811036 * v[34] + -0.062834784 * v[35] + 0.27716354 * v[36] + -0.028010666 * v[37] + -0.16292924 * v[38] + 0.1815774 * v[39] + 0.08483118 * v[40] + -0.0012585231 * v[41] + 0.028283287 * v[42] + -0.056912042 * v[43] + 0.02874374 * v[44] + -0.08704254 * v[45] + -0.055829007 * v[46] + 0.029451398 * v[47] + 0.05676967 * v[48] + 0.030777052 * v[49] + -0.19721912 * v[50] + -0.12037392 * v[51] + 0.19593571 * v[52] + -0.24729185 * v[53] + 0.24821486 * v[54] + 0.19656199 * v[55] + 0.05289469 * v[56] + -0.1450773 * v[57] + -0.05412513 * v[58] + -0.11702878 * v[59] + -0.109435715 * v[60] + 0.29485053 * v[61] + -0.078848965 * v[62] + -0.0034479238 * v[31];
            y[23] = -0.07749492 + -0.021433294 * v[32] + 0.06355213 * v[33] + 0.05608513 * v[34] + -0.021129154 * v[35] + -0.027985549 * v[36] + 0.11060422 * v[37] + 0.14638084 * v[38] + 0.20281023 * v[39] + 0.02654108 * v[40] + -0.19196616 * v[41] + 0.022250654 * v[42] + -0.08452502 * v[43] + -0.097482495 * v[44] + 0.038888816 * v[45] + 0.12883452 * v[46] + -0.05712466 * v[47] + -0.025191754 * v[48] + -0.18686691 * v[49] + -0.07119272 * v[50] + 0.10534045 * v[51] + -0.25989884 * v[52] + -0.07983163 * v[53] + 0.04184193 * v[54] + 0.3513493 * v[55] + 0.027246535 * v[56] + 0.21834967 * v[57] + 0.0050252574 * v[58] + 0.23863803 * v[59] + -0.6363501 * v[60] + -0.19409783 * v[61] + -0.03087264 * v[62] + 0.09688031 * v[31];
            y[24] = 0.041707348 + 0.24326879 * v[32] + 0.0648186 * v[33] + 0.019581256 * v[34] + -0.064672686 * v[35] + -0.21766898 * v[36] + 0.18902 * v[37] + 0.04753252 * v[38] + -0.12387435 * v[39] + 0.05003181 * v[40] + 0.1644372 * v[41] + -0.29384157 * v[42] + 0.10258805 * v[43] + -0.0064658206 * v[44] + 0.007413516 * v[45] + 0.12106377 * v[46] + 0.048773374 * v[47] + -0.006855736 * v[48] + -0.31203517 * v[49] + 0.07867142 * v[50] + -0.12613247 * v[51] + 0.020131793 * v[52] + 0.027042761 * v[53] + 0.07573153 * v[54] + 0.05202796 * v[55] + -0.11601661 * v[56] + -0.032239098 * v[57] + -0.4816315 * v[58] + 0.06772824 * v[59] + -0.050585058 * v[60] + 0.062597804 * v[61] + 0.066081114 * v[62] + -0.084463015 * v[31];
            y[25] = -0.093603805 + 0.030262006 * v[32] + -0.0040985434 * v[33] + 0.087053284 * v[34] + 0.08084567 * v[35] + -0.077864595 * v[36] + -0.16611357 * v[37] + 0.26334557 * v[38] + -0.035522692 * v[39] + 0.088497475 * v[40] + 0.07803041 * v[41] + -0.21005163 * v[42] + -0.16147164 * v[43] + 0.008382965 * v[44] + -0.061613213 * v[45] + 0.07122667 * v[46] + -0.32212383 * v[47] + -0.0019283589 * v[48] + 0.22137812 * v[49] + 0.3255456 * v[50] + -0.20654349 * v[51] + 0.1923004 * v[52] + 0.040735256 * v[53] + -0.37050062 * v[54] + 0.28270853 * v[55] + -0.14147519 * v[56] + 0.09080621 * v[57] + -0.108529076 * v[58] + 0.05896388 * v[59] + 0.041442566 * v[60] + -0.07217383 * v[61] + -0.009162168 * v[62] + 0.08741155 * v[31];
            y[26] = -0.21610786 + 0.048829246 * v[32] + -0.07537111 * v[33] + -0.13594185 * v[34] + 0.38181672 * v[35] + 0.013085694 * v[36] + 0.15964368 * v[37] + 0.012696716 * v[38] + 0.15391551 * v[39] + -0.011734349 * v[40] + -0.0026905246 * v[41] + -0.123271324 * v[42] + 0.11111126 * v[43] + -0.010115057 * v[44] + 0.033932853 * v[45] + -0.04146604 * v[46] + 0.08742518 * v[47] + -0.12454368 * v[48] + -0.14272411 * v[49] + -0.14280795 * v[50] + 0.032861892 * v[51] + 0.0626829 * v[52] + 0.029337922 * v[53] + -0.15258482 * v[54] + 0.13235518 * v[55] + -0.030166436 * v[56] + -0.0430548 * v[57] + 0.36292082 * v[58] + -0.20063838 * v[59] + 0.20244797 * v[60] + -0.00010058215 * v[61] + -0.08946032 * v[62] + -0.17025281 * v[31];
            y[27] = 0.074711725 + -0.16421275 * v[32] + -0.0027878552 * v[33] + 0.15403353 * v[34] + 0.06557191 * v[35] + 0.055927865 * v[36] + -0.30333236 * v[37] + -0.10687176 * v[38] + -0.046906207 * v[39] + -0.20910864 * v[40] + -0.46926144 * v[41] + 0.10164614 * v[42] + -0.14409475 * v[43] + 0.2771453 * v[44] + -0.09662375 * v[45] + 0.26793283 * v[46] + 0.114871815 * v[47] + -0.07485999 * v[48] + -0.06469587 * v[49] + 0.056965053 * v[50] + 0.16193171 * v[51] + 0.02115451 * v[52] + -0.017528377 * v[53] + 0.01839575 * v[54] + 0.1834937 * v[55] + 0.032136306 * v[56] + -0.18830712 * v[57] + 0.20599274 * v[58] + -0.1419529 * v[59] + 0.14294085 * v[60] + 0.030664913 * v[61] + 0.19062182 * v[62] + 0.11237823 * v[31];
            y[28] = 0.58570755 + 0.18193646 * v[32] + 0.29266772 * v[33] + 0.3010642 * v[34] + 0.043616053 * v[35] + 0.0012355936 * v[36] + 0.011173701 * v[37] + 0.0074785547 * v[38] + 0.04356321 * v[39] + 0.1676073 * v[40] + 0.0028592863 * v[41] + -0.09113395 * v[42] + -0.062433057 * v[43] + 0.19034879 * v[44] + 0.18305627 * v[45] + -0.094472684 * v[46] + 0.023340058 * v[47] + -0.1873237 * v[48] + -0.0054288283 * v[49] + -0.011895719 * v[50] + 0.011804947 * v[51] + 0.061854284 * v[52] + 0.023532424 * v[53] + 0.25150737 * v[54] + -0.02588836 * v[55] + 0.020745149 * v[56] + -0.066547565 * v[57] + 0.18755685 * v[58] + 0.01959577 * v[59] + 0.10501101 * v[60] + 0.03703113 * v[61] + 0.0079725925 * v[62] + -0.029689796 * v[31];


            for(auto i=0U;i<29;i++)
                out[i] = y[i];

        }

        template <std::size_t rake>
        inline static void sphere_fk(const ConfigurationBlock<rake> &x, Spheres<rake> &out) noexcept
        {
            std::array<FloatVector<rake, 1>, 22> v;
            std::array<FloatVector<rake, 1>, 236> y;

            v[0] = sin(x[0]);
            v[1] = -v[0];
            y[4] = -0.08 * v[1];
            v[2] = cos(x[0]);
            y[5] = -0.08 * v[2];
            y[8] = -0.03 * v[1];
            y[9] = -0.03 * v[2];
            y[20] = 0.03 * v[1];
            y[21] = 0.03 * v[2];
            y[24] = 0.08 * v[1];
            y[25] = 0.08 * v[2];
            v[3] = sin(x[1]);
            v[4] = -v[3];
            v[5] = cos(x[1]);
            v[6] = 4.89663865010925e-12 * v[5];
            v[7] = v[2] * v[4] + v[1] * v[6];
            y[28] = -0.12 * v[7];
            v[6] = v[0] * v[4] + v[2] * v[6];
            y[29] = -0.12 * v[6];
            v[4] = -1. * v[5];
            y[30] = 0.333 + -0.12 * v[4];
            y[32] = -0.17 * v[7];
            y[33] = -0.17 * v[6];
            y[34] = 0.333 + -0.17 * v[4];
            v[8] = -1. * v[7] + 4.89663865010925e-12 * v[1];
            v[9] = -0.316 * v[7];
            y[36] = -0.1 * v[8] + v[9];
            v[10] = -1. * v[6] + 4.89663865010925e-12 * v[2];
            v[11] = -0.316 * v[6];
            y[37] = -0.1 * v[10] + v[11];
            v[12] = 2.39770700697438e-23 + -1. * v[4];
            v[13] = 0.333 + -0.316 * v[4];
            y[38] = -0.1 * v[12] + v[13];
            y[40] = -0.06 * v[8] + v[9];
            y[41] = -0.06 * v[10] + v[11];
            y[42] = -0.06 * v[12] + v[13];
            v[14] = 4.89663865010925e-12 * v[3];
            v[15] = v[2] * v[5] + v[1] * v[14];
            v[16] = cos(x[2]);
            v[17] = sin(x[2]);
            v[18] = 4.89663865010925e-12 * v[17];
            v[19] = v[15] * v[16] + v[7] * v[18] + v[1] * v[17];
            v[20] = -v[17];
            v[21] = 4.89663865010925e-12 * v[16];
            v[15] = v[15] * v[20] + v[7] * v[21] + v[1] * v[16];
            y[44] = 0.08 * v[19] + 0.06 * v[15] + v[9];
            v[14] = v[0] * v[5] + v[2] * v[14];
            v[5] = v[14] * v[16] + v[6] * v[18] + v[2] * v[17];
            v[14] = v[14] * v[20] + v[6] * v[21] + v[2] * v[16];
            y[45] = 0.08 * v[5] + 0.06 * v[14] + v[11];
            v[3] = -1. * v[3];
            v[18] = v[3] * v[16] + v[4] * v[18] + 4.89663865010925e-12 * v[17];
            v[3] = v[3] * v[20] + v[4] * v[21] + 4.89663865010925e-12 * v[16];
            y[46] = 0.08 * v[18] + 0.06 * v[3] + v[13];
            y[48] = 0.08 * v[19] + 0.02 * v[15] + v[9];
            y[49] = 0.08 * v[5] + 0.02 * v[14] + v[11];
            y[50] = 0.08 * v[18] + 0.02 * v[3] + v[13];
            v[21] = cos(x[3]);
            v[20] = sin(x[3]);
            v[16] = 4.89663865010925e-12 * v[20];
            v[4] = v[19] * v[21] + v[15] * v[16] + v[8] * v[20];
            v[17] = -v[20];
            v[6] = 4.89663865010925e-12 * v[21];
            v[2] = v[19] * v[17] + v[15] * v[6] + v[8] * v[21];
            v[19] = v[9] + 0.0825 * v[19];
            y[52] = -0.08 * v[4] + 0.095 * v[2] + v[19];
            v[9] = v[5] * v[21] + v[14] * v[16] + v[10] * v[20];
            v[0] = v[5] * v[17] + v[14] * v[6] + v[10] * v[21];
            v[5] = v[11] + 0.0825 * v[5];
            y[53] = -0.08 * v[9] + 0.095 * v[0] + v[5];
            v[16] = v[18] * v[21] + v[3] * v[16] + v[12] * v[20];
            v[6] = v[18] * v[17] + v[3] * v[6] + v[12] * v[21];
            v[18] = v[13] + 0.0825 * v[18];
            y[54] = -0.08 * v[16] + 0.095 * v[6] + v[18];
            v[15] = -1. * v[15] + 4.89663865010925e-12 * v[8];
            y[56] = 0.02 * v[15] + v[19];
            v[14] = -1. * v[14] + 4.89663865010925e-12 * v[10];
            y[57] = 0.02 * v[14] + v[5];
            v[3] = -1. * v[3] + 4.89663865010925e-12 * v[12];
            y[58] = 0.02 * v[3] + v[18];
            y[60] = 0.06 * v[15] + v[19];
            y[61] = 0.06 * v[14] + v[5];
            y[62] = 0.06 * v[3] + v[18];
            y[64] = -0.08 * v[4] + 0.06 * v[2] + v[19];
            y[65] = -0.08 * v[9] + 0.06 * v[0] + v[5];
            y[66] = -0.08 * v[16] + 0.06 * v[6] + v[18];
            v[12] = sin(x[4]);
            v[10] = -v[12];
            v[8] = cos(x[4]);
            v[13] = 4.89663865010925e-12 * v[8];
            v[17] = -1. * v[8];
            v[21] = v[4] * v[10] + v[2] * v[13] + v[15] * v[17];
            y[116] = v[19] + -0.0825 * v[4] + 0.384 * v[2];
            y[68] = 0.055 * v[21] + y[116];
            v[19] = v[9] * v[10] + v[0] * v[13] + v[14] * v[17];
            y[117] = v[5] + -0.0825 * v[9] + 0.384 * v[0];
            y[69] = 0.055 * v[19] + y[117];
            v[17] = v[16] * v[10] + v[6] * v[13] + v[3] * v[17];
            y[118] = v[18] + -0.0825 * v[16] + 0.384 * v[6];
            y[70] = 0.055 * v[17] + y[118];
            y[72] = 0.075 * v[21] + y[116];
            y[73] = 0.075 * v[19] + y[117];
            y[74] = 0.075 * v[17] + y[118];
            v[18] = v[2] + 4.89663865010925e-12 * v[15];
            y[76] = -0.22 * v[18] + y[116];
            v[13] = v[0] + 4.89663865010925e-12 * v[14];
            y[77] = -0.22 * v[13] + y[117];
            v[10] = v[6] + 4.89663865010925e-12 * v[3];
            y[78] = -0.22 * v[10] + y[118];
            y[80] = 0.05 * v[21] + -0.18 * v[18] + y[116];
            y[81] = 0.05 * v[19] + -0.18 * v[13] + y[117];
            y[82] = 0.05 * v[17] + -0.18 * v[10] + y[118];
            v[5] = 4.89663865010925e-12 * v[12];
            v[12] = -1. * v[12];
            v[15] = v[4] * v[8] + v[2] * v[5] + v[15] * v[12];
            y[84] = 0.01 * v[15] + 0.08 * v[21] + -0.14 * v[18] + y[116];
            v[14] = v[9] * v[8] + v[0] * v[5] + v[14] * v[12];
            y[85] = 0.01 * v[14] + 0.08 * v[19] + -0.14 * v[13] + y[117];
            v[12] = v[16] * v[8] + v[6] * v[5] + v[3] * v[12];
            y[86] = 0.01 * v[12] + 0.08 * v[17] + -0.14 * v[10] + y[118];
            y[88] = 0.01 * v[15] + 0.085 * v[21] + -0.11 * v[18] + y[116];
            y[89] = 0.01 * v[14] + 0.085 * v[19] + -0.11 * v[13] + y[117];
            y[90] = 0.01 * v[12] + 0.085 * v[17] + -0.11 * v[10] + y[118];
            y[92] = 0.01 * v[15] + 0.09 * v[21] + -0.08 * v[18] + y[116];
            y[93] = 0.01 * v[14] + 0.09 * v[19] + -0.08 * v[13] + y[117];
            y[94] = 0.01 * v[12] + 0.09 * v[17] + -0.08 * v[10] + y[118];
            y[96] = 0.01 * v[15] + 0.095 * v[21] + -0.05 * v[18] + y[116];
            y[97] = 0.01 * v[14] + 0.095 * v[19] + -0.05 * v[13] + y[117];
            y[98] = 0.01 * v[12] + 0.095 * v[17] + -0.05 * v[10] + y[118];
            y[100] = -0.01 * v[15] + 0.08 * v[21] + -0.14 * v[18] + y[116];
            y[101] = -0.01 * v[14] + 0.08 * v[19] + -0.14 * v[13] + y[117];
            y[102] = -0.01 * v[12] + 0.08 * v[17] + -0.14 * v[10] + y[118];
            y[104] = -0.01 * v[15] + 0.085 * v[21] + -0.11 * v[18] + y[116];
            y[105] = -0.01 * v[14] + 0.085 * v[19] + -0.11 * v[13] + y[117];
            y[106] = -0.01 * v[12] + 0.085 * v[17] + -0.11 * v[10] + y[118];
            y[108] = -0.01 * v[15] + 0.09 * v[21] + -0.08 * v[18] + y[116];
            y[109] = -0.01 * v[14] + 0.09 * v[19] + -0.08 * v[13] + y[117];
            y[110] = -0.01 * v[12] + 0.09 * v[17] + -0.08 * v[10] + y[118];
            y[112] = -0.01 * v[15] + 0.095 * v[21] + -0.05 * v[18] + y[116];
            y[113] = -0.01 * v[14] + 0.095 * v[19] + -0.05 * v[13] + y[117];
            y[114] = -0.01 * v[12] + 0.095 * v[17] + -0.05 * v[10] + y[118];
            v[5] = cos(x[5]);
            v[8] = sin(x[5]);
            v[3] = 4.89663865010925e-12 * v[8];
            v[6] = v[15] * v[5] + v[21] * v[3] + v[18] * v[8];
            v[16] = -v[8];
            v[0] = 4.89663865010925e-12 * v[5];
            v[15] = v[15] * v[16] + v[21] * v[0] + v[18] * v[5];
            y[120] = 0.08 * v[6] + -0.01 * v[15] + y[116];
            v[9] = v[14] * v[5] + v[19] * v[3] + v[13] * v[8];
            v[14] = v[14] * v[16] + v[19] * v[0] + v[13] * v[5];
            y[121] = 0.08 * v[9] + -0.01 * v[14] + y[117];
            v[3] = v[12] * v[5] + v[17] * v[3] + v[10] * v[8];
            v[0] = v[12] * v[16] + v[17] * v[0] + v[10] * v[5];
            y[122] = 0.08 * v[3] + -0.01 * v[0] + y[118];
            y[124] = 0.08 * v[6] + 0.035 * v[15] + y[116];
            y[125] = 0.08 * v[9] + 0.035 * v[14] + y[117];
            y[126] = 0.08 * v[3] + 0.035 * v[0] + y[118];
            v[18] = -1. * v[21] + 4.89663865010925e-12 * v[18];
            v[21] = -1. * v[15] + 4.89663865010925e-12 * v[18];
            v[16] = y[116] + 0.088 * v[6];
            y[128] = 0.07 * v[21] + v[16];
            v[13] = -1. * v[19] + 4.89663865010925e-12 * v[13];
            v[19] = -1. * v[14] + 4.89663865010925e-12 * v[13];
            v[5] = y[117] + 0.088 * v[9];
            y[129] = 0.07 * v[19] + v[5];
            v[10] = -1. * v[17] + 4.89663865010925e-12 * v[10];
            v[17] = -1. * v[0] + 4.89663865010925e-12 * v[10];
            v[12] = y[118] + 0.088 * v[3];
            y[130] = 0.07 * v[17] + v[12];
            v[8] = cos(x[6]);
            v[2] = sin(x[6]);
            v[4] = 4.89663865010925e-12 * v[2];
            v[20] = v[6] * v[8] + v[15] * v[4] + v[18] * v[2];
            v[11] = -v[2];
            v[7] = 4.89663865010925e-12 * v[8];
            v[18] = v[6] * v[11] + v[15] * v[7] + v[18] * v[8];
            y[132] = 0.02 * v[20] + 0.04 * v[18] + 0.08 * v[21] + v[16];
            v[15] = v[9] * v[8] + v[14] * v[4] + v[13] * v[2];
            v[13] = v[9] * v[11] + v[14] * v[7] + v[13] * v[8];
            y[133] = 0.02 * v[15] + 0.04 * v[13] + 0.08 * v[19] + v[5];
            v[4] = v[3] * v[8] + v[0] * v[4] + v[10] * v[2];
            v[7] = v[3] * v[11] + v[0] * v[7] + v[10] * v[8];
            y[134] = 0.02 * v[4] + 0.04 * v[7] + 0.08 * v[17] + v[12];
            y[136] = 0.04 * v[20] + 0.02 * v[18] + 0.08 * v[21] + v[16];
            y[137] = 0.04 * v[15] + 0.02 * v[13] + 0.08 * v[19] + v[5];
            y[138] = 0.04 * v[4] + 0.02 * v[7] + 0.08 * v[17] + v[12];
            y[140] = 0.04 * v[20] + 0.06 * v[18] + 0.085 * v[21] + v[16];
            y[141] = 0.04 * v[15] + 0.06 * v[13] + 0.085 * v[19] + v[5];
            y[142] = 0.04 * v[4] + 0.06 * v[7] + 0.085 * v[17] + v[12];
            y[144] = 0.06 * v[20] + 0.04 * v[18] + 0.085 * v[21] + v[16];
            y[145] = 0.06 * v[15] + 0.04 * v[13] + 0.085 * v[19] + v[5];
            y[146] = 0.06 * v[4] + 0.04 * v[7] + 0.085 * v[17] + v[12];
            y[148] = -0.0530330085889673 * v[20] + -0.0530330085890148 * v[18] + 0.117 * v[21] + v[16];
            y[149] = -0.0530330085889673 * v[15] + -0.0530330085890148 * v[13] + 0.117 * v[19] + v[5];
            y[150] = -0.0530330085889673 * v[4] + -0.0530330085890148 * v[7] + 0.117 * v[17] + v[12];
            y[152] = -0.0318198051533804 * v[20] + -0.0318198051534089 * v[18] + 0.117 * v[21] + v[16];
            y[153] = -0.0318198051533804 * v[15] + -0.0318198051534089 * v[13] + 0.117 * v[19] + v[5];
            y[154] = -0.0318198051533804 * v[4] + -0.0318198051534089 * v[7] + 0.117 * v[17] + v[12];
            y[156] = -0.0106066017177935 * v[20] + -0.010606601717803 * v[18] + 0.117 * v[21] + v[16];
            y[157] = -0.0106066017177935 * v[15] + -0.010606601717803 * v[13] + 0.117 * v[19] + v[5];
            y[158] = -0.0106066017177935 * v[4] + -0.010606601717803 * v[7] + 0.117 * v[17] + v[12];
            y[160] = 0.0106066017177935 * v[20] + 0.010606601717803 * v[18] + 0.117 * v[21] + v[16];
            y[161] = 0.0106066017177935 * v[15] + 0.010606601717803 * v[13] + 0.117 * v[19] + v[5];
            y[162] = 0.0106066017177935 * v[4] + 0.010606601717803 * v[7] + 0.117 * v[17] + v[12];
            y[164] = 0.0318198051533804 * v[20] + 0.0318198051534089 * v[18] + 0.117 * v[21] + v[16];
            y[165] = 0.0318198051533804 * v[15] + 0.0318198051534089 * v[13] + 0.117 * v[19] + v[5];
            y[166] = 0.0318198051533804 * v[4] + 0.0318198051534089 * v[7] + 0.117 * v[17] + v[12];
            y[168] = 0.0530330085889673 * v[20] + 0.0530330085890148 * v[18] + 0.117 * v[21] + v[16];
            y[169] = 0.0530330085889673 * v[15] + 0.0530330085890148 * v[13] + 0.117 * v[19] + v[5];
            y[170] = 0.0530330085889673 * v[4] + 0.0530330085890148 * v[7] + 0.117 * v[17] + v[12];
            y[172] = -0.0530330085889673 * v[20] + -0.0530330085890148 * v[18] + 0.137 * v[21] + v[16];
            y[173] = -0.0530330085889673 * v[15] + -0.0530330085890148 * v[13] + 0.137 * v[19] + v[5];
            y[174] = -0.0530330085889673 * v[4] + -0.0530330085890148 * v[7] + 0.137 * v[17] + v[12];
            y[176] = -0.0318198051533804 * v[20] + -0.0318198051534089 * v[18] + 0.137 * v[21] + v[16];
            y[177] = -0.0318198051533804 * v[15] + -0.0318198051534089 * v[13] + 0.137 * v[19] + v[5];
            y[178] = -0.0318198051533804 * v[4] + -0.0318198051534089 * v[7] + 0.137 * v[17] + v[12];
            y[180] = -0.0106066017177935 * v[20] + -0.010606601717803 * v[18] + 0.137 * v[21] + v[16];
            y[181] = -0.0106066017177935 * v[15] + -0.010606601717803 * v[13] + 0.137 * v[19] + v[5];
            y[182] = -0.0106066017177935 * v[4] + -0.010606601717803 * v[7] + 0.137 * v[17] + v[12];
            y[184] = 0.0106066017177935 * v[20] + 0.010606601717803 * v[18] + 0.137 * v[21] + v[16];
            y[185] = 0.0106066017177935 * v[15] + 0.010606601717803 * v[13] + 0.137 * v[19] + v[5];
            y[186] = 0.0106066017177935 * v[4] + 0.010606601717803 * v[7] + 0.137 * v[17] + v[12];
            y[188] = 0.0318198051533804 * v[20] + 0.0318198051534089 * v[18] + 0.137 * v[21] + v[16];
            y[189] = 0.0318198051533804 * v[15] + 0.0318198051534089 * v[13] + 0.137 * v[19] + v[5];
            y[190] = 0.0318198051533804 * v[4] + 0.0318198051534089 * v[7] + 0.137 * v[17] + v[12];
            y[192] = 0.0530330085889673 * v[20] + 0.0530330085890148 * v[18] + 0.137 * v[21] + v[16];
            y[193] = 0.0530330085889673 * v[15] + 0.0530330085890148 * v[13] + 0.137 * v[19] + v[5];
            y[194] = 0.0530330085889673 * v[4] + 0.0530330085890148 * v[7] + 0.137 * v[17] + v[12];
            y[196] = -0.0530330085889673 * v[20] + -0.0530330085890148 * v[18] + 0.157 * v[21] + v[16];
            y[197] = -0.0530330085889673 * v[15] + -0.0530330085890148 * v[13] + 0.157 * v[19] + v[5];
            y[198] = -0.0530330085889673 * v[4] + -0.0530330085890148 * v[7] + 0.157 * v[17] + v[12];
            y[200] = -0.0318198051533804 * v[20] + -0.0318198051534089 * v[18] + 0.157 * v[21] + v[16];
            y[201] = -0.0318198051533804 * v[15] + -0.0318198051534089 * v[13] + 0.157 * v[19] + v[5];
            y[202] = -0.0318198051533804 * v[4] + -0.0318198051534089 * v[7] + 0.157 * v[17] + v[12];
            y[204] = -0.0106066017177935 * v[20] + -0.010606601717803 * v[18] + 0.157 * v[21] + v[16];
            y[205] = -0.0106066017177935 * v[15] + -0.010606601717803 * v[13] + 0.157 * v[19] + v[5];
            y[206] = -0.0106066017177935 * v[4] + -0.010606601717803 * v[7] + 0.157 * v[17] + v[12];
            y[208] = 0.0106066017177935 * v[20] + 0.010606601717803 * v[18] + 0.157 * v[21] + v[16];
            y[209] = 0.0106066017177935 * v[15] + 0.010606601717803 * v[13] + 0.157 * v[19] + v[5];
            y[210] = 0.0106066017177935 * v[4] + 0.010606601717803 * v[7] + 0.157 * v[17] + v[12];
            y[212] = 0.0318198051533804 * v[20] + 0.0318198051534089 * v[18] + 0.157 * v[21] + v[16];
            y[213] = 0.0318198051533804 * v[15] + 0.0318198051534089 * v[13] + 0.157 * v[19] + v[5];
            y[214] = 0.0318198051533804 * v[4] + 0.0318198051534089 * v[7] + 0.157 * v[17] + v[12];
            y[216] = 0.0530330085889673 * v[20] + 0.0530330085890148 * v[18] + 0.157 * v[21] + v[16];
            y[217] = 0.0530330085889673 * v[15] + 0.0530330085890148 * v[13] + 0.157 * v[19] + v[5];
            y[218] = 0.0530330085889673 * v[4] + 0.0530330085890148 * v[7] + 0.157 * v[17] + v[12];
            y[220] = 0.0565685424948984 * v[20] + 0.0565685424949492 * v[18] + 0.1874 * v[21] + v[16];
            y[221] = 0.0565685424948984 * v[15] + 0.0565685424949492 * v[13] + 0.1874 * v[19] + v[5];
            y[222] = 0.0565685424948984 * v[4] + 0.0565685424949492 * v[7] + 0.1874 * v[17] + v[12];
            y[224] = 0.0516187950265948 * v[20] + 0.0516187950266411 * v[18] + 0.2094 * v[21] + v[16];
            y[225] = 0.0516187950265948 * v[15] + 0.0516187950266411 * v[13] + 0.2094 * v[19] + v[5];
            y[226] = 0.0516187950265948 * v[4] + 0.0516187950266411 * v[7] + 0.2094 * v[17] + v[12];
            y[228] = -0.0565685424948984 * v[20] + -0.0565685424949492 * v[18] + 0.1874 * v[21] + v[16];
            y[229] = -0.0565685424948984 * v[15] + -0.0565685424949492 * v[13] + 0.1874 * v[19] + v[5];
            y[230] = -0.0565685424948984 * v[4] + -0.0565685424949492 * v[7] + 0.1874 * v[17] + v[12];
            y[232] = -0.0516187950265948 * v[20] + -0.0516187950266411 * v[18] + 0.2094 * v[21] + v[16];
            y[233] = -0.0516187950265948 * v[15] + -0.0516187950266411 * v[13] + 0.2094 * v[19] + v[5];
            y[234] = -0.0516187950265948 * v[4] + -0.0516187950266411 * v[7] + 0.2094 * v[17] + v[12];
            // dependent variables without operations
            y[0] = 0.;
            y[1] = 0.;
            y[2] = 0.05;
            y[3] = 0.0799999982118607;
            y[6] = 0.333;
            y[7] = 0.0599999986588955;
            y[10] = 0.333;
            y[11] = 0.0599999986588955;
            y[12] = 0.;
            y[13] = 0.;
            y[14] = 0.213;
            y[15] = 0.0599999986588955;
            y[16] = 0.;
            y[17] = 0.;
            y[18] = 0.163;
            y[19] = 0.0599999986588955;
            y[22] = 0.333000000000147;
            y[23] = 0.0599999986588955;
            y[26] = 0.333000000000392;
            y[27] = 0.0599999986588955;
            y[31] = 0.0599999986588955;
            y[35] = 0.0599999986588955;
            y[39] = 0.0599999986588955;
            y[43] = 0.0500000007450581;
            y[47] = 0.0549999997019768;
            y[51] = 0.0549999997019768;
            y[55] = 0.0599999986588955;
            y[59] = 0.0549999997019768;
            y[63] = 0.0549999997019768;
            y[67] = 0.0549999997019768;
            y[71] = 0.0599999986588955;
            y[75] = 0.0599999986588955;
            y[79] = 0.0599999986588955;
            y[83] = 0.0500000007450581;
            y[87] = 0.025000000372529;
            y[91] = 0.025000000372529;
            y[95] = 0.025000000372529;
            y[99] = 0.025000000372529;
            y[103] = 0.025000000372529;
            y[107] = 0.025000000372529;
            y[111] = 0.025000000372529;
            y[115] = 0.025000000372529;
            y[119] = 0.0500000007450581;
            y[123] = 0.0500000007450581;
            y[127] = 0.0520000010728836;
            y[131] = 0.0500000007450581;
            y[135] = 0.025000000372529;
            y[139] = 0.025000000372529;
            y[143] = 0.0199999995529652;
            y[147] = 0.0199999995529652;
            y[151] = 0.0280000008642673;
            y[155] = 0.0280000008642673;
            y[159] = 0.0280000008642673;
            y[163] = 0.0280000008642673;
            y[167] = 0.0280000008642673;
            y[171] = 0.0280000008642673;
            y[175] = 0.0260000005364418;
            y[179] = 0.0260000005364418;
            y[183] = 0.0260000005364418;
            y[187] = 0.0260000005364418;
            y[191] = 0.0260000005364418;
            y[195] = 0.0260000005364418;
            y[199] = 0.0240000002086163;
            y[203] = 0.0240000002086163;
            y[207] = 0.0240000002086163;
            y[211] = 0.0240000002086163;
            y[215] = 0.0240000002086163;
            y[219] = 0.0240000002086163;
            y[223] = 0.0120000001043081;
            y[227] = 0.0120000001043081;
            y[231] = 0.0120000001043081;
            y[235] = 0.0120000001043081;

            for (auto i = 0U; i < 59; ++i)
            {
                out.x[i] = y[i * 4 + 0];
                out.y[i] = y[i * 4 + 1];
                out.z[i] = y[i * 4 + 2];
                out.r[i] = y[i * 4 + 3];
            }
        }

        using Debug = std::
            pair<std::vector<std::vector<std::string>>, std::vector<std::pair<std::size_t, std::size_t>>>;

        template <std::size_t rake>
        inline static auto fkcc_debug(
            const vamp::collision::Environment<FloatVector<rake>> &environment,
            const ConfigurationBlock<rake> &x) noexcept -> Debug
        {
            std::array<FloatVector<rake, 1>, 57> v;
            std::array<FloatVector<rake, 1>, 280> y;

            v[0] = sin(x[0]);
            v[1] = -v[0];
            y[4] = -0.08 * v[1];
            v[2] = cos(x[0]);
            y[5] = -0.08 * v[2];
            y[8] = -0.03 * v[1];
            y[9] = -0.03 * v[2];
            y[20] = 0.03 * v[1];
            y[21] = 0.03 * v[2];
            y[24] = 0.08 * v[1];
            y[25] = 0.08 * v[2];
            v[3] = sin(x[1]);
            v[4] = -v[3];
            v[5] = cos(x[1]);
            v[6] = 4.89663865010925e-12 * v[5];
            v[7] = v[2] * v[4] + v[1] * v[6];
            y[28] = -0.12 * v[7];
            v[6] = v[0] * v[4] + v[2] * v[6];
            y[29] = -0.12 * v[6];
            v[4] = -1. * v[5];
            y[30] = 0.333 + -0.12 * v[4];
            y[32] = -0.17 * v[7];
            y[33] = -0.17 * v[6];
            y[34] = 0.333 + -0.17 * v[4];
            v[8] = -1. * v[7] + 4.89663865010925e-12 * v[1];
            v[9] = -0.316 * v[7];
            y[36] = -0.1 * v[8] + v[9];
            v[10] = -1. * v[6] + 4.89663865010925e-12 * v[2];
            v[11] = -0.316 * v[6];
            y[37] = -0.1 * v[10] + v[11];
            v[12] = 2.39770700697438e-23 + -1. * v[4];
            v[13] = 0.333 + -0.316 * v[4];
            y[38] = -0.1 * v[12] + v[13];
            y[40] = -0.06 * v[8] + v[9];
            y[41] = -0.06 * v[10] + v[11];
            y[42] = -0.06 * v[12] + v[13];
            v[14] = 4.89663865010925e-12 * v[3];
            v[15] = v[2] * v[5] + v[1] * v[14];
            v[16] = cos(x[2]);
            v[17] = sin(x[2]);
            v[18] = 4.89663865010925e-12 * v[17];
            v[19] = v[15] * v[16] + v[7] * v[18] + v[1] * v[17];
            v[20] = -v[17];
            v[21] = 4.89663865010925e-12 * v[16];
            v[15] = v[15] * v[20] + v[7] * v[21] + v[1] * v[16];
            y[44] = 0.08 * v[19] + 0.06 * v[15] + v[9];
            v[14] = v[0] * v[5] + v[2] * v[14];
            v[5] = v[14] * v[16] + v[6] * v[18] + v[2] * v[17];
            v[14] = v[14] * v[20] + v[6] * v[21] + v[2] * v[16];
            y[45] = 0.08 * v[5] + 0.06 * v[14] + v[11];
            v[3] = -1. * v[3];
            v[18] = v[3] * v[16] + v[4] * v[18] + 4.89663865010925e-12 * v[17];
            v[3] = v[3] * v[20] + v[4] * v[21] + 4.89663865010925e-12 * v[16];
            y[46] = 0.08 * v[18] + 0.06 * v[3] + v[13];
            y[48] = 0.08 * v[19] + 0.02 * v[15] + v[9];
            y[49] = 0.08 * v[5] + 0.02 * v[14] + v[11];
            y[50] = 0.08 * v[18] + 0.02 * v[3] + v[13];
            v[21] = cos(x[3]);
            v[20] = sin(x[3]);
            v[16] = 4.89663865010925e-12 * v[20];
            v[17] = v[19] * v[21] + v[15] * v[16] + v[8] * v[20];
            v[0] = -v[20];
            v[22] = 4.89663865010925e-12 * v[21];
            v[23] = v[19] * v[0] + v[15] * v[22] + v[8] * v[21];
            v[24] = v[9] + 0.0825 * v[19];
            y[52] = -0.08 * v[17] + 0.095 * v[23] + v[24];
            v[25] = v[5] * v[21] + v[14] * v[16] + v[10] * v[20];
            v[26] = v[5] * v[0] + v[14] * v[22] + v[10] * v[21];
            v[27] = v[11] + 0.0825 * v[5];
            y[53] = -0.08 * v[25] + 0.095 * v[26] + v[27];
            v[16] = v[18] * v[21] + v[3] * v[16] + v[12] * v[20];
            v[22] = v[18] * v[0] + v[3] * v[22] + v[12] * v[21];
            v[0] = v[13] + 0.0825 * v[18];
            y[54] = -0.08 * v[16] + 0.095 * v[22] + v[0];
            v[21] = -1. * v[15] + 4.89663865010925e-12 * v[8];
            y[56] = 0.02 * v[21] + v[24];
            v[20] = -1. * v[14] + 4.89663865010925e-12 * v[10];
            y[57] = 0.02 * v[20] + v[27];
            v[28] = -1. * v[3] + 4.89663865010925e-12 * v[12];
            y[58] = 0.02 * v[28] + v[0];
            y[60] = 0.06 * v[21] + v[24];
            y[61] = 0.06 * v[20] + v[27];
            y[62] = 0.06 * v[28] + v[0];
            y[64] = -0.08 * v[17] + 0.06 * v[23] + v[24];
            y[65] = -0.08 * v[25] + 0.06 * v[26] + v[27];
            y[66] = -0.08 * v[16] + 0.06 * v[22] + v[0];
            v[29] = sin(x[4]);
            v[30] = -v[29];
            v[31] = cos(x[4]);
            v[32] = 4.89663865010925e-12 * v[31];
            v[33] = -1. * v[31];
            v[34] = v[17] * v[30] + v[23] * v[32] + v[21] * v[33];
            y[116] = v[24] + -0.0825 * v[17] + 0.384 * v[23];
            y[68] = 0.055 * v[34] + y[116];
            v[35] = v[25] * v[30] + v[26] * v[32] + v[20] * v[33];
            y[117] = v[27] + -0.0825 * v[25] + 0.384 * v[26];
            y[69] = 0.055 * v[35] + y[117];
            v[33] = v[16] * v[30] + v[22] * v[32] + v[28] * v[33];
            y[118] = v[0] + -0.0825 * v[16] + 0.384 * v[22];
            y[70] = 0.055 * v[33] + y[118];
            y[72] = 0.075 * v[34] + y[116];
            y[73] = 0.075 * v[35] + y[117];
            y[74] = 0.075 * v[33] + y[118];
            v[32] = v[23] + 4.89663865010925e-12 * v[21];
            y[76] = -0.22 * v[32] + y[116];
            v[30] = v[26] + 4.89663865010925e-12 * v[20];
            y[77] = -0.22 * v[30] + y[117];
            v[36] = v[22] + 4.89663865010925e-12 * v[28];
            y[78] = -0.22 * v[36] + y[118];
            y[80] = 0.05 * v[34] + -0.18 * v[32] + y[116];
            y[81] = 0.05 * v[35] + -0.18 * v[30] + y[117];
            y[82] = 0.05 * v[33] + -0.18 * v[36] + y[118];
            v[37] = 4.89663865010925e-12 * v[29];
            v[29] = -1. * v[29];
            v[38] = v[17] * v[31] + v[23] * v[37] + v[21] * v[29];
            y[84] = 0.01 * v[38] + 0.08 * v[34] + -0.14 * v[32] + y[116];
            v[39] = v[25] * v[31] + v[26] * v[37] + v[20] * v[29];
            y[85] = 0.01 * v[39] + 0.08 * v[35] + -0.14 * v[30] + y[117];
            v[29] = v[16] * v[31] + v[22] * v[37] + v[28] * v[29];
            y[86] = 0.01 * v[29] + 0.08 * v[33] + -0.14 * v[36] + y[118];
            y[88] = 0.01 * v[38] + 0.085 * v[34] + -0.11 * v[32] + y[116];
            y[89] = 0.01 * v[39] + 0.085 * v[35] + -0.11 * v[30] + y[117];
            y[90] = 0.01 * v[29] + 0.085 * v[33] + -0.11 * v[36] + y[118];
            y[92] = 0.01 * v[38] + 0.09 * v[34] + -0.08 * v[32] + y[116];
            y[93] = 0.01 * v[39] + 0.09 * v[35] + -0.08 * v[30] + y[117];
            y[94] = 0.01 * v[29] + 0.09 * v[33] + -0.08 * v[36] + y[118];
            y[96] = 0.01 * v[38] + 0.095 * v[34] + -0.05 * v[32] + y[116];
            y[97] = 0.01 * v[39] + 0.095 * v[35] + -0.05 * v[30] + y[117];
            y[98] = 0.01 * v[29] + 0.095 * v[33] + -0.05 * v[36] + y[118];
            y[100] = -0.01 * v[38] + 0.08 * v[34] + -0.14 * v[32] + y[116];
            y[101] = -0.01 * v[39] + 0.08 * v[35] + -0.14 * v[30] + y[117];
            y[102] = -0.01 * v[29] + 0.08 * v[33] + -0.14 * v[36] + y[118];
            y[104] = -0.01 * v[38] + 0.085 * v[34] + -0.11 * v[32] + y[116];
            y[105] = -0.01 * v[39] + 0.085 * v[35] + -0.11 * v[30] + y[117];
            y[106] = -0.01 * v[29] + 0.085 * v[33] + -0.11 * v[36] + y[118];
            y[108] = -0.01 * v[38] + 0.09 * v[34] + -0.08 * v[32] + y[116];
            y[109] = -0.01 * v[39] + 0.09 * v[35] + -0.08 * v[30] + y[117];
            y[110] = -0.01 * v[29] + 0.09 * v[33] + -0.08 * v[36] + y[118];
            y[112] = -0.01 * v[38] + 0.095 * v[34] + -0.05 * v[32] + y[116];
            y[113] = -0.01 * v[39] + 0.095 * v[35] + -0.05 * v[30] + y[117];
            y[114] = -0.01 * v[29] + 0.095 * v[33] + -0.05 * v[36] + y[118];
            v[37] = cos(x[5]);
            v[31] = sin(x[5]);
            v[40] = 4.89663865010925e-12 * v[31];
            v[41] = v[38] * v[37] + v[34] * v[40] + v[32] * v[31];
            v[42] = -v[31];
            v[43] = 4.89663865010925e-12 * v[37];
            v[38] = v[38] * v[42] + v[34] * v[43] + v[32] * v[37];
            y[120] = 0.08 * v[41] + -0.01 * v[38] + y[116];
            v[44] = v[39] * v[37] + v[35] * v[40] + v[30] * v[31];
            v[39] = v[39] * v[42] + v[35] * v[43] + v[30] * v[37];
            y[121] = 0.08 * v[44] + -0.01 * v[39] + y[117];
            v[40] = v[29] * v[37] + v[33] * v[40] + v[36] * v[31];
            v[43] = v[29] * v[42] + v[33] * v[43] + v[36] * v[37];
            y[122] = 0.08 * v[40] + -0.01 * v[43] + y[118];
            y[124] = 0.08 * v[41] + 0.035 * v[38] + y[116];
            y[125] = 0.08 * v[44] + 0.035 * v[39] + y[117];
            y[126] = 0.08 * v[40] + 0.035 * v[43] + y[118];
            v[42] = -1. * v[34] + 4.89663865010925e-12 * v[32];
            v[37] = -1. * v[38] + 4.89663865010925e-12 * v[42];
            v[29] = y[116] + 0.088 * v[41];
            y[128] = 0.07 * v[37] + v[29];
            v[31] = -1. * v[35] + 4.89663865010925e-12 * v[30];
            v[45] = -1. * v[39] + 4.89663865010925e-12 * v[31];
            v[46] = y[117] + 0.088 * v[44];
            y[129] = 0.07 * v[45] + v[46];
            v[47] = -1. * v[33] + 4.89663865010925e-12 * v[36];
            v[48] = -1. * v[43] + 4.89663865010925e-12 * v[47];
            v[49] = y[118] + 0.088 * v[40];
            y[130] = 0.07 * v[48] + v[49];
            v[50] = cos(x[6]);
            v[51] = sin(x[6]);
            v[52] = 4.89663865010925e-12 * v[51];
            v[53] = v[41] * v[50] + v[38] * v[52] + v[42] * v[51];
            v[54] = -v[51];
            v[55] = 4.89663865010925e-12 * v[50];
            v[42] = v[41] * v[54] + v[38] * v[55] + v[42] * v[50];
            y[132] = 0.02 * v[53] + 0.04 * v[42] + 0.08 * v[37] + v[29];
            v[56] = v[44] * v[50] + v[39] * v[52] + v[31] * v[51];
            v[31] = v[44] * v[54] + v[39] * v[55] + v[31] * v[50];
            y[133] = 0.02 * v[56] + 0.04 * v[31] + 0.08 * v[45] + v[46];
            v[52] = v[40] * v[50] + v[43] * v[52] + v[47] * v[51];
            v[55] = v[40] * v[54] + v[43] * v[55] + v[47] * v[50];
            y[134] = 0.02 * v[52] + 0.04 * v[55] + 0.08 * v[48] + v[49];
            y[136] = 0.04 * v[53] + 0.02 * v[42] + 0.08 * v[37] + v[29];
            y[137] = 0.04 * v[56] + 0.02 * v[31] + 0.08 * v[45] + v[46];
            y[138] = 0.04 * v[52] + 0.02 * v[55] + 0.08 * v[48] + v[49];
            y[140] = 0.04 * v[53] + 0.06 * v[42] + 0.085 * v[37] + v[29];
            y[141] = 0.04 * v[56] + 0.06 * v[31] + 0.085 * v[45] + v[46];
            y[142] = 0.04 * v[52] + 0.06 * v[55] + 0.085 * v[48] + v[49];
            y[144] = 0.06 * v[53] + 0.04 * v[42] + 0.085 * v[37] + v[29];
            y[145] = 0.06 * v[56] + 0.04 * v[31] + 0.085 * v[45] + v[46];
            y[146] = 0.06 * v[52] + 0.04 * v[55] + 0.085 * v[48] + v[49];
            y[148] = -0.0530330085889673 * v[53] + -0.0530330085890148 * v[42] + 0.117 * v[37] + v[29];
            y[149] = -0.0530330085889673 * v[56] + -0.0530330085890148 * v[31] + 0.117 * v[45] + v[46];
            y[150] = -0.0530330085889673 * v[52] + -0.0530330085890148 * v[55] + 0.117 * v[48] + v[49];
            y[152] = -0.0318198051533804 * v[53] + -0.0318198051534089 * v[42] + 0.117 * v[37] + v[29];
            y[153] = -0.0318198051533804 * v[56] + -0.0318198051534089 * v[31] + 0.117 * v[45] + v[46];
            y[154] = -0.0318198051533804 * v[52] + -0.0318198051534089 * v[55] + 0.117 * v[48] + v[49];
            y[156] = -0.0106066017177935 * v[53] + -0.010606601717803 * v[42] + 0.117 * v[37] + v[29];
            y[157] = -0.0106066017177935 * v[56] + -0.010606601717803 * v[31] + 0.117 * v[45] + v[46];
            y[158] = -0.0106066017177935 * v[52] + -0.010606601717803 * v[55] + 0.117 * v[48] + v[49];
            y[160] = 0.0106066017177935 * v[53] + 0.010606601717803 * v[42] + 0.117 * v[37] + v[29];
            y[161] = 0.0106066017177935 * v[56] + 0.010606601717803 * v[31] + 0.117 * v[45] + v[46];
            y[162] = 0.0106066017177935 * v[52] + 0.010606601717803 * v[55] + 0.117 * v[48] + v[49];
            y[164] = 0.0318198051533804 * v[53] + 0.0318198051534089 * v[42] + 0.117 * v[37] + v[29];
            y[165] = 0.0318198051533804 * v[56] + 0.0318198051534089 * v[31] + 0.117 * v[45] + v[46];
            y[166] = 0.0318198051533804 * v[52] + 0.0318198051534089 * v[55] + 0.117 * v[48] + v[49];
            y[168] = 0.0530330085889673 * v[53] + 0.0530330085890148 * v[42] + 0.117 * v[37] + v[29];
            y[169] = 0.0530330085889673 * v[56] + 0.0530330085890148 * v[31] + 0.117 * v[45] + v[46];
            y[170] = 0.0530330085889673 * v[52] + 0.0530330085890148 * v[55] + 0.117 * v[48] + v[49];
            y[172] = -0.0530330085889673 * v[53] + -0.0530330085890148 * v[42] + 0.137 * v[37] + v[29];
            y[173] = -0.0530330085889673 * v[56] + -0.0530330085890148 * v[31] + 0.137 * v[45] + v[46];
            y[174] = -0.0530330085889673 * v[52] + -0.0530330085890148 * v[55] + 0.137 * v[48] + v[49];
            y[176] = -0.0318198051533804 * v[53] + -0.0318198051534089 * v[42] + 0.137 * v[37] + v[29];
            y[177] = -0.0318198051533804 * v[56] + -0.0318198051534089 * v[31] + 0.137 * v[45] + v[46];
            y[178] = -0.0318198051533804 * v[52] + -0.0318198051534089 * v[55] + 0.137 * v[48] + v[49];
            y[180] = -0.0106066017177935 * v[53] + -0.010606601717803 * v[42] + 0.137 * v[37] + v[29];
            y[181] = -0.0106066017177935 * v[56] + -0.010606601717803 * v[31] + 0.137 * v[45] + v[46];
            y[182] = -0.0106066017177935 * v[52] + -0.010606601717803 * v[55] + 0.137 * v[48] + v[49];
            y[184] = 0.0106066017177935 * v[53] + 0.010606601717803 * v[42] + 0.137 * v[37] + v[29];
            y[185] = 0.0106066017177935 * v[56] + 0.010606601717803 * v[31] + 0.137 * v[45] + v[46];
            y[186] = 0.0106066017177935 * v[52] + 0.010606601717803 * v[55] + 0.137 * v[48] + v[49];
            y[188] = 0.0318198051533804 * v[53] + 0.0318198051534089 * v[42] + 0.137 * v[37] + v[29];
            y[189] = 0.0318198051533804 * v[56] + 0.0318198051534089 * v[31] + 0.137 * v[45] + v[46];
            y[190] = 0.0318198051533804 * v[52] + 0.0318198051534089 * v[55] + 0.137 * v[48] + v[49];
            y[192] = 0.0530330085889673 * v[53] + 0.0530330085890148 * v[42] + 0.137 * v[37] + v[29];
            y[193] = 0.0530330085889673 * v[56] + 0.0530330085890148 * v[31] + 0.137 * v[45] + v[46];
            y[194] = 0.0530330085889673 * v[52] + 0.0530330085890148 * v[55] + 0.137 * v[48] + v[49];
            y[196] = -0.0530330085889673 * v[53] + -0.0530330085890148 * v[42] + 0.157 * v[37] + v[29];
            y[197] = -0.0530330085889673 * v[56] + -0.0530330085890148 * v[31] + 0.157 * v[45] + v[46];
            y[198] = -0.0530330085889673 * v[52] + -0.0530330085890148 * v[55] + 0.157 * v[48] + v[49];
            y[200] = -0.0318198051533804 * v[53] + -0.0318198051534089 * v[42] + 0.157 * v[37] + v[29];
            y[201] = -0.0318198051533804 * v[56] + -0.0318198051534089 * v[31] + 0.157 * v[45] + v[46];
            y[202] = -0.0318198051533804 * v[52] + -0.0318198051534089 * v[55] + 0.157 * v[48] + v[49];
            y[204] = -0.0106066017177935 * v[53] + -0.010606601717803 * v[42] + 0.157 * v[37] + v[29];
            y[205] = -0.0106066017177935 * v[56] + -0.010606601717803 * v[31] + 0.157 * v[45] + v[46];
            y[206] = -0.0106066017177935 * v[52] + -0.010606601717803 * v[55] + 0.157 * v[48] + v[49];
            y[208] = 0.0106066017177935 * v[53] + 0.010606601717803 * v[42] + 0.157 * v[37] + v[29];
            y[209] = 0.0106066017177935 * v[56] + 0.010606601717803 * v[31] + 0.157 * v[45] + v[46];
            y[210] = 0.0106066017177935 * v[52] + 0.010606601717803 * v[55] + 0.157 * v[48] + v[49];
            y[212] = 0.0318198051533804 * v[53] + 0.0318198051534089 * v[42] + 0.157 * v[37] + v[29];
            y[213] = 0.0318198051533804 * v[56] + 0.0318198051534089 * v[31] + 0.157 * v[45] + v[46];
            y[214] = 0.0318198051533804 * v[52] + 0.0318198051534089 * v[55] + 0.157 * v[48] + v[49];
            y[216] = 0.0530330085889673 * v[53] + 0.0530330085890148 * v[42] + 0.157 * v[37] + v[29];
            y[217] = 0.0530330085889673 * v[56] + 0.0530330085890148 * v[31] + 0.157 * v[45] + v[46];
            y[218] = 0.0530330085889673 * v[52] + 0.0530330085890148 * v[55] + 0.157 * v[48] + v[49];
            y[220] = 0.0565685424948984 * v[53] + 0.0565685424949492 * v[42] + 0.1874 * v[37] + v[29];
            y[221] = 0.0565685424948984 * v[56] + 0.0565685424949492 * v[31] + 0.1874 * v[45] + v[46];
            y[222] = 0.0565685424948984 * v[52] + 0.0565685424949492 * v[55] + 0.1874 * v[48] + v[49];
            y[224] = 0.0516187950265948 * v[53] + 0.0516187950266411 * v[42] + 0.2094 * v[37] + v[29];
            y[225] = 0.0516187950265948 * v[56] + 0.0516187950266411 * v[31] + 0.2094 * v[45] + v[46];
            y[226] = 0.0516187950265948 * v[52] + 0.0516187950266411 * v[55] + 0.2094 * v[48] + v[49];
            y[228] = -0.0565685424948984 * v[53] + -0.0565685424949492 * v[42] + 0.1874 * v[37] + v[29];
            y[229] = -0.0565685424948984 * v[56] + -0.0565685424949492 * v[31] + 0.1874 * v[45] + v[46];
            y[230] = -0.0565685424948984 * v[52] + -0.0565685424949492 * v[55] + 0.1874 * v[48] + v[49];
            y[232] = -0.0516187950265948 * v[53] + -0.0516187950266411 * v[42] + 0.2094 * v[37] + v[29];
            y[233] = -0.0516187950265948 * v[56] + -0.0516187950266411 * v[31] + 0.2094 * v[45] + v[46];
            y[234] = -0.0516187950265948 * v[52] + -0.0516187950266411 * v[55] + 0.2094 * v[48] + v[49];
            y[240] = -0.0399999991059303 * v[1];
            y[241] = -0.0399999991059303 * v[2];
            y[244] = -0.0850000008940697 * v[7] + 0.0399999991059303 * v[1];
            y[245] = -0.0850000008940697 * v[6] + 0.0399999991059303 * v[2];
            y[246] = 0.333 + 1.95865541626434e-13 + -0.0850000008940697 * v[4];
            y[248] =
                0.0385857857763767 * v[19] + 0.0289393402636051 * v[15] + -0.0517677664756775 * v[8] + v[9];
            y[249] =
                0.0385857857763767 * v[5] + 0.0289393402636051 * v[14] + -0.0517677664756775 * v[10] + v[11];
            y[250] =
                0.0385857857763767 * v[18] + 0.0289393402636051 * v[3] + -0.0517677664756775 * v[12] + v[13];
            y[252] =
                -0.041449997574091 * v[17] + 0.0492218732833862 * v[23] + 0.0289125014096498 * v[21] + v[24];
            y[253] =
                -0.041449997574091 * v[25] + 0.0492218732833862 * v[26] + 0.0289125014096498 * v[20] + v[27];
            y[254] =
                -0.041449997574091 * v[16] + 0.0492218732833862 * v[22] + 0.0289125014096498 * v[28] + v[0];
            y[256] = 0.0375000014901161 * v[34] + -0.109999999403954 * v[32] + y[116];
            y[257] = 0.0375000014901161 * v[35] + -0.109999999403954 * v[30] + y[117];
            y[258] = 0.0375000014901161 * v[33] + -0.109999999403954 * v[36] + y[118];
            y[260] = 0.0424309633672237 * v[41] + 0.0144476993009448 * v[38] + y[116];
            y[261] = 0.0424309633672237 * v[44] + 0.0144476993009448 * v[39] + y[117];
            y[262] = 0.0424309633672237 * v[40] + 0.0144476993009448 * v[43] + y[118];
            y[264] =
                0.0153005504980683 * v[53] + 0.0153005504980683 * v[42] + 0.0745901614427567 * v[37] + v[29];
            y[265] =
                0.0153005504980683 * v[56] + 0.0153005504980683 * v[31] + 0.0745901614427567 * v[45] + v[46];
            y[266] =
                0.0153005504980683 * v[52] + 0.0153005504980683 * v[55] + 0.0745901614427567 * v[48] + v[49];
            y[268] = -5.20417042793042e-18 * v[53] + -2.16840434497101e-18 * v[42] +
                     0.129201397299767 * v[37] + v[29];
            y[269] = -5.20417042793042e-18 * v[56] + -2.16840434497101e-18 * v[31] +
                     0.129201397299767 * v[45] + v[46];
            y[270] = -5.20417042793042e-18 * v[52] + -2.16840434497101e-18 * v[55] +
                     0.129201397299767 * v[48] + v[49];
            y[272] =
                0.0540936700999737 * v[53] + 0.0540936700999737 * v[42] + 0.198400005698204 * v[37] + v[29];
            y[273] =
                0.0540936700999737 * v[56] + 0.0540936700999737 * v[31] + 0.198400005698204 * v[45] + v[46];
            y[274] =
                0.0540936700999737 * v[52] + 0.0540936700999737 * v[55] + 0.198400005698204 * v[48] + v[49];
            y[276] =
                -0.0540936700999737 * v[53] + -0.0540936700999737 * v[42] + 0.198400005698204 * v[37] + v[29];
            y[277] =
                -0.0540936700999737 * v[56] + -0.0540936700999737 * v[31] + 0.198400005698204 * v[45] + v[46];
            y[278] =
                -0.0540936700999737 * v[52] + -0.0540936700999737 * v[55] + 0.198400005698204 * v[48] + v[49];
            // dependent variables without operations
            y[0] = 0.;
            y[1] = 0.;
            y[2] = 0.05;
            y[3] = 0.0799999982118607;
            y[6] = 0.333;
            y[7] = 0.0599999986588955;
            y[10] = 0.333;
            y[11] = 0.0599999986588955;
            y[12] = 0.;
            y[13] = 0.;
            y[14] = 0.213;
            y[15] = 0.0599999986588955;
            y[16] = 0.;
            y[17] = 0.;
            y[18] = 0.163;
            y[19] = 0.0599999986588955;
            y[22] = 0.333000000000147;
            y[23] = 0.0599999986588955;
            y[26] = 0.333000000000392;
            y[27] = 0.0599999986588955;
            y[31] = 0.0599999986588955;
            y[35] = 0.0599999986588955;
            y[39] = 0.0599999986588955;
            y[43] = 0.0500000007450581;
            y[47] = 0.0549999997019768;
            y[51] = 0.0549999997019768;
            y[55] = 0.0599999986588955;
            y[59] = 0.0549999997019768;
            y[63] = 0.0549999997019768;
            y[67] = 0.0549999997019768;
            y[71] = 0.0599999986588955;
            y[75] = 0.0599999986588955;
            y[79] = 0.0599999986588955;
            y[83] = 0.0500000007450581;
            y[87] = 0.025000000372529;
            y[91] = 0.025000000372529;
            y[95] = 0.025000000372529;
            y[99] = 0.025000000372529;
            y[103] = 0.025000000372529;
            y[107] = 0.025000000372529;
            y[111] = 0.025000000372529;
            y[115] = 0.025000000372529;
            y[119] = 0.0500000007450581;
            y[123] = 0.0500000007450581;
            y[127] = 0.0520000010728836;
            y[131] = 0.0500000007450581;
            y[135] = 0.025000000372529;
            y[139] = 0.025000000372529;
            y[143] = 0.0199999995529652;
            y[147] = 0.0199999995529652;
            y[151] = 0.0280000008642673;
            y[155] = 0.0280000008642673;
            y[159] = 0.0280000008642673;
            y[163] = 0.0280000008642673;
            y[167] = 0.0280000008642673;
            y[171] = 0.0280000008642673;
            y[175] = 0.0260000005364418;
            y[179] = 0.0260000005364418;
            y[183] = 0.0260000005364418;
            y[187] = 0.0260000005364418;
            y[191] = 0.0260000005364418;
            y[195] = 0.0260000005364418;
            y[199] = 0.0240000002086163;
            y[203] = 0.0240000002086163;
            y[207] = 0.0240000002086163;
            y[211] = 0.0240000002086163;
            y[215] = 0.0240000002086163;
            y[219] = 0.0240000002086163;
            y[223] = 0.0120000001043081;
            y[227] = 0.0120000001043081;
            y[231] = 0.0120000001043081;
            y[235] = 0.0120000001043081;
            y[236] = 0.;
            y[237] = 0.;
            y[238] = 0.0500000007450581;
            y[239] = 0.0799999982118607;
            y[242] = 0.24799999910593;
            y[243] = 0.153941467404366;
            y[247] = 0.153941467404366;
            y[251] = 0.128210678696632;
            y[255] = 0.126465573906898;
            y[259] = 0.176216393709183;
            y[263] = 0.0948232412338257;
            y[267] = 0.0721197500824928;
            y[271] = 0.103986009955406;
            y[275] = 0.0235433969646692;
            y[279] = 0.0235433969646692;

            Debug output;

            output.first.emplace_back(
                sphere_environment_get_collisions<decltype(x[0])>(environment, y[0], y[1], y[2], y[3]));

            output.first.emplace_back(
                sphere_environment_get_collisions<decltype(x[0])>(environment, y[4], y[5], y[6], y[7]));

            output.first.emplace_back(
                sphere_environment_get_collisions<decltype(x[0])>(environment, y[8], y[9], y[10], y[11]));

            output.first.emplace_back(
                sphere_environment_get_collisions<decltype(x[0])>(environment, y[12], y[13], y[14], y[15]));

            output.first.emplace_back(
                sphere_environment_get_collisions<decltype(x[0])>(environment, y[16], y[17], y[18], y[19]));

            output.first.emplace_back(
                sphere_environment_get_collisions<decltype(x[0])>(environment, y[20], y[21], y[22], y[23]));

            output.first.emplace_back(
                sphere_environment_get_collisions<decltype(x[0])>(environment, y[24], y[25], y[26], y[27]));

            output.first.emplace_back(
                sphere_environment_get_collisions<decltype(x[0])>(environment, y[28], y[29], y[30], y[31]));

            output.first.emplace_back(
                sphere_environment_get_collisions<decltype(x[0])>(environment, y[32], y[33], y[34], y[35]));

            output.first.emplace_back(
                sphere_environment_get_collisions<decltype(x[0])>(environment, y[36], y[37], y[38], y[39]));

            output.first.emplace_back(
                sphere_environment_get_collisions<decltype(x[0])>(environment, y[40], y[41], y[42], y[43]));

            output.first.emplace_back(
                sphere_environment_get_collisions<decltype(x[0])>(environment, y[44], y[45], y[46], y[47]));

            output.first.emplace_back(
                sphere_environment_get_collisions<decltype(x[0])>(environment, y[48], y[49], y[50], y[51]));

            output.first.emplace_back(
                sphere_environment_get_collisions<decltype(x[0])>(environment, y[52], y[53], y[54], y[55]));

            output.first.emplace_back(
                sphere_environment_get_collisions<decltype(x[0])>(environment, y[56], y[57], y[58], y[59]));

            output.first.emplace_back(
                sphere_environment_get_collisions<decltype(x[0])>(environment, y[60], y[61], y[62], y[63]));

            output.first.emplace_back(
                sphere_environment_get_collisions<decltype(x[0])>(environment, y[64], y[65], y[66], y[67]));

            output.first.emplace_back(
                sphere_environment_get_collisions<decltype(x[0])>(environment, y[68], y[69], y[70], y[71]));

            output.first.emplace_back(
                sphere_environment_get_collisions<decltype(x[0])>(environment, y[72], y[73], y[74], y[75]));

            output.first.emplace_back(
                sphere_environment_get_collisions<decltype(x[0])>(environment, y[76], y[77], y[78], y[79]));

            output.first.emplace_back(
                sphere_environment_get_collisions<decltype(x[0])>(environment, y[80], y[81], y[82], y[83]));

            output.first.emplace_back(
                sphere_environment_get_collisions<decltype(x[0])>(environment, y[84], y[85], y[86], y[87]));

            output.first.emplace_back(
                sphere_environment_get_collisions<decltype(x[0])>(environment, y[88], y[89], y[90], y[91]));

            output.first.emplace_back(
                sphere_environment_get_collisions<decltype(x[0])>(environment, y[92], y[93], y[94], y[95]));

            output.first.emplace_back(
                sphere_environment_get_collisions<decltype(x[0])>(environment, y[96], y[97], y[98], y[99]));

            output.first.emplace_back(
                sphere_environment_get_collisions<decltype(x[0])>(
                    environment, y[100], y[101], y[102], y[103]));

            output.first.emplace_back(
                sphere_environment_get_collisions<decltype(x[0])>(
                    environment, y[104], y[105], y[106], y[107]));

            output.first.emplace_back(
                sphere_environment_get_collisions<decltype(x[0])>(
                    environment, y[108], y[109], y[110], y[111]));

            output.first.emplace_back(
                sphere_environment_get_collisions<decltype(x[0])>(
                    environment, y[112], y[113], y[114], y[115]));

            output.first.emplace_back(
                sphere_environment_get_collisions<decltype(x[0])>(
                    environment, y[116], y[117], y[118], y[119]));

            output.first.emplace_back(
                sphere_environment_get_collisions<decltype(x[0])>(
                    environment, y[120], y[121], y[122], y[123]));

            output.first.emplace_back(
                sphere_environment_get_collisions<decltype(x[0])>(
                    environment, y[124], y[125], y[126], y[127]));

            output.first.emplace_back(
                sphere_environment_get_collisions<decltype(x[0])>(
                    environment, y[128], y[129], y[130], y[131]));

            output.first.emplace_back(
                sphere_environment_get_collisions<decltype(x[0])>(
                    environment, y[132], y[133], y[134], y[135]));

            output.first.emplace_back(
                sphere_environment_get_collisions<decltype(x[0])>(
                    environment, y[136], y[137], y[138], y[139]));

            output.first.emplace_back(
                sphere_environment_get_collisions<decltype(x[0])>(
                    environment, y[140], y[141], y[142], y[143]));

            output.first.emplace_back(
                sphere_environment_get_collisions<decltype(x[0])>(
                    environment, y[144], y[145], y[146], y[147]));

            output.first.emplace_back(
                sphere_environment_get_collisions<decltype(x[0])>(
                    environment, y[148], y[149], y[150], y[151]));

            output.first.emplace_back(
                sphere_environment_get_collisions<decltype(x[0])>(
                    environment, y[152], y[153], y[154], y[155]));

            output.first.emplace_back(
                sphere_environment_get_collisions<decltype(x[0])>(
                    environment, y[156], y[157], y[158], y[159]));

            output.first.emplace_back(
                sphere_environment_get_collisions<decltype(x[0])>(
                    environment, y[160], y[161], y[162], y[163]));

            output.first.emplace_back(
                sphere_environment_get_collisions<decltype(x[0])>(
                    environment, y[164], y[165], y[166], y[167]));

            output.first.emplace_back(
                sphere_environment_get_collisions<decltype(x[0])>(
                    environment, y[168], y[169], y[170], y[171]));

            output.first.emplace_back(
                sphere_environment_get_collisions<decltype(x[0])>(
                    environment, y[172], y[173], y[174], y[175]));

            output.first.emplace_back(
                sphere_environment_get_collisions<decltype(x[0])>(
                    environment, y[176], y[177], y[178], y[179]));

            output.first.emplace_back(
                sphere_environment_get_collisions<decltype(x[0])>(
                    environment, y[180], y[181], y[182], y[183]));

            output.first.emplace_back(
                sphere_environment_get_collisions<decltype(x[0])>(
                    environment, y[184], y[185], y[186], y[187]));

            output.first.emplace_back(
                sphere_environment_get_collisions<decltype(x[0])>(
                    environment, y[188], y[189], y[190], y[191]));

            output.first.emplace_back(
                sphere_environment_get_collisions<decltype(x[0])>(
                    environment, y[192], y[193], y[194], y[195]));

            output.first.emplace_back(
                sphere_environment_get_collisions<decltype(x[0])>(
                    environment, y[196], y[197], y[198], y[199]));

            output.first.emplace_back(
                sphere_environment_get_collisions<decltype(x[0])>(
                    environment, y[200], y[201], y[202], y[203]));

            output.first.emplace_back(
                sphere_environment_get_collisions<decltype(x[0])>(
                    environment, y[204], y[205], y[206], y[207]));

            output.first.emplace_back(
                sphere_environment_get_collisions<decltype(x[0])>(
                    environment, y[208], y[209], y[210], y[211]));

            output.first.emplace_back(
                sphere_environment_get_collisions<decltype(x[0])>(
                    environment, y[212], y[213], y[214], y[215]));

            output.first.emplace_back(
                sphere_environment_get_collisions<decltype(x[0])>(
                    environment, y[216], y[217], y[218], y[219]));

            output.first.emplace_back(
                sphere_environment_get_collisions<decltype(x[0])>(
                    environment, y[220], y[221], y[222], y[223]));

            output.first.emplace_back(
                sphere_environment_get_collisions<decltype(x[0])>(
                    environment, y[224], y[225], y[226], y[227]));

            output.first.emplace_back(
                sphere_environment_get_collisions<decltype(x[0])>(
                    environment, y[228], y[229], y[230], y[231]));

            output.first.emplace_back(
                sphere_environment_get_collisions<decltype(x[0])>(
                    environment, y[232], y[233], y[234], y[235]));

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[0], y[1], y[2], y[3], y[68], y[69], y[70], y[71]))
            {
                output.second.emplace_back(0, 17);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[0], y[1], y[2], y[3], y[72], y[73], y[74], y[75]))
            {
                output.second.emplace_back(0, 18);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[0], y[1], y[2], y[3], y[76], y[77], y[78], y[79]))
            {
                output.second.emplace_back(0, 19);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[0], y[1], y[2], y[3], y[80], y[81], y[82], y[83]))
            {
                output.second.emplace_back(0, 20);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[0], y[1], y[2], y[3], y[84], y[85], y[86], y[87]))
            {
                output.second.emplace_back(0, 21);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[0], y[1], y[2], y[3], y[88], y[89], y[90], y[91]))
            {
                output.second.emplace_back(0, 22);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[0], y[1], y[2], y[3], y[92], y[93], y[94], y[95]))
            {
                output.second.emplace_back(0, 23);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[0], y[1], y[2], y[3], y[96], y[97], y[98], y[99]))
            {
                output.second.emplace_back(0, 24);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[0], y[1], y[2], y[3], y[100], y[101], y[102], y[103]))
            {
                output.second.emplace_back(0, 25);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[0], y[1], y[2], y[3], y[104], y[105], y[106], y[107]))
            {
                output.second.emplace_back(0, 26);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[0], y[1], y[2], y[3], y[108], y[109], y[110], y[111]))
            {
                output.second.emplace_back(0, 27);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[0], y[1], y[2], y[3], y[112], y[113], y[114], y[115]))
            {
                output.second.emplace_back(0, 28);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[0], y[1], y[2], y[3], y[116], y[117], y[118], y[119]))
            {
                output.second.emplace_back(0, 29);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[0], y[1], y[2], y[3], y[120], y[121], y[122], y[123]))
            {
                output.second.emplace_back(0, 30);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[0], y[1], y[2], y[3], y[124], y[125], y[126], y[127]))
            {
                output.second.emplace_back(0, 31);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[0], y[1], y[2], y[3], y[128], y[129], y[130], y[131]))
            {
                output.second.emplace_back(0, 32);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[0], y[1], y[2], y[3], y[132], y[133], y[134], y[135]))
            {
                output.second.emplace_back(0, 33);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[0], y[1], y[2], y[3], y[136], y[137], y[138], y[139]))
            {
                output.second.emplace_back(0, 34);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[0], y[1], y[2], y[3], y[140], y[141], y[142], y[143]))
            {
                output.second.emplace_back(0, 35);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[0], y[1], y[2], y[3], y[144], y[145], y[146], y[147]))
            {
                output.second.emplace_back(0, 36);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[0], y[1], y[2], y[3], y[148], y[149], y[150], y[151]))
            {
                output.second.emplace_back(0, 37);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[0], y[1], y[2], y[3], y[152], y[153], y[154], y[155]))
            {
                output.second.emplace_back(0, 38);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[0], y[1], y[2], y[3], y[156], y[157], y[158], y[159]))
            {
                output.second.emplace_back(0, 39);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[0], y[1], y[2], y[3], y[160], y[161], y[162], y[163]))
            {
                output.second.emplace_back(0, 40);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[0], y[1], y[2], y[3], y[164], y[165], y[166], y[167]))
            {
                output.second.emplace_back(0, 41);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[0], y[1], y[2], y[3], y[168], y[169], y[170], y[171]))
            {
                output.second.emplace_back(0, 42);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[0], y[1], y[2], y[3], y[172], y[173], y[174], y[175]))
            {
                output.second.emplace_back(0, 43);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[0], y[1], y[2], y[3], y[176], y[177], y[178], y[179]))
            {
                output.second.emplace_back(0, 44);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[0], y[1], y[2], y[3], y[180], y[181], y[182], y[183]))
            {
                output.second.emplace_back(0, 45);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[0], y[1], y[2], y[3], y[184], y[185], y[186], y[187]))
            {
                output.second.emplace_back(0, 46);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[0], y[1], y[2], y[3], y[188], y[189], y[190], y[191]))
            {
                output.second.emplace_back(0, 47);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[0], y[1], y[2], y[3], y[192], y[193], y[194], y[195]))
            {
                output.second.emplace_back(0, 48);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[0], y[1], y[2], y[3], y[196], y[197], y[198], y[199]))
            {
                output.second.emplace_back(0, 49);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[0], y[1], y[2], y[3], y[200], y[201], y[202], y[203]))
            {
                output.second.emplace_back(0, 50);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[0], y[1], y[2], y[3], y[204], y[205], y[206], y[207]))
            {
                output.second.emplace_back(0, 51);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[0], y[1], y[2], y[3], y[208], y[209], y[210], y[211]))
            {
                output.second.emplace_back(0, 52);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[0], y[1], y[2], y[3], y[212], y[213], y[214], y[215]))
            {
                output.second.emplace_back(0, 53);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[0], y[1], y[2], y[3], y[216], y[217], y[218], y[219]))
            {
                output.second.emplace_back(0, 54);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[0], y[1], y[2], y[3], y[220], y[221], y[222], y[223]))
            {
                output.second.emplace_back(0, 55);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[0], y[1], y[2], y[3], y[224], y[225], y[226], y[227]))
            {
                output.second.emplace_back(0, 56);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[0], y[1], y[2], y[3], y[228], y[229], y[230], y[231]))
            {
                output.second.emplace_back(0, 57);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[0], y[1], y[2], y[3], y[232], y[233], y[234], y[235]))
            {
                output.second.emplace_back(0, 58);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[4], y[5], y[6], y[7], y[68], y[69], y[70], y[71]))
            {
                output.second.emplace_back(1, 17);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[4], y[5], y[6], y[7], y[72], y[73], y[74], y[75]))
            {
                output.second.emplace_back(1, 18);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[4], y[5], y[6], y[7], y[76], y[77], y[78], y[79]))
            {
                output.second.emplace_back(1, 19);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[4], y[5], y[6], y[7], y[80], y[81], y[82], y[83]))
            {
                output.second.emplace_back(1, 20);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[4], y[5], y[6], y[7], y[84], y[85], y[86], y[87]))
            {
                output.second.emplace_back(1, 21);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[4], y[5], y[6], y[7], y[88], y[89], y[90], y[91]))
            {
                output.second.emplace_back(1, 22);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[4], y[5], y[6], y[7], y[92], y[93], y[94], y[95]))
            {
                output.second.emplace_back(1, 23);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[4], y[5], y[6], y[7], y[96], y[97], y[98], y[99]))
            {
                output.second.emplace_back(1, 24);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[4], y[5], y[6], y[7], y[100], y[101], y[102], y[103]))
            {
                output.second.emplace_back(1, 25);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[4], y[5], y[6], y[7], y[104], y[105], y[106], y[107]))
            {
                output.second.emplace_back(1, 26);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[4], y[5], y[6], y[7], y[108], y[109], y[110], y[111]))
            {
                output.second.emplace_back(1, 27);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[4], y[5], y[6], y[7], y[112], y[113], y[114], y[115]))
            {
                output.second.emplace_back(1, 28);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[8], y[9], y[10], y[11], y[68], y[69], y[70], y[71]))
            {
                output.second.emplace_back(2, 17);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[8], y[9], y[10], y[11], y[72], y[73], y[74], y[75]))
            {
                output.second.emplace_back(2, 18);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[8], y[9], y[10], y[11], y[76], y[77], y[78], y[79]))
            {
                output.second.emplace_back(2, 19);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[8], y[9], y[10], y[11], y[80], y[81], y[82], y[83]))
            {
                output.second.emplace_back(2, 20);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[8], y[9], y[10], y[11], y[84], y[85], y[86], y[87]))
            {
                output.second.emplace_back(2, 21);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[8], y[9], y[10], y[11], y[88], y[89], y[90], y[91]))
            {
                output.second.emplace_back(2, 22);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[8], y[9], y[10], y[11], y[92], y[93], y[94], y[95]))
            {
                output.second.emplace_back(2, 23);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[8], y[9], y[10], y[11], y[96], y[97], y[98], y[99]))
            {
                output.second.emplace_back(2, 24);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[8], y[9], y[10], y[11], y[100], y[101], y[102], y[103]))
            {
                output.second.emplace_back(2, 25);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[8], y[9], y[10], y[11], y[104], y[105], y[106], y[107]))
            {
                output.second.emplace_back(2, 26);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[8], y[9], y[10], y[11], y[108], y[109], y[110], y[111]))
            {
                output.second.emplace_back(2, 27);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[8], y[9], y[10], y[11], y[112], y[113], y[114], y[115]))
            {
                output.second.emplace_back(2, 28);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[12], y[13], y[14], y[15], y[68], y[69], y[70], y[71]))
            {
                output.second.emplace_back(3, 17);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[12], y[13], y[14], y[15], y[72], y[73], y[74], y[75]))
            {
                output.second.emplace_back(3, 18);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[12], y[13], y[14], y[15], y[76], y[77], y[78], y[79]))
            {
                output.second.emplace_back(3, 19);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[12], y[13], y[14], y[15], y[80], y[81], y[82], y[83]))
            {
                output.second.emplace_back(3, 20);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[12], y[13], y[14], y[15], y[84], y[85], y[86], y[87]))
            {
                output.second.emplace_back(3, 21);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[12], y[13], y[14], y[15], y[88], y[89], y[90], y[91]))
            {
                output.second.emplace_back(3, 22);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[12], y[13], y[14], y[15], y[92], y[93], y[94], y[95]))
            {
                output.second.emplace_back(3, 23);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[12], y[13], y[14], y[15], y[96], y[97], y[98], y[99]))
            {
                output.second.emplace_back(3, 24);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[12], y[13], y[14], y[15], y[100], y[101], y[102], y[103]))
            {
                output.second.emplace_back(3, 25);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[12], y[13], y[14], y[15], y[104], y[105], y[106], y[107]))
            {
                output.second.emplace_back(3, 26);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[12], y[13], y[14], y[15], y[108], y[109], y[110], y[111]))
            {
                output.second.emplace_back(3, 27);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[12], y[13], y[14], y[15], y[112], y[113], y[114], y[115]))
            {
                output.second.emplace_back(3, 28);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[16], y[17], y[18], y[19], y[68], y[69], y[70], y[71]))
            {
                output.second.emplace_back(4, 17);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[16], y[17], y[18], y[19], y[72], y[73], y[74], y[75]))
            {
                output.second.emplace_back(4, 18);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[16], y[17], y[18], y[19], y[76], y[77], y[78], y[79]))
            {
                output.second.emplace_back(4, 19);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[16], y[17], y[18], y[19], y[80], y[81], y[82], y[83]))
            {
                output.second.emplace_back(4, 20);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[16], y[17], y[18], y[19], y[84], y[85], y[86], y[87]))
            {
                output.second.emplace_back(4, 21);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[16], y[17], y[18], y[19], y[88], y[89], y[90], y[91]))
            {
                output.second.emplace_back(4, 22);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[16], y[17], y[18], y[19], y[92], y[93], y[94], y[95]))
            {
                output.second.emplace_back(4, 23);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[16], y[17], y[18], y[19], y[96], y[97], y[98], y[99]))
            {
                output.second.emplace_back(4, 24);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[16], y[17], y[18], y[19], y[100], y[101], y[102], y[103]))
            {
                output.second.emplace_back(4, 25);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[16], y[17], y[18], y[19], y[104], y[105], y[106], y[107]))
            {
                output.second.emplace_back(4, 26);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[16], y[17], y[18], y[19], y[108], y[109], y[110], y[111]))
            {
                output.second.emplace_back(4, 27);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[16], y[17], y[18], y[19], y[112], y[113], y[114], y[115]))
            {
                output.second.emplace_back(4, 28);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[4], y[5], y[6], y[7], y[116], y[117], y[118], y[119]))
            {
                output.second.emplace_back(1, 29);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[4], y[5], y[6], y[7], y[120], y[121], y[122], y[123]))
            {
                output.second.emplace_back(1, 30);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[4], y[5], y[6], y[7], y[124], y[125], y[126], y[127]))
            {
                output.second.emplace_back(1, 31);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[8], y[9], y[10], y[11], y[116], y[117], y[118], y[119]))
            {
                output.second.emplace_back(2, 29);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[8], y[9], y[10], y[11], y[120], y[121], y[122], y[123]))
            {
                output.second.emplace_back(2, 30);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[8], y[9], y[10], y[11], y[124], y[125], y[126], y[127]))
            {
                output.second.emplace_back(2, 31);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[12], y[13], y[14], y[15], y[116], y[117], y[118], y[119]))
            {
                output.second.emplace_back(3, 29);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[12], y[13], y[14], y[15], y[120], y[121], y[122], y[123]))
            {
                output.second.emplace_back(3, 30);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[12], y[13], y[14], y[15], y[124], y[125], y[126], y[127]))
            {
                output.second.emplace_back(3, 31);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[16], y[17], y[18], y[19], y[116], y[117], y[118], y[119]))
            {
                output.second.emplace_back(4, 29);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[16], y[17], y[18], y[19], y[120], y[121], y[122], y[123]))
            {
                output.second.emplace_back(4, 30);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[16], y[17], y[18], y[19], y[124], y[125], y[126], y[127]))
            {
                output.second.emplace_back(4, 31);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[4], y[5], y[6], y[7], y[128], y[129], y[130], y[131]))
            {
                output.second.emplace_back(1, 32);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[4], y[5], y[6], y[7], y[132], y[133], y[134], y[135]))
            {
                output.second.emplace_back(1, 33);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[4], y[5], y[6], y[7], y[136], y[137], y[138], y[139]))
            {
                output.second.emplace_back(1, 34);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[4], y[5], y[6], y[7], y[140], y[141], y[142], y[143]))
            {
                output.second.emplace_back(1, 35);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[4], y[5], y[6], y[7], y[144], y[145], y[146], y[147]))
            {
                output.second.emplace_back(1, 36);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[8], y[9], y[10], y[11], y[128], y[129], y[130], y[131]))
            {
                output.second.emplace_back(2, 32);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[8], y[9], y[10], y[11], y[132], y[133], y[134], y[135]))
            {
                output.second.emplace_back(2, 33);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[8], y[9], y[10], y[11], y[136], y[137], y[138], y[139]))
            {
                output.second.emplace_back(2, 34);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[8], y[9], y[10], y[11], y[140], y[141], y[142], y[143]))
            {
                output.second.emplace_back(2, 35);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[8], y[9], y[10], y[11], y[144], y[145], y[146], y[147]))
            {
                output.second.emplace_back(2, 36);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[12], y[13], y[14], y[15], y[128], y[129], y[130], y[131]))
            {
                output.second.emplace_back(3, 32);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[12], y[13], y[14], y[15], y[132], y[133], y[134], y[135]))
            {
                output.second.emplace_back(3, 33);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[12], y[13], y[14], y[15], y[136], y[137], y[138], y[139]))
            {
                output.second.emplace_back(3, 34);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[12], y[13], y[14], y[15], y[140], y[141], y[142], y[143]))
            {
                output.second.emplace_back(3, 35);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[12], y[13], y[14], y[15], y[144], y[145], y[146], y[147]))
            {
                output.second.emplace_back(3, 36);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[16], y[17], y[18], y[19], y[128], y[129], y[130], y[131]))
            {
                output.second.emplace_back(4, 32);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[16], y[17], y[18], y[19], y[132], y[133], y[134], y[135]))
            {
                output.second.emplace_back(4, 33);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[16], y[17], y[18], y[19], y[136], y[137], y[138], y[139]))
            {
                output.second.emplace_back(4, 34);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[16], y[17], y[18], y[19], y[140], y[141], y[142], y[143]))
            {
                output.second.emplace_back(4, 35);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[16], y[17], y[18], y[19], y[144], y[145], y[146], y[147]))
            {
                output.second.emplace_back(4, 36);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[4], y[5], y[6], y[7], y[148], y[149], y[150], y[151]))
            {
                output.second.emplace_back(1, 37);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[4], y[5], y[6], y[7], y[152], y[153], y[154], y[155]))
            {
                output.second.emplace_back(1, 38);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[4], y[5], y[6], y[7], y[156], y[157], y[158], y[159]))
            {
                output.second.emplace_back(1, 39);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[4], y[5], y[6], y[7], y[160], y[161], y[162], y[163]))
            {
                output.second.emplace_back(1, 40);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[4], y[5], y[6], y[7], y[164], y[165], y[166], y[167]))
            {
                output.second.emplace_back(1, 41);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[4], y[5], y[6], y[7], y[168], y[169], y[170], y[171]))
            {
                output.second.emplace_back(1, 42);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[4], y[5], y[6], y[7], y[172], y[173], y[174], y[175]))
            {
                output.second.emplace_back(1, 43);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[4], y[5], y[6], y[7], y[176], y[177], y[178], y[179]))
            {
                output.second.emplace_back(1, 44);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[4], y[5], y[6], y[7], y[180], y[181], y[182], y[183]))
            {
                output.second.emplace_back(1, 45);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[4], y[5], y[6], y[7], y[184], y[185], y[186], y[187]))
            {
                output.second.emplace_back(1, 46);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[4], y[5], y[6], y[7], y[188], y[189], y[190], y[191]))
            {
                output.second.emplace_back(1, 47);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[4], y[5], y[6], y[7], y[192], y[193], y[194], y[195]))
            {
                output.second.emplace_back(1, 48);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[4], y[5], y[6], y[7], y[196], y[197], y[198], y[199]))
            {
                output.second.emplace_back(1, 49);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[4], y[5], y[6], y[7], y[200], y[201], y[202], y[203]))
            {
                output.second.emplace_back(1, 50);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[4], y[5], y[6], y[7], y[204], y[205], y[206], y[207]))
            {
                output.second.emplace_back(1, 51);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[4], y[5], y[6], y[7], y[208], y[209], y[210], y[211]))
            {
                output.second.emplace_back(1, 52);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[4], y[5], y[6], y[7], y[212], y[213], y[214], y[215]))
            {
                output.second.emplace_back(1, 53);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[4], y[5], y[6], y[7], y[216], y[217], y[218], y[219]))
            {
                output.second.emplace_back(1, 54);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[8], y[9], y[10], y[11], y[148], y[149], y[150], y[151]))
            {
                output.second.emplace_back(2, 37);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[8], y[9], y[10], y[11], y[152], y[153], y[154], y[155]))
            {
                output.second.emplace_back(2, 38);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[8], y[9], y[10], y[11], y[156], y[157], y[158], y[159]))
            {
                output.second.emplace_back(2, 39);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[8], y[9], y[10], y[11], y[160], y[161], y[162], y[163]))
            {
                output.second.emplace_back(2, 40);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[8], y[9], y[10], y[11], y[164], y[165], y[166], y[167]))
            {
                output.second.emplace_back(2, 41);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[8], y[9], y[10], y[11], y[168], y[169], y[170], y[171]))
            {
                output.second.emplace_back(2, 42);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[8], y[9], y[10], y[11], y[172], y[173], y[174], y[175]))
            {
                output.second.emplace_back(2, 43);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[8], y[9], y[10], y[11], y[176], y[177], y[178], y[179]))
            {
                output.second.emplace_back(2, 44);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[8], y[9], y[10], y[11], y[180], y[181], y[182], y[183]))
            {
                output.second.emplace_back(2, 45);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[8], y[9], y[10], y[11], y[184], y[185], y[186], y[187]))
            {
                output.second.emplace_back(2, 46);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[8], y[9], y[10], y[11], y[188], y[189], y[190], y[191]))
            {
                output.second.emplace_back(2, 47);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[8], y[9], y[10], y[11], y[192], y[193], y[194], y[195]))
            {
                output.second.emplace_back(2, 48);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[8], y[9], y[10], y[11], y[196], y[197], y[198], y[199]))
            {
                output.second.emplace_back(2, 49);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[8], y[9], y[10], y[11], y[200], y[201], y[202], y[203]))
            {
                output.second.emplace_back(2, 50);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[8], y[9], y[10], y[11], y[204], y[205], y[206], y[207]))
            {
                output.second.emplace_back(2, 51);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[8], y[9], y[10], y[11], y[208], y[209], y[210], y[211]))
            {
                output.second.emplace_back(2, 52);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[8], y[9], y[10], y[11], y[212], y[213], y[214], y[215]))
            {
                output.second.emplace_back(2, 53);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[8], y[9], y[10], y[11], y[216], y[217], y[218], y[219]))
            {
                output.second.emplace_back(2, 54);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[12], y[13], y[14], y[15], y[148], y[149], y[150], y[151]))
            {
                output.second.emplace_back(3, 37);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[12], y[13], y[14], y[15], y[152], y[153], y[154], y[155]))
            {
                output.second.emplace_back(3, 38);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[12], y[13], y[14], y[15], y[156], y[157], y[158], y[159]))
            {
                output.second.emplace_back(3, 39);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[12], y[13], y[14], y[15], y[160], y[161], y[162], y[163]))
            {
                output.second.emplace_back(3, 40);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[12], y[13], y[14], y[15], y[164], y[165], y[166], y[167]))
            {
                output.second.emplace_back(3, 41);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[12], y[13], y[14], y[15], y[168], y[169], y[170], y[171]))
            {
                output.second.emplace_back(3, 42);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[12], y[13], y[14], y[15], y[172], y[173], y[174], y[175]))
            {
                output.second.emplace_back(3, 43);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[12], y[13], y[14], y[15], y[176], y[177], y[178], y[179]))
            {
                output.second.emplace_back(3, 44);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[12], y[13], y[14], y[15], y[180], y[181], y[182], y[183]))
            {
                output.second.emplace_back(3, 45);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[12], y[13], y[14], y[15], y[184], y[185], y[186], y[187]))
            {
                output.second.emplace_back(3, 46);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[12], y[13], y[14], y[15], y[188], y[189], y[190], y[191]))
            {
                output.second.emplace_back(3, 47);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[12], y[13], y[14], y[15], y[192], y[193], y[194], y[195]))
            {
                output.second.emplace_back(3, 48);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[12], y[13], y[14], y[15], y[196], y[197], y[198], y[199]))
            {
                output.second.emplace_back(3, 49);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[12], y[13], y[14], y[15], y[200], y[201], y[202], y[203]))
            {
                output.second.emplace_back(3, 50);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[12], y[13], y[14], y[15], y[204], y[205], y[206], y[207]))
            {
                output.second.emplace_back(3, 51);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[12], y[13], y[14], y[15], y[208], y[209], y[210], y[211]))
            {
                output.second.emplace_back(3, 52);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[12], y[13], y[14], y[15], y[212], y[213], y[214], y[215]))
            {
                output.second.emplace_back(3, 53);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[12], y[13], y[14], y[15], y[216], y[217], y[218], y[219]))
            {
                output.second.emplace_back(3, 54);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[16], y[17], y[18], y[19], y[148], y[149], y[150], y[151]))
            {
                output.second.emplace_back(4, 37);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[16], y[17], y[18], y[19], y[152], y[153], y[154], y[155]))
            {
                output.second.emplace_back(4, 38);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[16], y[17], y[18], y[19], y[156], y[157], y[158], y[159]))
            {
                output.second.emplace_back(4, 39);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[16], y[17], y[18], y[19], y[160], y[161], y[162], y[163]))
            {
                output.second.emplace_back(4, 40);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[16], y[17], y[18], y[19], y[164], y[165], y[166], y[167]))
            {
                output.second.emplace_back(4, 41);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[16], y[17], y[18], y[19], y[168], y[169], y[170], y[171]))
            {
                output.second.emplace_back(4, 42);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[16], y[17], y[18], y[19], y[172], y[173], y[174], y[175]))
            {
                output.second.emplace_back(4, 43);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[16], y[17], y[18], y[19], y[176], y[177], y[178], y[179]))
            {
                output.second.emplace_back(4, 44);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[16], y[17], y[18], y[19], y[180], y[181], y[182], y[183]))
            {
                output.second.emplace_back(4, 45);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[16], y[17], y[18], y[19], y[184], y[185], y[186], y[187]))
            {
                output.second.emplace_back(4, 46);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[16], y[17], y[18], y[19], y[188], y[189], y[190], y[191]))
            {
                output.second.emplace_back(4, 47);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[16], y[17], y[18], y[19], y[192], y[193], y[194], y[195]))
            {
                output.second.emplace_back(4, 48);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[16], y[17], y[18], y[19], y[196], y[197], y[198], y[199]))
            {
                output.second.emplace_back(4, 49);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[16], y[17], y[18], y[19], y[200], y[201], y[202], y[203]))
            {
                output.second.emplace_back(4, 50);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[16], y[17], y[18], y[19], y[204], y[205], y[206], y[207]))
            {
                output.second.emplace_back(4, 51);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[16], y[17], y[18], y[19], y[208], y[209], y[210], y[211]))
            {
                output.second.emplace_back(4, 52);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[16], y[17], y[18], y[19], y[212], y[213], y[214], y[215]))
            {
                output.second.emplace_back(4, 53);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[16], y[17], y[18], y[19], y[216], y[217], y[218], y[219]))
            {
                output.second.emplace_back(4, 54);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[4], y[5], y[6], y[7], y[220], y[221], y[222], y[223]))
            {
                output.second.emplace_back(1, 55);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[4], y[5], y[6], y[7], y[224], y[225], y[226], y[227]))
            {
                output.second.emplace_back(1, 56);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[8], y[9], y[10], y[11], y[220], y[221], y[222], y[223]))
            {
                output.second.emplace_back(2, 55);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[8], y[9], y[10], y[11], y[224], y[225], y[226], y[227]))
            {
                output.second.emplace_back(2, 56);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[12], y[13], y[14], y[15], y[220], y[221], y[222], y[223]))
            {
                output.second.emplace_back(3, 55);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[12], y[13], y[14], y[15], y[224], y[225], y[226], y[227]))
            {
                output.second.emplace_back(3, 56);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[16], y[17], y[18], y[19], y[220], y[221], y[222], y[223]))
            {
                output.second.emplace_back(4, 55);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[16], y[17], y[18], y[19], y[224], y[225], y[226], y[227]))
            {
                output.second.emplace_back(4, 56);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[4], y[5], y[6], y[7], y[228], y[229], y[230], y[231]))
            {
                output.second.emplace_back(1, 57);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[4], y[5], y[6], y[7], y[232], y[233], y[234], y[235]))
            {
                output.second.emplace_back(1, 58);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[8], y[9], y[10], y[11], y[228], y[229], y[230], y[231]))
            {
                output.second.emplace_back(2, 57);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[8], y[9], y[10], y[11], y[232], y[233], y[234], y[235]))
            {
                output.second.emplace_back(2, 58);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[12], y[13], y[14], y[15], y[228], y[229], y[230], y[231]))
            {
                output.second.emplace_back(3, 57);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[12], y[13], y[14], y[15], y[232], y[233], y[234], y[235]))
            {
                output.second.emplace_back(3, 58);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[16], y[17], y[18], y[19], y[228], y[229], y[230], y[231]))
            {
                output.second.emplace_back(4, 57);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[16], y[17], y[18], y[19], y[232], y[233], y[234], y[235]))
            {
                output.second.emplace_back(4, 58);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[20], y[21], y[22], y[23], y[68], y[69], y[70], y[71]))
            {
                output.second.emplace_back(5, 17);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[20], y[21], y[22], y[23], y[72], y[73], y[74], y[75]))
            {
                output.second.emplace_back(5, 18);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[20], y[21], y[22], y[23], y[76], y[77], y[78], y[79]))
            {
                output.second.emplace_back(5, 19);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[20], y[21], y[22], y[23], y[80], y[81], y[82], y[83]))
            {
                output.second.emplace_back(5, 20);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[20], y[21], y[22], y[23], y[84], y[85], y[86], y[87]))
            {
                output.second.emplace_back(5, 21);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[20], y[21], y[22], y[23], y[88], y[89], y[90], y[91]))
            {
                output.second.emplace_back(5, 22);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[20], y[21], y[22], y[23], y[92], y[93], y[94], y[95]))
            {
                output.second.emplace_back(5, 23);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[20], y[21], y[22], y[23], y[96], y[97], y[98], y[99]))
            {
                output.second.emplace_back(5, 24);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[20], y[21], y[22], y[23], y[100], y[101], y[102], y[103]))
            {
                output.second.emplace_back(5, 25);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[20], y[21], y[22], y[23], y[104], y[105], y[106], y[107]))
            {
                output.second.emplace_back(5, 26);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[20], y[21], y[22], y[23], y[108], y[109], y[110], y[111]))
            {
                output.second.emplace_back(5, 27);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[20], y[21], y[22], y[23], y[112], y[113], y[114], y[115]))
            {
                output.second.emplace_back(5, 28);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[24], y[25], y[26], y[27], y[68], y[69], y[70], y[71]))
            {
                output.second.emplace_back(6, 17);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[24], y[25], y[26], y[27], y[72], y[73], y[74], y[75]))
            {
                output.second.emplace_back(6, 18);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[24], y[25], y[26], y[27], y[76], y[77], y[78], y[79]))
            {
                output.second.emplace_back(6, 19);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[24], y[25], y[26], y[27], y[80], y[81], y[82], y[83]))
            {
                output.second.emplace_back(6, 20);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[24], y[25], y[26], y[27], y[84], y[85], y[86], y[87]))
            {
                output.second.emplace_back(6, 21);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[24], y[25], y[26], y[27], y[88], y[89], y[90], y[91]))
            {
                output.second.emplace_back(6, 22);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[24], y[25], y[26], y[27], y[92], y[93], y[94], y[95]))
            {
                output.second.emplace_back(6, 23);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[24], y[25], y[26], y[27], y[96], y[97], y[98], y[99]))
            {
                output.second.emplace_back(6, 24);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[24], y[25], y[26], y[27], y[100], y[101], y[102], y[103]))
            {
                output.second.emplace_back(6, 25);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[24], y[25], y[26], y[27], y[104], y[105], y[106], y[107]))
            {
                output.second.emplace_back(6, 26);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[24], y[25], y[26], y[27], y[108], y[109], y[110], y[111]))
            {
                output.second.emplace_back(6, 27);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[24], y[25], y[26], y[27], y[112], y[113], y[114], y[115]))
            {
                output.second.emplace_back(6, 28);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[28], y[29], y[30], y[31], y[68], y[69], y[70], y[71]))
            {
                output.second.emplace_back(7, 17);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[28], y[29], y[30], y[31], y[72], y[73], y[74], y[75]))
            {
                output.second.emplace_back(7, 18);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[28], y[29], y[30], y[31], y[76], y[77], y[78], y[79]))
            {
                output.second.emplace_back(7, 19);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[28], y[29], y[30], y[31], y[80], y[81], y[82], y[83]))
            {
                output.second.emplace_back(7, 20);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[28], y[29], y[30], y[31], y[84], y[85], y[86], y[87]))
            {
                output.second.emplace_back(7, 21);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[28], y[29], y[30], y[31], y[88], y[89], y[90], y[91]))
            {
                output.second.emplace_back(7, 22);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[28], y[29], y[30], y[31], y[92], y[93], y[94], y[95]))
            {
                output.second.emplace_back(7, 23);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[28], y[29], y[30], y[31], y[96], y[97], y[98], y[99]))
            {
                output.second.emplace_back(7, 24);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[28], y[29], y[30], y[31], y[100], y[101], y[102], y[103]))
            {
                output.second.emplace_back(7, 25);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[28], y[29], y[30], y[31], y[104], y[105], y[106], y[107]))
            {
                output.second.emplace_back(7, 26);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[28], y[29], y[30], y[31], y[108], y[109], y[110], y[111]))
            {
                output.second.emplace_back(7, 27);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[28], y[29], y[30], y[31], y[112], y[113], y[114], y[115]))
            {
                output.second.emplace_back(7, 28);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[32], y[33], y[34], y[35], y[68], y[69], y[70], y[71]))
            {
                output.second.emplace_back(8, 17);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[32], y[33], y[34], y[35], y[72], y[73], y[74], y[75]))
            {
                output.second.emplace_back(8, 18);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[32], y[33], y[34], y[35], y[76], y[77], y[78], y[79]))
            {
                output.second.emplace_back(8, 19);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[32], y[33], y[34], y[35], y[80], y[81], y[82], y[83]))
            {
                output.second.emplace_back(8, 20);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[32], y[33], y[34], y[35], y[84], y[85], y[86], y[87]))
            {
                output.second.emplace_back(8, 21);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[32], y[33], y[34], y[35], y[88], y[89], y[90], y[91]))
            {
                output.second.emplace_back(8, 22);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[32], y[33], y[34], y[35], y[92], y[93], y[94], y[95]))
            {
                output.second.emplace_back(8, 23);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[32], y[33], y[34], y[35], y[96], y[97], y[98], y[99]))
            {
                output.second.emplace_back(8, 24);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[32], y[33], y[34], y[35], y[100], y[101], y[102], y[103]))
            {
                output.second.emplace_back(8, 25);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[32], y[33], y[34], y[35], y[104], y[105], y[106], y[107]))
            {
                output.second.emplace_back(8, 26);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[32], y[33], y[34], y[35], y[108], y[109], y[110], y[111]))
            {
                output.second.emplace_back(8, 27);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[32], y[33], y[34], y[35], y[112], y[113], y[114], y[115]))
            {
                output.second.emplace_back(8, 28);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[20], y[21], y[22], y[23], y[128], y[129], y[130], y[131]))
            {
                output.second.emplace_back(5, 32);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[20], y[21], y[22], y[23], y[132], y[133], y[134], y[135]))
            {
                output.second.emplace_back(5, 33);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[20], y[21], y[22], y[23], y[136], y[137], y[138], y[139]))
            {
                output.second.emplace_back(5, 34);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[20], y[21], y[22], y[23], y[140], y[141], y[142], y[143]))
            {
                output.second.emplace_back(5, 35);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[20], y[21], y[22], y[23], y[144], y[145], y[146], y[147]))
            {
                output.second.emplace_back(5, 36);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[24], y[25], y[26], y[27], y[128], y[129], y[130], y[131]))
            {
                output.second.emplace_back(6, 32);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[24], y[25], y[26], y[27], y[132], y[133], y[134], y[135]))
            {
                output.second.emplace_back(6, 33);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[24], y[25], y[26], y[27], y[136], y[137], y[138], y[139]))
            {
                output.second.emplace_back(6, 34);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[24], y[25], y[26], y[27], y[140], y[141], y[142], y[143]))
            {
                output.second.emplace_back(6, 35);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[24], y[25], y[26], y[27], y[144], y[145], y[146], y[147]))
            {
                output.second.emplace_back(6, 36);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[28], y[29], y[30], y[31], y[128], y[129], y[130], y[131]))
            {
                output.second.emplace_back(7, 32);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[28], y[29], y[30], y[31], y[132], y[133], y[134], y[135]))
            {
                output.second.emplace_back(7, 33);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[28], y[29], y[30], y[31], y[136], y[137], y[138], y[139]))
            {
                output.second.emplace_back(7, 34);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[28], y[29], y[30], y[31], y[140], y[141], y[142], y[143]))
            {
                output.second.emplace_back(7, 35);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[28], y[29], y[30], y[31], y[144], y[145], y[146], y[147]))
            {
                output.second.emplace_back(7, 36);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[32], y[33], y[34], y[35], y[128], y[129], y[130], y[131]))
            {
                output.second.emplace_back(8, 32);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[32], y[33], y[34], y[35], y[132], y[133], y[134], y[135]))
            {
                output.second.emplace_back(8, 33);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[32], y[33], y[34], y[35], y[136], y[137], y[138], y[139]))
            {
                output.second.emplace_back(8, 34);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[32], y[33], y[34], y[35], y[140], y[141], y[142], y[143]))
            {
                output.second.emplace_back(8, 35);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[32], y[33], y[34], y[35], y[144], y[145], y[146], y[147]))
            {
                output.second.emplace_back(8, 36);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[20], y[21], y[22], y[23], y[148], y[149], y[150], y[151]))
            {
                output.second.emplace_back(5, 37);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[20], y[21], y[22], y[23], y[152], y[153], y[154], y[155]))
            {
                output.second.emplace_back(5, 38);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[20], y[21], y[22], y[23], y[156], y[157], y[158], y[159]))
            {
                output.second.emplace_back(5, 39);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[20], y[21], y[22], y[23], y[160], y[161], y[162], y[163]))
            {
                output.second.emplace_back(5, 40);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[20], y[21], y[22], y[23], y[164], y[165], y[166], y[167]))
            {
                output.second.emplace_back(5, 41);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[20], y[21], y[22], y[23], y[168], y[169], y[170], y[171]))
            {
                output.second.emplace_back(5, 42);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[20], y[21], y[22], y[23], y[172], y[173], y[174], y[175]))
            {
                output.second.emplace_back(5, 43);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[20], y[21], y[22], y[23], y[176], y[177], y[178], y[179]))
            {
                output.second.emplace_back(5, 44);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[20], y[21], y[22], y[23], y[180], y[181], y[182], y[183]))
            {
                output.second.emplace_back(5, 45);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[20], y[21], y[22], y[23], y[184], y[185], y[186], y[187]))
            {
                output.second.emplace_back(5, 46);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[20], y[21], y[22], y[23], y[188], y[189], y[190], y[191]))
            {
                output.second.emplace_back(5, 47);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[20], y[21], y[22], y[23], y[192], y[193], y[194], y[195]))
            {
                output.second.emplace_back(5, 48);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[20], y[21], y[22], y[23], y[196], y[197], y[198], y[199]))
            {
                output.second.emplace_back(5, 49);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[20], y[21], y[22], y[23], y[200], y[201], y[202], y[203]))
            {
                output.second.emplace_back(5, 50);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[20], y[21], y[22], y[23], y[204], y[205], y[206], y[207]))
            {
                output.second.emplace_back(5, 51);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[20], y[21], y[22], y[23], y[208], y[209], y[210], y[211]))
            {
                output.second.emplace_back(5, 52);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[20], y[21], y[22], y[23], y[212], y[213], y[214], y[215]))
            {
                output.second.emplace_back(5, 53);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[20], y[21], y[22], y[23], y[216], y[217], y[218], y[219]))
            {
                output.second.emplace_back(5, 54);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[24], y[25], y[26], y[27], y[148], y[149], y[150], y[151]))
            {
                output.second.emplace_back(6, 37);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[24], y[25], y[26], y[27], y[152], y[153], y[154], y[155]))
            {
                output.second.emplace_back(6, 38);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[24], y[25], y[26], y[27], y[156], y[157], y[158], y[159]))
            {
                output.second.emplace_back(6, 39);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[24], y[25], y[26], y[27], y[160], y[161], y[162], y[163]))
            {
                output.second.emplace_back(6, 40);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[24], y[25], y[26], y[27], y[164], y[165], y[166], y[167]))
            {
                output.second.emplace_back(6, 41);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[24], y[25], y[26], y[27], y[168], y[169], y[170], y[171]))
            {
                output.second.emplace_back(6, 42);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[24], y[25], y[26], y[27], y[172], y[173], y[174], y[175]))
            {
                output.second.emplace_back(6, 43);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[24], y[25], y[26], y[27], y[176], y[177], y[178], y[179]))
            {
                output.second.emplace_back(6, 44);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[24], y[25], y[26], y[27], y[180], y[181], y[182], y[183]))
            {
                output.second.emplace_back(6, 45);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[24], y[25], y[26], y[27], y[184], y[185], y[186], y[187]))
            {
                output.second.emplace_back(6, 46);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[24], y[25], y[26], y[27], y[188], y[189], y[190], y[191]))
            {
                output.second.emplace_back(6, 47);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[24], y[25], y[26], y[27], y[192], y[193], y[194], y[195]))
            {
                output.second.emplace_back(6, 48);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[24], y[25], y[26], y[27], y[196], y[197], y[198], y[199]))
            {
                output.second.emplace_back(6, 49);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[24], y[25], y[26], y[27], y[200], y[201], y[202], y[203]))
            {
                output.second.emplace_back(6, 50);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[24], y[25], y[26], y[27], y[204], y[205], y[206], y[207]))
            {
                output.second.emplace_back(6, 51);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[24], y[25], y[26], y[27], y[208], y[209], y[210], y[211]))
            {
                output.second.emplace_back(6, 52);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[24], y[25], y[26], y[27], y[212], y[213], y[214], y[215]))
            {
                output.second.emplace_back(6, 53);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[24], y[25], y[26], y[27], y[216], y[217], y[218], y[219]))
            {
                output.second.emplace_back(6, 54);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[28], y[29], y[30], y[31], y[148], y[149], y[150], y[151]))
            {
                output.second.emplace_back(7, 37);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[28], y[29], y[30], y[31], y[152], y[153], y[154], y[155]))
            {
                output.second.emplace_back(7, 38);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[28], y[29], y[30], y[31], y[156], y[157], y[158], y[159]))
            {
                output.second.emplace_back(7, 39);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[28], y[29], y[30], y[31], y[160], y[161], y[162], y[163]))
            {
                output.second.emplace_back(7, 40);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[28], y[29], y[30], y[31], y[164], y[165], y[166], y[167]))
            {
                output.second.emplace_back(7, 41);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[28], y[29], y[30], y[31], y[168], y[169], y[170], y[171]))
            {
                output.second.emplace_back(7, 42);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[28], y[29], y[30], y[31], y[172], y[173], y[174], y[175]))
            {
                output.second.emplace_back(7, 43);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[28], y[29], y[30], y[31], y[176], y[177], y[178], y[179]))
            {
                output.second.emplace_back(7, 44);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[28], y[29], y[30], y[31], y[180], y[181], y[182], y[183]))
            {
                output.second.emplace_back(7, 45);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[28], y[29], y[30], y[31], y[184], y[185], y[186], y[187]))
            {
                output.second.emplace_back(7, 46);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[28], y[29], y[30], y[31], y[188], y[189], y[190], y[191]))
            {
                output.second.emplace_back(7, 47);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[28], y[29], y[30], y[31], y[192], y[193], y[194], y[195]))
            {
                output.second.emplace_back(7, 48);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[28], y[29], y[30], y[31], y[196], y[197], y[198], y[199]))
            {
                output.second.emplace_back(7, 49);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[28], y[29], y[30], y[31], y[200], y[201], y[202], y[203]))
            {
                output.second.emplace_back(7, 50);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[28], y[29], y[30], y[31], y[204], y[205], y[206], y[207]))
            {
                output.second.emplace_back(7, 51);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[28], y[29], y[30], y[31], y[208], y[209], y[210], y[211]))
            {
                output.second.emplace_back(7, 52);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[28], y[29], y[30], y[31], y[212], y[213], y[214], y[215]))
            {
                output.second.emplace_back(7, 53);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[28], y[29], y[30], y[31], y[216], y[217], y[218], y[219]))
            {
                output.second.emplace_back(7, 54);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[32], y[33], y[34], y[35], y[148], y[149], y[150], y[151]))
            {
                output.second.emplace_back(8, 37);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[32], y[33], y[34], y[35], y[152], y[153], y[154], y[155]))
            {
                output.second.emplace_back(8, 38);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[32], y[33], y[34], y[35], y[156], y[157], y[158], y[159]))
            {
                output.second.emplace_back(8, 39);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[32], y[33], y[34], y[35], y[160], y[161], y[162], y[163]))
            {
                output.second.emplace_back(8, 40);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[32], y[33], y[34], y[35], y[164], y[165], y[166], y[167]))
            {
                output.second.emplace_back(8, 41);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[32], y[33], y[34], y[35], y[168], y[169], y[170], y[171]))
            {
                output.second.emplace_back(8, 42);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[32], y[33], y[34], y[35], y[172], y[173], y[174], y[175]))
            {
                output.second.emplace_back(8, 43);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[32], y[33], y[34], y[35], y[176], y[177], y[178], y[179]))
            {
                output.second.emplace_back(8, 44);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[32], y[33], y[34], y[35], y[180], y[181], y[182], y[183]))
            {
                output.second.emplace_back(8, 45);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[32], y[33], y[34], y[35], y[184], y[185], y[186], y[187]))
            {
                output.second.emplace_back(8, 46);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[32], y[33], y[34], y[35], y[188], y[189], y[190], y[191]))
            {
                output.second.emplace_back(8, 47);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[32], y[33], y[34], y[35], y[192], y[193], y[194], y[195]))
            {
                output.second.emplace_back(8, 48);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[32], y[33], y[34], y[35], y[196], y[197], y[198], y[199]))
            {
                output.second.emplace_back(8, 49);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[32], y[33], y[34], y[35], y[200], y[201], y[202], y[203]))
            {
                output.second.emplace_back(8, 50);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[32], y[33], y[34], y[35], y[204], y[205], y[206], y[207]))
            {
                output.second.emplace_back(8, 51);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[32], y[33], y[34], y[35], y[208], y[209], y[210], y[211]))
            {
                output.second.emplace_back(8, 52);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[32], y[33], y[34], y[35], y[212], y[213], y[214], y[215]))
            {
                output.second.emplace_back(8, 53);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[32], y[33], y[34], y[35], y[216], y[217], y[218], y[219]))
            {
                output.second.emplace_back(8, 54);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[20], y[21], y[22], y[23], y[220], y[221], y[222], y[223]))
            {
                output.second.emplace_back(5, 55);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[20], y[21], y[22], y[23], y[224], y[225], y[226], y[227]))
            {
                output.second.emplace_back(5, 56);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[24], y[25], y[26], y[27], y[220], y[221], y[222], y[223]))
            {
                output.second.emplace_back(6, 55);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[24], y[25], y[26], y[27], y[224], y[225], y[226], y[227]))
            {
                output.second.emplace_back(6, 56);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[28], y[29], y[30], y[31], y[220], y[221], y[222], y[223]))
            {
                output.second.emplace_back(7, 55);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[28], y[29], y[30], y[31], y[224], y[225], y[226], y[227]))
            {
                output.second.emplace_back(7, 56);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[32], y[33], y[34], y[35], y[220], y[221], y[222], y[223]))
            {
                output.second.emplace_back(8, 55);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[32], y[33], y[34], y[35], y[224], y[225], y[226], y[227]))
            {
                output.second.emplace_back(8, 56);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[20], y[21], y[22], y[23], y[228], y[229], y[230], y[231]))
            {
                output.second.emplace_back(5, 57);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[20], y[21], y[22], y[23], y[232], y[233], y[234], y[235]))
            {
                output.second.emplace_back(5, 58);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[24], y[25], y[26], y[27], y[228], y[229], y[230], y[231]))
            {
                output.second.emplace_back(6, 57);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[24], y[25], y[26], y[27], y[232], y[233], y[234], y[235]))
            {
                output.second.emplace_back(6, 58);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[28], y[29], y[30], y[31], y[228], y[229], y[230], y[231]))
            {
                output.second.emplace_back(7, 57);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[28], y[29], y[30], y[31], y[232], y[233], y[234], y[235]))
            {
                output.second.emplace_back(7, 58);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[32], y[33], y[34], y[35], y[228], y[229], y[230], y[231]))
            {
                output.second.emplace_back(8, 57);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[32], y[33], y[34], y[35], y[232], y[233], y[234], y[235]))
            {
                output.second.emplace_back(8, 58);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[68], y[69], y[70], y[71], y[128], y[129], y[130], y[131]))
            {
                output.second.emplace_back(17, 32);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[68], y[69], y[70], y[71], y[132], y[133], y[134], y[135]))
            {
                output.second.emplace_back(17, 33);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[68], y[69], y[70], y[71], y[136], y[137], y[138], y[139]))
            {
                output.second.emplace_back(17, 34);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[68], y[69], y[70], y[71], y[140], y[141], y[142], y[143]))
            {
                output.second.emplace_back(17, 35);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[68], y[69], y[70], y[71], y[144], y[145], y[146], y[147]))
            {
                output.second.emplace_back(17, 36);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[72], y[73], y[74], y[75], y[128], y[129], y[130], y[131]))
            {
                output.second.emplace_back(18, 32);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[72], y[73], y[74], y[75], y[132], y[133], y[134], y[135]))
            {
                output.second.emplace_back(18, 33);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[72], y[73], y[74], y[75], y[136], y[137], y[138], y[139]))
            {
                output.second.emplace_back(18, 34);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[72], y[73], y[74], y[75], y[140], y[141], y[142], y[143]))
            {
                output.second.emplace_back(18, 35);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[72], y[73], y[74], y[75], y[144], y[145], y[146], y[147]))
            {
                output.second.emplace_back(18, 36);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[76], y[77], y[78], y[79], y[128], y[129], y[130], y[131]))
            {
                output.second.emplace_back(19, 32);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[76], y[77], y[78], y[79], y[132], y[133], y[134], y[135]))
            {
                output.second.emplace_back(19, 33);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[76], y[77], y[78], y[79], y[136], y[137], y[138], y[139]))
            {
                output.second.emplace_back(19, 34);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[76], y[77], y[78], y[79], y[140], y[141], y[142], y[143]))
            {
                output.second.emplace_back(19, 35);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[76], y[77], y[78], y[79], y[144], y[145], y[146], y[147]))
            {
                output.second.emplace_back(19, 36);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[80], y[81], y[82], y[83], y[128], y[129], y[130], y[131]))
            {
                output.second.emplace_back(20, 32);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[80], y[81], y[82], y[83], y[132], y[133], y[134], y[135]))
            {
                output.second.emplace_back(20, 33);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[80], y[81], y[82], y[83], y[136], y[137], y[138], y[139]))
            {
                output.second.emplace_back(20, 34);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[80], y[81], y[82], y[83], y[140], y[141], y[142], y[143]))
            {
                output.second.emplace_back(20, 35);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[80], y[81], y[82], y[83], y[144], y[145], y[146], y[147]))
            {
                output.second.emplace_back(20, 36);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[84], y[85], y[86], y[87], y[128], y[129], y[130], y[131]))
            {
                output.second.emplace_back(21, 32);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[84], y[85], y[86], y[87], y[132], y[133], y[134], y[135]))
            {
                output.second.emplace_back(21, 33);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[84], y[85], y[86], y[87], y[136], y[137], y[138], y[139]))
            {
                output.second.emplace_back(21, 34);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[84], y[85], y[86], y[87], y[140], y[141], y[142], y[143]))
            {
                output.second.emplace_back(21, 35);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[84], y[85], y[86], y[87], y[144], y[145], y[146], y[147]))
            {
                output.second.emplace_back(21, 36);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[88], y[89], y[90], y[91], y[128], y[129], y[130], y[131]))
            {
                output.second.emplace_back(22, 32);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[88], y[89], y[90], y[91], y[132], y[133], y[134], y[135]))
            {
                output.second.emplace_back(22, 33);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[88], y[89], y[90], y[91], y[136], y[137], y[138], y[139]))
            {
                output.second.emplace_back(22, 34);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[88], y[89], y[90], y[91], y[140], y[141], y[142], y[143]))
            {
                output.second.emplace_back(22, 35);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[88], y[89], y[90], y[91], y[144], y[145], y[146], y[147]))
            {
                output.second.emplace_back(22, 36);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[92], y[93], y[94], y[95], y[128], y[129], y[130], y[131]))
            {
                output.second.emplace_back(23, 32);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[92], y[93], y[94], y[95], y[132], y[133], y[134], y[135]))
            {
                output.second.emplace_back(23, 33);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[92], y[93], y[94], y[95], y[136], y[137], y[138], y[139]))
            {
                output.second.emplace_back(23, 34);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[92], y[93], y[94], y[95], y[140], y[141], y[142], y[143]))
            {
                output.second.emplace_back(23, 35);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[92], y[93], y[94], y[95], y[144], y[145], y[146], y[147]))
            {
                output.second.emplace_back(23, 36);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[96], y[97], y[98], y[99], y[128], y[129], y[130], y[131]))
            {
                output.second.emplace_back(24, 32);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[96], y[97], y[98], y[99], y[132], y[133], y[134], y[135]))
            {
                output.second.emplace_back(24, 33);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[96], y[97], y[98], y[99], y[136], y[137], y[138], y[139]))
            {
                output.second.emplace_back(24, 34);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[96], y[97], y[98], y[99], y[140], y[141], y[142], y[143]))
            {
                output.second.emplace_back(24, 35);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[96], y[97], y[98], y[99], y[144], y[145], y[146], y[147]))
            {
                output.second.emplace_back(24, 36);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[100], y[101], y[102], y[103], y[128], y[129], y[130], y[131]))
            {
                output.second.emplace_back(25, 32);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[100], y[101], y[102], y[103], y[132], y[133], y[134], y[135]))
            {
                output.second.emplace_back(25, 33);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[100], y[101], y[102], y[103], y[136], y[137], y[138], y[139]))
            {
                output.second.emplace_back(25, 34);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[100], y[101], y[102], y[103], y[140], y[141], y[142], y[143]))
            {
                output.second.emplace_back(25, 35);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[100], y[101], y[102], y[103], y[144], y[145], y[146], y[147]))
            {
                output.second.emplace_back(25, 36);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[104], y[105], y[106], y[107], y[128], y[129], y[130], y[131]))
            {
                output.second.emplace_back(26, 32);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[104], y[105], y[106], y[107], y[132], y[133], y[134], y[135]))
            {
                output.second.emplace_back(26, 33);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[104], y[105], y[106], y[107], y[136], y[137], y[138], y[139]))
            {
                output.second.emplace_back(26, 34);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[104], y[105], y[106], y[107], y[140], y[141], y[142], y[143]))
            {
                output.second.emplace_back(26, 35);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[104], y[105], y[106], y[107], y[144], y[145], y[146], y[147]))
            {
                output.second.emplace_back(26, 36);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[108], y[109], y[110], y[111], y[128], y[129], y[130], y[131]))
            {
                output.second.emplace_back(27, 32);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[108], y[109], y[110], y[111], y[132], y[133], y[134], y[135]))
            {
                output.second.emplace_back(27, 33);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[108], y[109], y[110], y[111], y[136], y[137], y[138], y[139]))
            {
                output.second.emplace_back(27, 34);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[108], y[109], y[110], y[111], y[140], y[141], y[142], y[143]))
            {
                output.second.emplace_back(27, 35);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[108], y[109], y[110], y[111], y[144], y[145], y[146], y[147]))
            {
                output.second.emplace_back(27, 36);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[112], y[113], y[114], y[115], y[128], y[129], y[130], y[131]))
            {
                output.second.emplace_back(28, 32);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[112], y[113], y[114], y[115], y[132], y[133], y[134], y[135]))
            {
                output.second.emplace_back(28, 33);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[112], y[113], y[114], y[115], y[136], y[137], y[138], y[139]))
            {
                output.second.emplace_back(28, 34);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[112], y[113], y[114], y[115], y[140], y[141], y[142], y[143]))
            {
                output.second.emplace_back(28, 35);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[112], y[113], y[114], y[115], y[144], y[145], y[146], y[147]))
            {
                output.second.emplace_back(28, 36);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[68], y[69], y[70], y[71], y[148], y[149], y[150], y[151]))
            {
                output.second.emplace_back(17, 37);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[68], y[69], y[70], y[71], y[152], y[153], y[154], y[155]))
            {
                output.second.emplace_back(17, 38);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[68], y[69], y[70], y[71], y[156], y[157], y[158], y[159]))
            {
                output.second.emplace_back(17, 39);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[68], y[69], y[70], y[71], y[160], y[161], y[162], y[163]))
            {
                output.second.emplace_back(17, 40);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[68], y[69], y[70], y[71], y[164], y[165], y[166], y[167]))
            {
                output.second.emplace_back(17, 41);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[68], y[69], y[70], y[71], y[168], y[169], y[170], y[171]))
            {
                output.second.emplace_back(17, 42);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[68], y[69], y[70], y[71], y[172], y[173], y[174], y[175]))
            {
                output.second.emplace_back(17, 43);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[68], y[69], y[70], y[71], y[176], y[177], y[178], y[179]))
            {
                output.second.emplace_back(17, 44);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[68], y[69], y[70], y[71], y[180], y[181], y[182], y[183]))
            {
                output.second.emplace_back(17, 45);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[68], y[69], y[70], y[71], y[184], y[185], y[186], y[187]))
            {
                output.second.emplace_back(17, 46);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[68], y[69], y[70], y[71], y[188], y[189], y[190], y[191]))
            {
                output.second.emplace_back(17, 47);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[68], y[69], y[70], y[71], y[192], y[193], y[194], y[195]))
            {
                output.second.emplace_back(17, 48);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[68], y[69], y[70], y[71], y[196], y[197], y[198], y[199]))
            {
                output.second.emplace_back(17, 49);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[68], y[69], y[70], y[71], y[200], y[201], y[202], y[203]))
            {
                output.second.emplace_back(17, 50);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[68], y[69], y[70], y[71], y[204], y[205], y[206], y[207]))
            {
                output.second.emplace_back(17, 51);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[68], y[69], y[70], y[71], y[208], y[209], y[210], y[211]))
            {
                output.second.emplace_back(17, 52);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[68], y[69], y[70], y[71], y[212], y[213], y[214], y[215]))
            {
                output.second.emplace_back(17, 53);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[68], y[69], y[70], y[71], y[216], y[217], y[218], y[219]))
            {
                output.second.emplace_back(17, 54);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[72], y[73], y[74], y[75], y[148], y[149], y[150], y[151]))
            {
                output.second.emplace_back(18, 37);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[72], y[73], y[74], y[75], y[152], y[153], y[154], y[155]))
            {
                output.second.emplace_back(18, 38);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[72], y[73], y[74], y[75], y[156], y[157], y[158], y[159]))
            {
                output.second.emplace_back(18, 39);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[72], y[73], y[74], y[75], y[160], y[161], y[162], y[163]))
            {
                output.second.emplace_back(18, 40);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[72], y[73], y[74], y[75], y[164], y[165], y[166], y[167]))
            {
                output.second.emplace_back(18, 41);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[72], y[73], y[74], y[75], y[168], y[169], y[170], y[171]))
            {
                output.second.emplace_back(18, 42);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[72], y[73], y[74], y[75], y[172], y[173], y[174], y[175]))
            {
                output.second.emplace_back(18, 43);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[72], y[73], y[74], y[75], y[176], y[177], y[178], y[179]))
            {
                output.second.emplace_back(18, 44);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[72], y[73], y[74], y[75], y[180], y[181], y[182], y[183]))
            {
                output.second.emplace_back(18, 45);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[72], y[73], y[74], y[75], y[184], y[185], y[186], y[187]))
            {
                output.second.emplace_back(18, 46);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[72], y[73], y[74], y[75], y[188], y[189], y[190], y[191]))
            {
                output.second.emplace_back(18, 47);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[72], y[73], y[74], y[75], y[192], y[193], y[194], y[195]))
            {
                output.second.emplace_back(18, 48);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[72], y[73], y[74], y[75], y[196], y[197], y[198], y[199]))
            {
                output.second.emplace_back(18, 49);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[72], y[73], y[74], y[75], y[200], y[201], y[202], y[203]))
            {
                output.second.emplace_back(18, 50);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[72], y[73], y[74], y[75], y[204], y[205], y[206], y[207]))
            {
                output.second.emplace_back(18, 51);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[72], y[73], y[74], y[75], y[208], y[209], y[210], y[211]))
            {
                output.second.emplace_back(18, 52);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[72], y[73], y[74], y[75], y[212], y[213], y[214], y[215]))
            {
                output.second.emplace_back(18, 53);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[72], y[73], y[74], y[75], y[216], y[217], y[218], y[219]))
            {
                output.second.emplace_back(18, 54);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[76], y[77], y[78], y[79], y[148], y[149], y[150], y[151]))
            {
                output.second.emplace_back(19, 37);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[76], y[77], y[78], y[79], y[152], y[153], y[154], y[155]))
            {
                output.second.emplace_back(19, 38);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[76], y[77], y[78], y[79], y[156], y[157], y[158], y[159]))
            {
                output.second.emplace_back(19, 39);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[76], y[77], y[78], y[79], y[160], y[161], y[162], y[163]))
            {
                output.second.emplace_back(19, 40);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[76], y[77], y[78], y[79], y[164], y[165], y[166], y[167]))
            {
                output.second.emplace_back(19, 41);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[76], y[77], y[78], y[79], y[168], y[169], y[170], y[171]))
            {
                output.second.emplace_back(19, 42);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[76], y[77], y[78], y[79], y[172], y[173], y[174], y[175]))
            {
                output.second.emplace_back(19, 43);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[76], y[77], y[78], y[79], y[176], y[177], y[178], y[179]))
            {
                output.second.emplace_back(19, 44);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[76], y[77], y[78], y[79], y[180], y[181], y[182], y[183]))
            {
                output.second.emplace_back(19, 45);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[76], y[77], y[78], y[79], y[184], y[185], y[186], y[187]))
            {
                output.second.emplace_back(19, 46);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[76], y[77], y[78], y[79], y[188], y[189], y[190], y[191]))
            {
                output.second.emplace_back(19, 47);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[76], y[77], y[78], y[79], y[192], y[193], y[194], y[195]))
            {
                output.second.emplace_back(19, 48);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[76], y[77], y[78], y[79], y[196], y[197], y[198], y[199]))
            {
                output.second.emplace_back(19, 49);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[76], y[77], y[78], y[79], y[200], y[201], y[202], y[203]))
            {
                output.second.emplace_back(19, 50);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[76], y[77], y[78], y[79], y[204], y[205], y[206], y[207]))
            {
                output.second.emplace_back(19, 51);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[76], y[77], y[78], y[79], y[208], y[209], y[210], y[211]))
            {
                output.second.emplace_back(19, 52);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[76], y[77], y[78], y[79], y[212], y[213], y[214], y[215]))
            {
                output.second.emplace_back(19, 53);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[76], y[77], y[78], y[79], y[216], y[217], y[218], y[219]))
            {
                output.second.emplace_back(19, 54);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[80], y[81], y[82], y[83], y[148], y[149], y[150], y[151]))
            {
                output.second.emplace_back(20, 37);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[80], y[81], y[82], y[83], y[152], y[153], y[154], y[155]))
            {
                output.second.emplace_back(20, 38);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[80], y[81], y[82], y[83], y[156], y[157], y[158], y[159]))
            {
                output.second.emplace_back(20, 39);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[80], y[81], y[82], y[83], y[160], y[161], y[162], y[163]))
            {
                output.second.emplace_back(20, 40);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[80], y[81], y[82], y[83], y[164], y[165], y[166], y[167]))
            {
                output.second.emplace_back(20, 41);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[80], y[81], y[82], y[83], y[168], y[169], y[170], y[171]))
            {
                output.second.emplace_back(20, 42);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[80], y[81], y[82], y[83], y[172], y[173], y[174], y[175]))
            {
                output.second.emplace_back(20, 43);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[80], y[81], y[82], y[83], y[176], y[177], y[178], y[179]))
            {
                output.second.emplace_back(20, 44);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[80], y[81], y[82], y[83], y[180], y[181], y[182], y[183]))
            {
                output.second.emplace_back(20, 45);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[80], y[81], y[82], y[83], y[184], y[185], y[186], y[187]))
            {
                output.second.emplace_back(20, 46);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[80], y[81], y[82], y[83], y[188], y[189], y[190], y[191]))
            {
                output.second.emplace_back(20, 47);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[80], y[81], y[82], y[83], y[192], y[193], y[194], y[195]))
            {
                output.second.emplace_back(20, 48);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[80], y[81], y[82], y[83], y[196], y[197], y[198], y[199]))
            {
                output.second.emplace_back(20, 49);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[80], y[81], y[82], y[83], y[200], y[201], y[202], y[203]))
            {
                output.second.emplace_back(20, 50);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[80], y[81], y[82], y[83], y[204], y[205], y[206], y[207]))
            {
                output.second.emplace_back(20, 51);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[80], y[81], y[82], y[83], y[208], y[209], y[210], y[211]))
            {
                output.second.emplace_back(20, 52);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[80], y[81], y[82], y[83], y[212], y[213], y[214], y[215]))
            {
                output.second.emplace_back(20, 53);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[80], y[81], y[82], y[83], y[216], y[217], y[218], y[219]))
            {
                output.second.emplace_back(20, 54);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[84], y[85], y[86], y[87], y[148], y[149], y[150], y[151]))
            {
                output.second.emplace_back(21, 37);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[84], y[85], y[86], y[87], y[152], y[153], y[154], y[155]))
            {
                output.second.emplace_back(21, 38);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[84], y[85], y[86], y[87], y[156], y[157], y[158], y[159]))
            {
                output.second.emplace_back(21, 39);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[84], y[85], y[86], y[87], y[160], y[161], y[162], y[163]))
            {
                output.second.emplace_back(21, 40);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[84], y[85], y[86], y[87], y[164], y[165], y[166], y[167]))
            {
                output.second.emplace_back(21, 41);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[84], y[85], y[86], y[87], y[168], y[169], y[170], y[171]))
            {
                output.second.emplace_back(21, 42);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[84], y[85], y[86], y[87], y[172], y[173], y[174], y[175]))
            {
                output.second.emplace_back(21, 43);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[84], y[85], y[86], y[87], y[176], y[177], y[178], y[179]))
            {
                output.second.emplace_back(21, 44);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[84], y[85], y[86], y[87], y[180], y[181], y[182], y[183]))
            {
                output.second.emplace_back(21, 45);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[84], y[85], y[86], y[87], y[184], y[185], y[186], y[187]))
            {
                output.second.emplace_back(21, 46);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[84], y[85], y[86], y[87], y[188], y[189], y[190], y[191]))
            {
                output.second.emplace_back(21, 47);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[84], y[85], y[86], y[87], y[192], y[193], y[194], y[195]))
            {
                output.second.emplace_back(21, 48);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[84], y[85], y[86], y[87], y[196], y[197], y[198], y[199]))
            {
                output.second.emplace_back(21, 49);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[84], y[85], y[86], y[87], y[200], y[201], y[202], y[203]))
            {
                output.second.emplace_back(21, 50);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[84], y[85], y[86], y[87], y[204], y[205], y[206], y[207]))
            {
                output.second.emplace_back(21, 51);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[84], y[85], y[86], y[87], y[208], y[209], y[210], y[211]))
            {
                output.second.emplace_back(21, 52);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[84], y[85], y[86], y[87], y[212], y[213], y[214], y[215]))
            {
                output.second.emplace_back(21, 53);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[84], y[85], y[86], y[87], y[216], y[217], y[218], y[219]))
            {
                output.second.emplace_back(21, 54);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[88], y[89], y[90], y[91], y[148], y[149], y[150], y[151]))
            {
                output.second.emplace_back(22, 37);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[88], y[89], y[90], y[91], y[152], y[153], y[154], y[155]))
            {
                output.second.emplace_back(22, 38);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[88], y[89], y[90], y[91], y[156], y[157], y[158], y[159]))
            {
                output.second.emplace_back(22, 39);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[88], y[89], y[90], y[91], y[160], y[161], y[162], y[163]))
            {
                output.second.emplace_back(22, 40);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[88], y[89], y[90], y[91], y[164], y[165], y[166], y[167]))
            {
                output.second.emplace_back(22, 41);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[88], y[89], y[90], y[91], y[168], y[169], y[170], y[171]))
            {
                output.second.emplace_back(22, 42);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[88], y[89], y[90], y[91], y[172], y[173], y[174], y[175]))
            {
                output.second.emplace_back(22, 43);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[88], y[89], y[90], y[91], y[176], y[177], y[178], y[179]))
            {
                output.second.emplace_back(22, 44);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[88], y[89], y[90], y[91], y[180], y[181], y[182], y[183]))
            {
                output.second.emplace_back(22, 45);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[88], y[89], y[90], y[91], y[184], y[185], y[186], y[187]))
            {
                output.second.emplace_back(22, 46);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[88], y[89], y[90], y[91], y[188], y[189], y[190], y[191]))
            {
                output.second.emplace_back(22, 47);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[88], y[89], y[90], y[91], y[192], y[193], y[194], y[195]))
            {
                output.second.emplace_back(22, 48);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[88], y[89], y[90], y[91], y[196], y[197], y[198], y[199]))
            {
                output.second.emplace_back(22, 49);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[88], y[89], y[90], y[91], y[200], y[201], y[202], y[203]))
            {
                output.second.emplace_back(22, 50);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[88], y[89], y[90], y[91], y[204], y[205], y[206], y[207]))
            {
                output.second.emplace_back(22, 51);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[88], y[89], y[90], y[91], y[208], y[209], y[210], y[211]))
            {
                output.second.emplace_back(22, 52);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[88], y[89], y[90], y[91], y[212], y[213], y[214], y[215]))
            {
                output.second.emplace_back(22, 53);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[88], y[89], y[90], y[91], y[216], y[217], y[218], y[219]))
            {
                output.second.emplace_back(22, 54);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[92], y[93], y[94], y[95], y[148], y[149], y[150], y[151]))
            {
                output.second.emplace_back(23, 37);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[92], y[93], y[94], y[95], y[152], y[153], y[154], y[155]))
            {
                output.second.emplace_back(23, 38);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[92], y[93], y[94], y[95], y[156], y[157], y[158], y[159]))
            {
                output.second.emplace_back(23, 39);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[92], y[93], y[94], y[95], y[160], y[161], y[162], y[163]))
            {
                output.second.emplace_back(23, 40);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[92], y[93], y[94], y[95], y[164], y[165], y[166], y[167]))
            {
                output.second.emplace_back(23, 41);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[92], y[93], y[94], y[95], y[168], y[169], y[170], y[171]))
            {
                output.second.emplace_back(23, 42);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[92], y[93], y[94], y[95], y[172], y[173], y[174], y[175]))
            {
                output.second.emplace_back(23, 43);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[92], y[93], y[94], y[95], y[176], y[177], y[178], y[179]))
            {
                output.second.emplace_back(23, 44);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[92], y[93], y[94], y[95], y[180], y[181], y[182], y[183]))
            {
                output.second.emplace_back(23, 45);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[92], y[93], y[94], y[95], y[184], y[185], y[186], y[187]))
            {
                output.second.emplace_back(23, 46);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[92], y[93], y[94], y[95], y[188], y[189], y[190], y[191]))
            {
                output.second.emplace_back(23, 47);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[92], y[93], y[94], y[95], y[192], y[193], y[194], y[195]))
            {
                output.second.emplace_back(23, 48);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[92], y[93], y[94], y[95], y[196], y[197], y[198], y[199]))
            {
                output.second.emplace_back(23, 49);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[92], y[93], y[94], y[95], y[200], y[201], y[202], y[203]))
            {
                output.second.emplace_back(23, 50);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[92], y[93], y[94], y[95], y[204], y[205], y[206], y[207]))
            {
                output.second.emplace_back(23, 51);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[92], y[93], y[94], y[95], y[208], y[209], y[210], y[211]))
            {
                output.second.emplace_back(23, 52);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[92], y[93], y[94], y[95], y[212], y[213], y[214], y[215]))
            {
                output.second.emplace_back(23, 53);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[92], y[93], y[94], y[95], y[216], y[217], y[218], y[219]))
            {
                output.second.emplace_back(23, 54);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[96], y[97], y[98], y[99], y[148], y[149], y[150], y[151]))
            {
                output.second.emplace_back(24, 37);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[96], y[97], y[98], y[99], y[152], y[153], y[154], y[155]))
            {
                output.second.emplace_back(24, 38);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[96], y[97], y[98], y[99], y[156], y[157], y[158], y[159]))
            {
                output.second.emplace_back(24, 39);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[96], y[97], y[98], y[99], y[160], y[161], y[162], y[163]))
            {
                output.second.emplace_back(24, 40);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[96], y[97], y[98], y[99], y[164], y[165], y[166], y[167]))
            {
                output.second.emplace_back(24, 41);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[96], y[97], y[98], y[99], y[168], y[169], y[170], y[171]))
            {
                output.second.emplace_back(24, 42);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[96], y[97], y[98], y[99], y[172], y[173], y[174], y[175]))
            {
                output.second.emplace_back(24, 43);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[96], y[97], y[98], y[99], y[176], y[177], y[178], y[179]))
            {
                output.second.emplace_back(24, 44);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[96], y[97], y[98], y[99], y[180], y[181], y[182], y[183]))
            {
                output.second.emplace_back(24, 45);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[96], y[97], y[98], y[99], y[184], y[185], y[186], y[187]))
            {
                output.second.emplace_back(24, 46);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[96], y[97], y[98], y[99], y[188], y[189], y[190], y[191]))
            {
                output.second.emplace_back(24, 47);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[96], y[97], y[98], y[99], y[192], y[193], y[194], y[195]))
            {
                output.second.emplace_back(24, 48);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[96], y[97], y[98], y[99], y[196], y[197], y[198], y[199]))
            {
                output.second.emplace_back(24, 49);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[96], y[97], y[98], y[99], y[200], y[201], y[202], y[203]))
            {
                output.second.emplace_back(24, 50);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[96], y[97], y[98], y[99], y[204], y[205], y[206], y[207]))
            {
                output.second.emplace_back(24, 51);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[96], y[97], y[98], y[99], y[208], y[209], y[210], y[211]))
            {
                output.second.emplace_back(24, 52);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[96], y[97], y[98], y[99], y[212], y[213], y[214], y[215]))
            {
                output.second.emplace_back(24, 53);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[96], y[97], y[98], y[99], y[216], y[217], y[218], y[219]))
            {
                output.second.emplace_back(24, 54);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[100], y[101], y[102], y[103], y[148], y[149], y[150], y[151]))
            {
                output.second.emplace_back(25, 37);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[100], y[101], y[102], y[103], y[152], y[153], y[154], y[155]))
            {
                output.second.emplace_back(25, 38);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[100], y[101], y[102], y[103], y[156], y[157], y[158], y[159]))
            {
                output.second.emplace_back(25, 39);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[100], y[101], y[102], y[103], y[160], y[161], y[162], y[163]))
            {
                output.second.emplace_back(25, 40);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[100], y[101], y[102], y[103], y[164], y[165], y[166], y[167]))
            {
                output.second.emplace_back(25, 41);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[100], y[101], y[102], y[103], y[168], y[169], y[170], y[171]))
            {
                output.second.emplace_back(25, 42);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[100], y[101], y[102], y[103], y[172], y[173], y[174], y[175]))
            {
                output.second.emplace_back(25, 43);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[100], y[101], y[102], y[103], y[176], y[177], y[178], y[179]))
            {
                output.second.emplace_back(25, 44);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[100], y[101], y[102], y[103], y[180], y[181], y[182], y[183]))
            {
                output.second.emplace_back(25, 45);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[100], y[101], y[102], y[103], y[184], y[185], y[186], y[187]))
            {
                output.second.emplace_back(25, 46);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[100], y[101], y[102], y[103], y[188], y[189], y[190], y[191]))
            {
                output.second.emplace_back(25, 47);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[100], y[101], y[102], y[103], y[192], y[193], y[194], y[195]))
            {
                output.second.emplace_back(25, 48);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[100], y[101], y[102], y[103], y[196], y[197], y[198], y[199]))
            {
                output.second.emplace_back(25, 49);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[100], y[101], y[102], y[103], y[200], y[201], y[202], y[203]))
            {
                output.second.emplace_back(25, 50);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[100], y[101], y[102], y[103], y[204], y[205], y[206], y[207]))
            {
                output.second.emplace_back(25, 51);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[100], y[101], y[102], y[103], y[208], y[209], y[210], y[211]))
            {
                output.second.emplace_back(25, 52);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[100], y[101], y[102], y[103], y[212], y[213], y[214], y[215]))
            {
                output.second.emplace_back(25, 53);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[100], y[101], y[102], y[103], y[216], y[217], y[218], y[219]))
            {
                output.second.emplace_back(25, 54);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[104], y[105], y[106], y[107], y[148], y[149], y[150], y[151]))
            {
                output.second.emplace_back(26, 37);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[104], y[105], y[106], y[107], y[152], y[153], y[154], y[155]))
            {
                output.second.emplace_back(26, 38);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[104], y[105], y[106], y[107], y[156], y[157], y[158], y[159]))
            {
                output.second.emplace_back(26, 39);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[104], y[105], y[106], y[107], y[160], y[161], y[162], y[163]))
            {
                output.second.emplace_back(26, 40);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[104], y[105], y[106], y[107], y[164], y[165], y[166], y[167]))
            {
                output.second.emplace_back(26, 41);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[104], y[105], y[106], y[107], y[168], y[169], y[170], y[171]))
            {
                output.second.emplace_back(26, 42);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[104], y[105], y[106], y[107], y[172], y[173], y[174], y[175]))
            {
                output.second.emplace_back(26, 43);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[104], y[105], y[106], y[107], y[176], y[177], y[178], y[179]))
            {
                output.second.emplace_back(26, 44);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[104], y[105], y[106], y[107], y[180], y[181], y[182], y[183]))
            {
                output.second.emplace_back(26, 45);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[104], y[105], y[106], y[107], y[184], y[185], y[186], y[187]))
            {
                output.second.emplace_back(26, 46);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[104], y[105], y[106], y[107], y[188], y[189], y[190], y[191]))
            {
                output.second.emplace_back(26, 47);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[104], y[105], y[106], y[107], y[192], y[193], y[194], y[195]))
            {
                output.second.emplace_back(26, 48);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[104], y[105], y[106], y[107], y[196], y[197], y[198], y[199]))
            {
                output.second.emplace_back(26, 49);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[104], y[105], y[106], y[107], y[200], y[201], y[202], y[203]))
            {
                output.second.emplace_back(26, 50);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[104], y[105], y[106], y[107], y[204], y[205], y[206], y[207]))
            {
                output.second.emplace_back(26, 51);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[104], y[105], y[106], y[107], y[208], y[209], y[210], y[211]))
            {
                output.second.emplace_back(26, 52);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[104], y[105], y[106], y[107], y[212], y[213], y[214], y[215]))
            {
                output.second.emplace_back(26, 53);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[104], y[105], y[106], y[107], y[216], y[217], y[218], y[219]))
            {
                output.second.emplace_back(26, 54);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[108], y[109], y[110], y[111], y[148], y[149], y[150], y[151]))
            {
                output.second.emplace_back(27, 37);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[108], y[109], y[110], y[111], y[152], y[153], y[154], y[155]))
            {
                output.second.emplace_back(27, 38);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[108], y[109], y[110], y[111], y[156], y[157], y[158], y[159]))
            {
                output.second.emplace_back(27, 39);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[108], y[109], y[110], y[111], y[160], y[161], y[162], y[163]))
            {
                output.second.emplace_back(27, 40);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[108], y[109], y[110], y[111], y[164], y[165], y[166], y[167]))
            {
                output.second.emplace_back(27, 41);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[108], y[109], y[110], y[111], y[168], y[169], y[170], y[171]))
            {
                output.second.emplace_back(27, 42);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[108], y[109], y[110], y[111], y[172], y[173], y[174], y[175]))
            {
                output.second.emplace_back(27, 43);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[108], y[109], y[110], y[111], y[176], y[177], y[178], y[179]))
            {
                output.second.emplace_back(27, 44);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[108], y[109], y[110], y[111], y[180], y[181], y[182], y[183]))
            {
                output.second.emplace_back(27, 45);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[108], y[109], y[110], y[111], y[184], y[185], y[186], y[187]))
            {
                output.second.emplace_back(27, 46);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[108], y[109], y[110], y[111], y[188], y[189], y[190], y[191]))
            {
                output.second.emplace_back(27, 47);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[108], y[109], y[110], y[111], y[192], y[193], y[194], y[195]))
            {
                output.second.emplace_back(27, 48);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[108], y[109], y[110], y[111], y[196], y[197], y[198], y[199]))
            {
                output.second.emplace_back(27, 49);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[108], y[109], y[110], y[111], y[200], y[201], y[202], y[203]))
            {
                output.second.emplace_back(27, 50);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[108], y[109], y[110], y[111], y[204], y[205], y[206], y[207]))
            {
                output.second.emplace_back(27, 51);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[108], y[109], y[110], y[111], y[208], y[209], y[210], y[211]))
            {
                output.second.emplace_back(27, 52);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[108], y[109], y[110], y[111], y[212], y[213], y[214], y[215]))
            {
                output.second.emplace_back(27, 53);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[108], y[109], y[110], y[111], y[216], y[217], y[218], y[219]))
            {
                output.second.emplace_back(27, 54);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[112], y[113], y[114], y[115], y[148], y[149], y[150], y[151]))
            {
                output.second.emplace_back(28, 37);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[112], y[113], y[114], y[115], y[152], y[153], y[154], y[155]))
            {
                output.second.emplace_back(28, 38);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[112], y[113], y[114], y[115], y[156], y[157], y[158], y[159]))
            {
                output.second.emplace_back(28, 39);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[112], y[113], y[114], y[115], y[160], y[161], y[162], y[163]))
            {
                output.second.emplace_back(28, 40);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[112], y[113], y[114], y[115], y[164], y[165], y[166], y[167]))
            {
                output.second.emplace_back(28, 41);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[112], y[113], y[114], y[115], y[168], y[169], y[170], y[171]))
            {
                output.second.emplace_back(28, 42);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[112], y[113], y[114], y[115], y[172], y[173], y[174], y[175]))
            {
                output.second.emplace_back(28, 43);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[112], y[113], y[114], y[115], y[176], y[177], y[178], y[179]))
            {
                output.second.emplace_back(28, 44);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[112], y[113], y[114], y[115], y[180], y[181], y[182], y[183]))
            {
                output.second.emplace_back(28, 45);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[112], y[113], y[114], y[115], y[184], y[185], y[186], y[187]))
            {
                output.second.emplace_back(28, 46);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[112], y[113], y[114], y[115], y[188], y[189], y[190], y[191]))
            {
                output.second.emplace_back(28, 47);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[112], y[113], y[114], y[115], y[192], y[193], y[194], y[195]))
            {
                output.second.emplace_back(28, 48);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[112], y[113], y[114], y[115], y[196], y[197], y[198], y[199]))
            {
                output.second.emplace_back(28, 49);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[112], y[113], y[114], y[115], y[200], y[201], y[202], y[203]))
            {
                output.second.emplace_back(28, 50);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[112], y[113], y[114], y[115], y[204], y[205], y[206], y[207]))
            {
                output.second.emplace_back(28, 51);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[112], y[113], y[114], y[115], y[208], y[209], y[210], y[211]))
            {
                output.second.emplace_back(28, 52);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[112], y[113], y[114], y[115], y[212], y[213], y[214], y[215]))
            {
                output.second.emplace_back(28, 53);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[112], y[113], y[114], y[115], y[216], y[217], y[218], y[219]))
            {
                output.second.emplace_back(28, 54);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[68], y[69], y[70], y[71], y[220], y[221], y[222], y[223]))
            {
                output.second.emplace_back(17, 55);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[68], y[69], y[70], y[71], y[224], y[225], y[226], y[227]))
            {
                output.second.emplace_back(17, 56);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[72], y[73], y[74], y[75], y[220], y[221], y[222], y[223]))
            {
                output.second.emplace_back(18, 55);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[72], y[73], y[74], y[75], y[224], y[225], y[226], y[227]))
            {
                output.second.emplace_back(18, 56);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[76], y[77], y[78], y[79], y[220], y[221], y[222], y[223]))
            {
                output.second.emplace_back(19, 55);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[76], y[77], y[78], y[79], y[224], y[225], y[226], y[227]))
            {
                output.second.emplace_back(19, 56);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[80], y[81], y[82], y[83], y[220], y[221], y[222], y[223]))
            {
                output.second.emplace_back(20, 55);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[80], y[81], y[82], y[83], y[224], y[225], y[226], y[227]))
            {
                output.second.emplace_back(20, 56);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[84], y[85], y[86], y[87], y[220], y[221], y[222], y[223]))
            {
                output.second.emplace_back(21, 55);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[84], y[85], y[86], y[87], y[224], y[225], y[226], y[227]))
            {
                output.second.emplace_back(21, 56);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[88], y[89], y[90], y[91], y[220], y[221], y[222], y[223]))
            {
                output.second.emplace_back(22, 55);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[88], y[89], y[90], y[91], y[224], y[225], y[226], y[227]))
            {
                output.second.emplace_back(22, 56);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[92], y[93], y[94], y[95], y[220], y[221], y[222], y[223]))
            {
                output.second.emplace_back(23, 55);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[92], y[93], y[94], y[95], y[224], y[225], y[226], y[227]))
            {
                output.second.emplace_back(23, 56);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[96], y[97], y[98], y[99], y[220], y[221], y[222], y[223]))
            {
                output.second.emplace_back(24, 55);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[96], y[97], y[98], y[99], y[224], y[225], y[226], y[227]))
            {
                output.second.emplace_back(24, 56);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[100], y[101], y[102], y[103], y[220], y[221], y[222], y[223]))
            {
                output.second.emplace_back(25, 55);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[100], y[101], y[102], y[103], y[224], y[225], y[226], y[227]))
            {
                output.second.emplace_back(25, 56);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[104], y[105], y[106], y[107], y[220], y[221], y[222], y[223]))
            {
                output.second.emplace_back(26, 55);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[104], y[105], y[106], y[107], y[224], y[225], y[226], y[227]))
            {
                output.second.emplace_back(26, 56);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[108], y[109], y[110], y[111], y[220], y[221], y[222], y[223]))
            {
                output.second.emplace_back(27, 55);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[108], y[109], y[110], y[111], y[224], y[225], y[226], y[227]))
            {
                output.second.emplace_back(27, 56);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[112], y[113], y[114], y[115], y[220], y[221], y[222], y[223]))
            {
                output.second.emplace_back(28, 55);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[112], y[113], y[114], y[115], y[224], y[225], y[226], y[227]))
            {
                output.second.emplace_back(28, 56);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[68], y[69], y[70], y[71], y[228], y[229], y[230], y[231]))
            {
                output.second.emplace_back(17, 57);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[68], y[69], y[70], y[71], y[232], y[233], y[234], y[235]))
            {
                output.second.emplace_back(17, 58);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[72], y[73], y[74], y[75], y[228], y[229], y[230], y[231]))
            {
                output.second.emplace_back(18, 57);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[72], y[73], y[74], y[75], y[232], y[233], y[234], y[235]))
            {
                output.second.emplace_back(18, 58);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[76], y[77], y[78], y[79], y[228], y[229], y[230], y[231]))
            {
                output.second.emplace_back(19, 57);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[76], y[77], y[78], y[79], y[232], y[233], y[234], y[235]))
            {
                output.second.emplace_back(19, 58);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[80], y[81], y[82], y[83], y[228], y[229], y[230], y[231]))
            {
                output.second.emplace_back(20, 57);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[80], y[81], y[82], y[83], y[232], y[233], y[234], y[235]))
            {
                output.second.emplace_back(20, 58);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[84], y[85], y[86], y[87], y[228], y[229], y[230], y[231]))
            {
                output.second.emplace_back(21, 57);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[84], y[85], y[86], y[87], y[232], y[233], y[234], y[235]))
            {
                output.second.emplace_back(21, 58);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[88], y[89], y[90], y[91], y[228], y[229], y[230], y[231]))
            {
                output.second.emplace_back(22, 57);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[88], y[89], y[90], y[91], y[232], y[233], y[234], y[235]))
            {
                output.second.emplace_back(22, 58);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[92], y[93], y[94], y[95], y[228], y[229], y[230], y[231]))
            {
                output.second.emplace_back(23, 57);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[92], y[93], y[94], y[95], y[232], y[233], y[234], y[235]))
            {
                output.second.emplace_back(23, 58);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[96], y[97], y[98], y[99], y[228], y[229], y[230], y[231]))
            {
                output.second.emplace_back(24, 57);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[96], y[97], y[98], y[99], y[232], y[233], y[234], y[235]))
            {
                output.second.emplace_back(24, 58);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[100], y[101], y[102], y[103], y[228], y[229], y[230], y[231]))
            {
                output.second.emplace_back(25, 57);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[100], y[101], y[102], y[103], y[232], y[233], y[234], y[235]))
            {
                output.second.emplace_back(25, 58);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[104], y[105], y[106], y[107], y[228], y[229], y[230], y[231]))
            {
                output.second.emplace_back(26, 57);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[104], y[105], y[106], y[107], y[232], y[233], y[234], y[235]))
            {
                output.second.emplace_back(26, 58);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[108], y[109], y[110], y[111], y[228], y[229], y[230], y[231]))
            {
                output.second.emplace_back(27, 57);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[108], y[109], y[110], y[111], y[232], y[233], y[234], y[235]))
            {
                output.second.emplace_back(27, 58);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[112], y[113], y[114], y[115], y[228], y[229], y[230], y[231]))
            {
                output.second.emplace_back(28, 57);
            }

            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[112], y[113], y[114], y[115], y[232], y[233], y[234], y[235]))
            {
                output.second.emplace_back(28, 58);
            }

            return output;
        }

        template <std::size_t rake>
        inline static bool fkcc(
            const vamp::collision::Environment<FloatVector<rake>> &environment,
            const ConfigurationBlock<rake> &x) noexcept
        {
            std::array<FloatVector<rake, 1>, 57> v;
            std::array<FloatVector<rake, 1>, 280> y;

            v[0] = sin(x[0]);
            v[1] = -v[0];
            y[4] = -0.08 * v[1];
            v[2] = cos(x[0]);
            y[5] = -0.08 * v[2];
            y[8] = -0.03 * v[1];
            y[9] = -0.03 * v[2];
            y[20] = 0.03 * v[1];
            y[21] = 0.03 * v[2];
            y[24] = 0.08 * v[1];
            y[25] = 0.08 * v[2];
            v[3] = sin(x[1]);
            v[4] = -v[3];
            v[5] = cos(x[1]);
            v[6] = 4.89663865010925e-12 * v[5];
            v[7] = v[2] * v[4] + v[1] * v[6];
            y[28] = -0.12 * v[7];
            v[6] = v[0] * v[4] + v[2] * v[6];
            y[29] = -0.12 * v[6];
            v[4] = -1. * v[5];
            y[30] = 0.333 + -0.12 * v[4];
            y[32] = -0.17 * v[7];
            y[33] = -0.17 * v[6];
            y[34] = 0.333 + -0.17 * v[4];
            v[8] = -1. * v[7] + 4.89663865010925e-12 * v[1];
            v[9] = -0.316 * v[7];
            y[36] = -0.1 * v[8] + v[9];
            v[10] = -1. * v[6] + 4.89663865010925e-12 * v[2];
            v[11] = -0.316 * v[6];
            y[37] = -0.1 * v[10] + v[11];
            v[12] = 2.39770700697438e-23 + -1. * v[4];
            v[13] = 0.333 + -0.316 * v[4];
            y[38] = -0.1 * v[12] + v[13];
            y[40] = -0.06 * v[8] + v[9];
            y[41] = -0.06 * v[10] + v[11];
            y[42] = -0.06 * v[12] + v[13];
            v[14] = 4.89663865010925e-12 * v[3];
            v[15] = v[2] * v[5] + v[1] * v[14];
            v[16] = cos(x[2]);
            v[17] = sin(x[2]);
            v[18] = 4.89663865010925e-12 * v[17];
            v[19] = v[15] * v[16] + v[7] * v[18] + v[1] * v[17];
            v[20] = -v[17];
            v[21] = 4.89663865010925e-12 * v[16];
            v[15] = v[15] * v[20] + v[7] * v[21] + v[1] * v[16];
            y[44] = 0.08 * v[19] + 0.06 * v[15] + v[9];
            v[14] = v[0] * v[5] + v[2] * v[14];
            v[5] = v[14] * v[16] + v[6] * v[18] + v[2] * v[17];
            v[14] = v[14] * v[20] + v[6] * v[21] + v[2] * v[16];
            y[45] = 0.08 * v[5] + 0.06 * v[14] + v[11];
            v[3] = -1. * v[3];
            v[18] = v[3] * v[16] + v[4] * v[18] + 4.89663865010925e-12 * v[17];
            v[3] = v[3] * v[20] + v[4] * v[21] + 4.89663865010925e-12 * v[16];
            y[46] = 0.08 * v[18] + 0.06 * v[3] + v[13];
            y[48] = 0.08 * v[19] + 0.02 * v[15] + v[9];
            y[49] = 0.08 * v[5] + 0.02 * v[14] + v[11];
            y[50] = 0.08 * v[18] + 0.02 * v[3] + v[13];
            v[21] = cos(x[3]);
            v[20] = sin(x[3]);
            v[16] = 4.89663865010925e-12 * v[20];
            v[17] = v[19] * v[21] + v[15] * v[16] + v[8] * v[20];
            v[0] = -v[20];
            v[22] = 4.89663865010925e-12 * v[21];
            v[23] = v[19] * v[0] + v[15] * v[22] + v[8] * v[21];
            v[24] = v[9] + 0.0825 * v[19];
            y[52] = -0.08 * v[17] + 0.095 * v[23] + v[24];
            v[25] = v[5] * v[21] + v[14] * v[16] + v[10] * v[20];
            v[26] = v[5] * v[0] + v[14] * v[22] + v[10] * v[21];
            v[27] = v[11] + 0.0825 * v[5];
            y[53] = -0.08 * v[25] + 0.095 * v[26] + v[27];
            v[16] = v[18] * v[21] + v[3] * v[16] + v[12] * v[20];
            v[22] = v[18] * v[0] + v[3] * v[22] + v[12] * v[21];
            v[0] = v[13] + 0.0825 * v[18];
            y[54] = -0.08 * v[16] + 0.095 * v[22] + v[0];
            v[21] = -1. * v[15] + 4.89663865010925e-12 * v[8];
            y[56] = 0.02 * v[21] + v[24];
            v[20] = -1. * v[14] + 4.89663865010925e-12 * v[10];
            y[57] = 0.02 * v[20] + v[27];
            v[28] = -1. * v[3] + 4.89663865010925e-12 * v[12];
            y[58] = 0.02 * v[28] + v[0];
            y[60] = 0.06 * v[21] + v[24];
            y[61] = 0.06 * v[20] + v[27];
            y[62] = 0.06 * v[28] + v[0];
            y[64] = -0.08 * v[17] + 0.06 * v[23] + v[24];
            y[65] = -0.08 * v[25] + 0.06 * v[26] + v[27];
            y[66] = -0.08 * v[16] + 0.06 * v[22] + v[0];
            v[29] = sin(x[4]);
            v[30] = -v[29];
            v[31] = cos(x[4]);
            v[32] = 4.89663865010925e-12 * v[31];
            v[33] = -1. * v[31];
            v[34] = v[17] * v[30] + v[23] * v[32] + v[21] * v[33];
            y[116] = v[24] + -0.0825 * v[17] + 0.384 * v[23];
            y[68] = 0.055 * v[34] + y[116];
            v[35] = v[25] * v[30] + v[26] * v[32] + v[20] * v[33];
            y[117] = v[27] + -0.0825 * v[25] + 0.384 * v[26];
            y[69] = 0.055 * v[35] + y[117];
            v[33] = v[16] * v[30] + v[22] * v[32] + v[28] * v[33];
            y[118] = v[0] + -0.0825 * v[16] + 0.384 * v[22];
            y[70] = 0.055 * v[33] + y[118];
            y[72] = 0.075 * v[34] + y[116];
            y[73] = 0.075 * v[35] + y[117];
            y[74] = 0.075 * v[33] + y[118];
            v[32] = v[23] + 4.89663865010925e-12 * v[21];
            y[76] = -0.22 * v[32] + y[116];
            v[30] = v[26] + 4.89663865010925e-12 * v[20];
            y[77] = -0.22 * v[30] + y[117];
            v[36] = v[22] + 4.89663865010925e-12 * v[28];
            y[78] = -0.22 * v[36] + y[118];
            y[80] = 0.05 * v[34] + -0.18 * v[32] + y[116];
            y[81] = 0.05 * v[35] + -0.18 * v[30] + y[117];
            y[82] = 0.05 * v[33] + -0.18 * v[36] + y[118];
            v[37] = 4.89663865010925e-12 * v[29];
            v[29] = -1. * v[29];
            v[38] = v[17] * v[31] + v[23] * v[37] + v[21] * v[29];
            y[84] = 0.01 * v[38] + 0.08 * v[34] + -0.14 * v[32] + y[116];
            v[39] = v[25] * v[31] + v[26] * v[37] + v[20] * v[29];
            y[85] = 0.01 * v[39] + 0.08 * v[35] + -0.14 * v[30] + y[117];
            v[29] = v[16] * v[31] + v[22] * v[37] + v[28] * v[29];
            y[86] = 0.01 * v[29] + 0.08 * v[33] + -0.14 * v[36] + y[118];
            y[88] = 0.01 * v[38] + 0.085 * v[34] + -0.11 * v[32] + y[116];
            y[89] = 0.01 * v[39] + 0.085 * v[35] + -0.11 * v[30] + y[117];
            y[90] = 0.01 * v[29] + 0.085 * v[33] + -0.11 * v[36] + y[118];
            y[92] = 0.01 * v[38] + 0.09 * v[34] + -0.08 * v[32] + y[116];
            y[93] = 0.01 * v[39] + 0.09 * v[35] + -0.08 * v[30] + y[117];
            y[94] = 0.01 * v[29] + 0.09 * v[33] + -0.08 * v[36] + y[118];
            y[96] = 0.01 * v[38] + 0.095 * v[34] + -0.05 * v[32] + y[116];
            y[97] = 0.01 * v[39] + 0.095 * v[35] + -0.05 * v[30] + y[117];
            y[98] = 0.01 * v[29] + 0.095 * v[33] + -0.05 * v[36] + y[118];
            y[100] = -0.01 * v[38] + 0.08 * v[34] + -0.14 * v[32] + y[116];
            y[101] = -0.01 * v[39] + 0.08 * v[35] + -0.14 * v[30] + y[117];
            y[102] = -0.01 * v[29] + 0.08 * v[33] + -0.14 * v[36] + y[118];
            y[104] = -0.01 * v[38] + 0.085 * v[34] + -0.11 * v[32] + y[116];
            y[105] = -0.01 * v[39] + 0.085 * v[35] + -0.11 * v[30] + y[117];
            y[106] = -0.01 * v[29] + 0.085 * v[33] + -0.11 * v[36] + y[118];
            y[108] = -0.01 * v[38] + 0.09 * v[34] + -0.08 * v[32] + y[116];
            y[109] = -0.01 * v[39] + 0.09 * v[35] + -0.08 * v[30] + y[117];
            y[110] = -0.01 * v[29] + 0.09 * v[33] + -0.08 * v[36] + y[118];
            y[112] = -0.01 * v[38] + 0.095 * v[34] + -0.05 * v[32] + y[116];
            y[113] = -0.01 * v[39] + 0.095 * v[35] + -0.05 * v[30] + y[117];
            y[114] = -0.01 * v[29] + 0.095 * v[33] + -0.05 * v[36] + y[118];
            v[37] = cos(x[5]);
            v[31] = sin(x[5]);
            v[40] = 4.89663865010925e-12 * v[31];
            v[41] = v[38] * v[37] + v[34] * v[40] + v[32] * v[31];
            v[42] = -v[31];
            v[43] = 4.89663865010925e-12 * v[37];
            v[38] = v[38] * v[42] + v[34] * v[43] + v[32] * v[37];
            y[120] = 0.08 * v[41] + -0.01 * v[38] + y[116];
            v[44] = v[39] * v[37] + v[35] * v[40] + v[30] * v[31];
            v[39] = v[39] * v[42] + v[35] * v[43] + v[30] * v[37];
            y[121] = 0.08 * v[44] + -0.01 * v[39] + y[117];
            v[40] = v[29] * v[37] + v[33] * v[40] + v[36] * v[31];
            v[43] = v[29] * v[42] + v[33] * v[43] + v[36] * v[37];
            y[122] = 0.08 * v[40] + -0.01 * v[43] + y[118];
            y[124] = 0.08 * v[41] + 0.035 * v[38] + y[116];
            y[125] = 0.08 * v[44] + 0.035 * v[39] + y[117];
            y[126] = 0.08 * v[40] + 0.035 * v[43] + y[118];
            v[42] = -1. * v[34] + 4.89663865010925e-12 * v[32];
            v[37] = -1. * v[38] + 4.89663865010925e-12 * v[42];
            v[29] = y[116] + 0.088 * v[41];
            y[128] = 0.07 * v[37] + v[29];
            v[31] = -1. * v[35] + 4.89663865010925e-12 * v[30];
            v[45] = -1. * v[39] + 4.89663865010925e-12 * v[31];
            v[46] = y[117] + 0.088 * v[44];
            y[129] = 0.07 * v[45] + v[46];
            v[47] = -1. * v[33] + 4.89663865010925e-12 * v[36];
            v[48] = -1. * v[43] + 4.89663865010925e-12 * v[47];
            v[49] = y[118] + 0.088 * v[40];
            y[130] = 0.07 * v[48] + v[49];
            v[50] = cos(x[6]);
            v[51] = sin(x[6]);
            v[52] = 4.89663865010925e-12 * v[51];
            v[53] = v[41] * v[50] + v[38] * v[52] + v[42] * v[51];
            v[54] = -v[51];
            v[55] = 4.89663865010925e-12 * v[50];
            v[42] = v[41] * v[54] + v[38] * v[55] + v[42] * v[50];
            y[132] = 0.02 * v[53] + 0.04 * v[42] + 0.08 * v[37] + v[29];
            v[56] = v[44] * v[50] + v[39] * v[52] + v[31] * v[51];
            v[31] = v[44] * v[54] + v[39] * v[55] + v[31] * v[50];
            y[133] = 0.02 * v[56] + 0.04 * v[31] + 0.08 * v[45] + v[46];
            v[52] = v[40] * v[50] + v[43] * v[52] + v[47] * v[51];
            v[55] = v[40] * v[54] + v[43] * v[55] + v[47] * v[50];
            y[134] = 0.02 * v[52] + 0.04 * v[55] + 0.08 * v[48] + v[49];
            y[136] = 0.04 * v[53] + 0.02 * v[42] + 0.08 * v[37] + v[29];
            y[137] = 0.04 * v[56] + 0.02 * v[31] + 0.08 * v[45] + v[46];
            y[138] = 0.04 * v[52] + 0.02 * v[55] + 0.08 * v[48] + v[49];
            y[140] = 0.04 * v[53] + 0.06 * v[42] + 0.085 * v[37] + v[29];
            y[141] = 0.04 * v[56] + 0.06 * v[31] + 0.085 * v[45] + v[46];
            y[142] = 0.04 * v[52] + 0.06 * v[55] + 0.085 * v[48] + v[49];
            y[144] = 0.06 * v[53] + 0.04 * v[42] + 0.085 * v[37] + v[29];
            y[145] = 0.06 * v[56] + 0.04 * v[31] + 0.085 * v[45] + v[46];
            y[146] = 0.06 * v[52] + 0.04 * v[55] + 0.085 * v[48] + v[49];
            y[148] = -0.0530330085889673 * v[53] + -0.0530330085890148 * v[42] + 0.117 * v[37] + v[29];
            y[149] = -0.0530330085889673 * v[56] + -0.0530330085890148 * v[31] + 0.117 * v[45] + v[46];
            y[150] = -0.0530330085889673 * v[52] + -0.0530330085890148 * v[55] + 0.117 * v[48] + v[49];
            y[152] = -0.0318198051533804 * v[53] + -0.0318198051534089 * v[42] + 0.117 * v[37] + v[29];
            y[153] = -0.0318198051533804 * v[56] + -0.0318198051534089 * v[31] + 0.117 * v[45] + v[46];
            y[154] = -0.0318198051533804 * v[52] + -0.0318198051534089 * v[55] + 0.117 * v[48] + v[49];
            y[156] = -0.0106066017177935 * v[53] + -0.010606601717803 * v[42] + 0.117 * v[37] + v[29];
            y[157] = -0.0106066017177935 * v[56] + -0.010606601717803 * v[31] + 0.117 * v[45] + v[46];
            y[158] = -0.0106066017177935 * v[52] + -0.010606601717803 * v[55] + 0.117 * v[48] + v[49];
            y[160] = 0.0106066017177935 * v[53] + 0.010606601717803 * v[42] + 0.117 * v[37] + v[29];
            y[161] = 0.0106066017177935 * v[56] + 0.010606601717803 * v[31] + 0.117 * v[45] + v[46];
            y[162] = 0.0106066017177935 * v[52] + 0.010606601717803 * v[55] + 0.117 * v[48] + v[49];
            y[164] = 0.0318198051533804 * v[53] + 0.0318198051534089 * v[42] + 0.117 * v[37] + v[29];
            y[165] = 0.0318198051533804 * v[56] + 0.0318198051534089 * v[31] + 0.117 * v[45] + v[46];
            y[166] = 0.0318198051533804 * v[52] + 0.0318198051534089 * v[55] + 0.117 * v[48] + v[49];
            y[168] = 0.0530330085889673 * v[53] + 0.0530330085890148 * v[42] + 0.117 * v[37] + v[29];
            y[169] = 0.0530330085889673 * v[56] + 0.0530330085890148 * v[31] + 0.117 * v[45] + v[46];
            y[170] = 0.0530330085889673 * v[52] + 0.0530330085890148 * v[55] + 0.117 * v[48] + v[49];
            y[172] = -0.0530330085889673 * v[53] + -0.0530330085890148 * v[42] + 0.137 * v[37] + v[29];
            y[173] = -0.0530330085889673 * v[56] + -0.0530330085890148 * v[31] + 0.137 * v[45] + v[46];
            y[174] = -0.0530330085889673 * v[52] + -0.0530330085890148 * v[55] + 0.137 * v[48] + v[49];
            y[176] = -0.0318198051533804 * v[53] + -0.0318198051534089 * v[42] + 0.137 * v[37] + v[29];
            y[177] = -0.0318198051533804 * v[56] + -0.0318198051534089 * v[31] + 0.137 * v[45] + v[46];
            y[178] = -0.0318198051533804 * v[52] + -0.0318198051534089 * v[55] + 0.137 * v[48] + v[49];
            y[180] = -0.0106066017177935 * v[53] + -0.010606601717803 * v[42] + 0.137 * v[37] + v[29];
            y[181] = -0.0106066017177935 * v[56] + -0.010606601717803 * v[31] + 0.137 * v[45] + v[46];
            y[182] = -0.0106066017177935 * v[52] + -0.010606601717803 * v[55] + 0.137 * v[48] + v[49];
            y[184] = 0.0106066017177935 * v[53] + 0.010606601717803 * v[42] + 0.137 * v[37] + v[29];
            y[185] = 0.0106066017177935 * v[56] + 0.010606601717803 * v[31] + 0.137 * v[45] + v[46];
            y[186] = 0.0106066017177935 * v[52] + 0.010606601717803 * v[55] + 0.137 * v[48] + v[49];
            y[188] = 0.0318198051533804 * v[53] + 0.0318198051534089 * v[42] + 0.137 * v[37] + v[29];
            y[189] = 0.0318198051533804 * v[56] + 0.0318198051534089 * v[31] + 0.137 * v[45] + v[46];
            y[190] = 0.0318198051533804 * v[52] + 0.0318198051534089 * v[55] + 0.137 * v[48] + v[49];
            y[192] = 0.0530330085889673 * v[53] + 0.0530330085890148 * v[42] + 0.137 * v[37] + v[29];
            y[193] = 0.0530330085889673 * v[56] + 0.0530330085890148 * v[31] + 0.137 * v[45] + v[46];
            y[194] = 0.0530330085889673 * v[52] + 0.0530330085890148 * v[55] + 0.137 * v[48] + v[49];
            y[196] = -0.0530330085889673 * v[53] + -0.0530330085890148 * v[42] + 0.157 * v[37] + v[29];
            y[197] = -0.0530330085889673 * v[56] + -0.0530330085890148 * v[31] + 0.157 * v[45] + v[46];
            y[198] = -0.0530330085889673 * v[52] + -0.0530330085890148 * v[55] + 0.157 * v[48] + v[49];
            y[200] = -0.0318198051533804 * v[53] + -0.0318198051534089 * v[42] + 0.157 * v[37] + v[29];
            y[201] = -0.0318198051533804 * v[56] + -0.0318198051534089 * v[31] + 0.157 * v[45] + v[46];
            y[202] = -0.0318198051533804 * v[52] + -0.0318198051534089 * v[55] + 0.157 * v[48] + v[49];
            y[204] = -0.0106066017177935 * v[53] + -0.010606601717803 * v[42] + 0.157 * v[37] + v[29];
            y[205] = -0.0106066017177935 * v[56] + -0.010606601717803 * v[31] + 0.157 * v[45] + v[46];
            y[206] = -0.0106066017177935 * v[52] + -0.010606601717803 * v[55] + 0.157 * v[48] + v[49];
            y[208] = 0.0106066017177935 * v[53] + 0.010606601717803 * v[42] + 0.157 * v[37] + v[29];
            y[209] = 0.0106066017177935 * v[56] + 0.010606601717803 * v[31] + 0.157 * v[45] + v[46];
            y[210] = 0.0106066017177935 * v[52] + 0.010606601717803 * v[55] + 0.157 * v[48] + v[49];
            y[212] = 0.0318198051533804 * v[53] + 0.0318198051534089 * v[42] + 0.157 * v[37] + v[29];
            y[213] = 0.0318198051533804 * v[56] + 0.0318198051534089 * v[31] + 0.157 * v[45] + v[46];
            y[214] = 0.0318198051533804 * v[52] + 0.0318198051534089 * v[55] + 0.157 * v[48] + v[49];
            y[216] = 0.0530330085889673 * v[53] + 0.0530330085890148 * v[42] + 0.157 * v[37] + v[29];
            y[217] = 0.0530330085889673 * v[56] + 0.0530330085890148 * v[31] + 0.157 * v[45] + v[46];
            y[218] = 0.0530330085889673 * v[52] + 0.0530330085890148 * v[55] + 0.157 * v[48] + v[49];
            y[220] = 0.0565685424948984 * v[53] + 0.0565685424949492 * v[42] + 0.1874 * v[37] + v[29];
            y[221] = 0.0565685424948984 * v[56] + 0.0565685424949492 * v[31] + 0.1874 * v[45] + v[46];
            y[222] = 0.0565685424948984 * v[52] + 0.0565685424949492 * v[55] + 0.1874 * v[48] + v[49];
            y[224] = 0.0516187950265948 * v[53] + 0.0516187950266411 * v[42] + 0.2094 * v[37] + v[29];
            y[225] = 0.0516187950265948 * v[56] + 0.0516187950266411 * v[31] + 0.2094 * v[45] + v[46];
            y[226] = 0.0516187950265948 * v[52] + 0.0516187950266411 * v[55] + 0.2094 * v[48] + v[49];
            y[228] = -0.0565685424948984 * v[53] + -0.0565685424949492 * v[42] + 0.1874 * v[37] + v[29];
            y[229] = -0.0565685424948984 * v[56] + -0.0565685424949492 * v[31] + 0.1874 * v[45] + v[46];
            y[230] = -0.0565685424948984 * v[52] + -0.0565685424949492 * v[55] + 0.1874 * v[48] + v[49];
            y[232] = -0.0516187950265948 * v[53] + -0.0516187950266411 * v[42] + 0.2094 * v[37] + v[29];
            y[233] = -0.0516187950265948 * v[56] + -0.0516187950266411 * v[31] + 0.2094 * v[45] + v[46];
            y[234] = -0.0516187950265948 * v[52] + -0.0516187950266411 * v[55] + 0.2094 * v[48] + v[49];
            y[240] = -0.0399999991059303 * v[1];
            y[241] = -0.0399999991059303 * v[2];
            y[244] = -0.0850000008940697 * v[7] + 0.0399999991059303 * v[1];
            y[245] = -0.0850000008940697 * v[6] + 0.0399999991059303 * v[2];
            y[246] = 0.333 + 1.95865541626434e-13 + -0.0850000008940697 * v[4];
            y[248] =
                0.0385857857763767 * v[19] + 0.0289393402636051 * v[15] + -0.0517677664756775 * v[8] + v[9];
            y[249] =
                0.0385857857763767 * v[5] + 0.0289393402636051 * v[14] + -0.0517677664756775 * v[10] + v[11];
            y[250] =
                0.0385857857763767 * v[18] + 0.0289393402636051 * v[3] + -0.0517677664756775 * v[12] + v[13];
            y[252] =
                -0.041449997574091 * v[17] + 0.0492218732833862 * v[23] + 0.0289125014096498 * v[21] + v[24];
            y[253] =
                -0.041449997574091 * v[25] + 0.0492218732833862 * v[26] + 0.0289125014096498 * v[20] + v[27];
            y[254] =
                -0.041449997574091 * v[16] + 0.0492218732833862 * v[22] + 0.0289125014096498 * v[28] + v[0];
            y[256] = 0.0375000014901161 * v[34] + -0.109999999403954 * v[32] + y[116];
            y[257] = 0.0375000014901161 * v[35] + -0.109999999403954 * v[30] + y[117];
            y[258] = 0.0375000014901161 * v[33] + -0.109999999403954 * v[36] + y[118];
            y[260] = 0.0424309633672237 * v[41] + 0.0144476993009448 * v[38] + y[116];
            y[261] = 0.0424309633672237 * v[44] + 0.0144476993009448 * v[39] + y[117];
            y[262] = 0.0424309633672237 * v[40] + 0.0144476993009448 * v[43] + y[118];
            y[264] =
                0.0153005504980683 * v[53] + 0.0153005504980683 * v[42] + 0.0745901614427567 * v[37] + v[29];
            y[265] =
                0.0153005504980683 * v[56] + 0.0153005504980683 * v[31] + 0.0745901614427567 * v[45] + v[46];
            y[266] =
                0.0153005504980683 * v[52] + 0.0153005504980683 * v[55] + 0.0745901614427567 * v[48] + v[49];
            y[268] = -5.20417042793042e-18 * v[53] + -2.16840434497101e-18 * v[42] +
                     0.129201397299767 * v[37] + v[29];
            y[269] = -5.20417042793042e-18 * v[56] + -2.16840434497101e-18 * v[31] +
                     0.129201397299767 * v[45] + v[46];
            y[270] = -5.20417042793042e-18 * v[52] + -2.16840434497101e-18 * v[55] +
                     0.129201397299767 * v[48] + v[49];
            y[272] =
                0.0540936700999737 * v[53] + 0.0540936700999737 * v[42] + 0.198400005698204 * v[37] + v[29];
            y[273] =
                0.0540936700999737 * v[56] + 0.0540936700999737 * v[31] + 0.198400005698204 * v[45] + v[46];
            y[274] =
                0.0540936700999737 * v[52] + 0.0540936700999737 * v[55] + 0.198400005698204 * v[48] + v[49];
            y[276] =
                -0.0540936700999737 * v[53] + -0.0540936700999737 * v[42] + 0.198400005698204 * v[37] + v[29];
            y[277] =
                -0.0540936700999737 * v[56] + -0.0540936700999737 * v[31] + 0.198400005698204 * v[45] + v[46];
            y[278] =
                -0.0540936700999737 * v[52] + -0.0540936700999737 * v[55] + 0.198400005698204 * v[48] + v[49];
            // dependent variables without operations
            y[0] = 0.;
            y[1] = 0.;
            y[2] = 0.05;
            y[3] = 0.0799999982118607;
            y[6] = 0.333;
            y[7] = 0.0599999986588955;
            y[10] = 0.333;
            y[11] = 0.0599999986588955;
            y[12] = 0.;
            y[13] = 0.;
            y[14] = 0.213;
            y[15] = 0.0599999986588955;
            y[16] = 0.;
            y[17] = 0.;
            y[18] = 0.163;
            y[19] = 0.0599999986588955;
            y[22] = 0.333000000000147;
            y[23] = 0.0599999986588955;
            y[26] = 0.333000000000392;
            y[27] = 0.0599999986588955;
            y[31] = 0.0599999986588955;
            y[35] = 0.0599999986588955;
            y[39] = 0.0599999986588955;
            y[43] = 0.0500000007450581;
            y[47] = 0.0549999997019768;
            y[51] = 0.0549999997019768;
            y[55] = 0.0599999986588955;
            y[59] = 0.0549999997019768;
            y[63] = 0.0549999997019768;
            y[67] = 0.0549999997019768;
            y[71] = 0.0599999986588955;
            y[75] = 0.0599999986588955;
            y[79] = 0.0599999986588955;
            y[83] = 0.0500000007450581;
            y[87] = 0.025000000372529;
            y[91] = 0.025000000372529;
            y[95] = 0.025000000372529;
            y[99] = 0.025000000372529;
            y[103] = 0.025000000372529;
            y[107] = 0.025000000372529;
            y[111] = 0.025000000372529;
            y[115] = 0.025000000372529;
            y[119] = 0.0500000007450581;
            y[123] = 0.0500000007450581;
            y[127] = 0.0520000010728836;
            y[131] = 0.0500000007450581;
            y[135] = 0.025000000372529;
            y[139] = 0.025000000372529;
            y[143] = 0.0199999995529652;
            y[147] = 0.0199999995529652;
            y[151] = 0.0280000008642673;
            y[155] = 0.0280000008642673;
            y[159] = 0.0280000008642673;
            y[163] = 0.0280000008642673;
            y[167] = 0.0280000008642673;
            y[171] = 0.0280000008642673;
            y[175] = 0.0260000005364418;
            y[179] = 0.0260000005364418;
            y[183] = 0.0260000005364418;
            y[187] = 0.0260000005364418;
            y[191] = 0.0260000005364418;
            y[195] = 0.0260000005364418;
            y[199] = 0.0240000002086163;
            y[203] = 0.0240000002086163;
            y[207] = 0.0240000002086163;
            y[211] = 0.0240000002086163;
            y[215] = 0.0240000002086163;
            y[219] = 0.0240000002086163;
            y[223] = 0.0120000001043081;
            y[227] = 0.0120000001043081;
            y[231] = 0.0120000001043081;
            y[235] = 0.0120000001043081;
            y[236] = 0.;
            y[237] = 0.;
            y[238] = 0.0500000007450581;
            y[239] = 0.0799999982118607;
            y[242] = 0.24799999910593;
            y[243] = 0.153941467404366;
            y[247] = 0.153941467404366;
            y[251] = 0.128210678696632;
            y[255] = 0.126465573906898;
            y[259] = 0.176216393709183;
            y[263] = 0.0948232412338257;
            y[267] = 0.0721197500824928;
            y[271] = 0.103986009955406;
            y[275] = 0.0235433969646692;
            y[279] = 0.0235433969646692;

            //
            // environment vs. robot collisions
            //

            // panda_rightfinger
            if (sphere_environment_in_collision(environment, y[276], y[277], y[278], y[279]))
            {
                if (sphere_environment_in_collision(environment, y[228], y[229], y[230], y[231]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[232], y[233], y[234], y[235]))
                {
                    return false;
                }
            }

            //
            // environment vs. robot collisions
            //

            // panda_leftfinger
            if (sphere_environment_in_collision(environment, y[272], y[273], y[274], y[275]))
            {
                if (sphere_environment_in_collision(environment, y[220], y[221], y[222], y[223]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[224], y[225], y[226], y[227]))
                {
                    return false;
                }
            }

            //
            // environment vs. robot collisions
            //

            // panda_hand
            if (sphere_environment_in_collision(environment, y[268], y[269], y[270], y[271]))
            {
                if (sphere_environment_in_collision(environment, y[148], y[149], y[150], y[151]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[152], y[153], y[154], y[155]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[156], y[157], y[158], y[159]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[160], y[161], y[162], y[163]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[164], y[165], y[166], y[167]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[168], y[169], y[170], y[171]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[172], y[173], y[174], y[175]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[176], y[177], y[178], y[179]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[180], y[181], y[182], y[183]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[184], y[185], y[186], y[187]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[188], y[189], y[190], y[191]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[192], y[193], y[194], y[195]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[196], y[197], y[198], y[199]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[200], y[201], y[202], y[203]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[204], y[205], y[206], y[207]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[208], y[209], y[210], y[211]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[212], y[213], y[214], y[215]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[216], y[217], y[218], y[219]))
                {
                    return false;
                }
            }

            //
            // environment vs. robot collisions
            //

            // panda_link7
            if (sphere_environment_in_collision(environment, y[264], y[265], y[266], y[267]))
            {
                if (sphere_environment_in_collision(environment, y[128], y[129], y[130], y[131]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[132], y[133], y[134], y[135]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[136], y[137], y[138], y[139]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[140], y[141], y[142], y[143]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[144], y[145], y[146], y[147]))
                {
                    return false;
                }
            }

            //
            // environment vs. robot collisions
            //

            // panda_link6
            if (sphere_environment_in_collision(environment, y[260], y[261], y[262], y[263]))
            {
                if (sphere_environment_in_collision(environment, y[116], y[117], y[118], y[119]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[120], y[121], y[122], y[123]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[124], y[125], y[126], y[127]))
                {
                    return false;
                }
            }

            //
            // environment vs. robot collisions
            //

            // panda_link5
            if (sphere_environment_in_collision(environment, y[256], y[257], y[258], y[259]))
            {
                if (sphere_environment_in_collision(environment, y[68], y[69], y[70], y[71]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[72], y[73], y[74], y[75]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[76], y[77], y[78], y[79]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[80], y[81], y[82], y[83]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[84], y[85], y[86], y[87]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[88], y[89], y[90], y[91]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[92], y[93], y[94], y[95]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[96], y[97], y[98], y[99]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[100], y[101], y[102], y[103]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[104], y[105], y[106], y[107]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[108], y[109], y[110], y[111]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[112], y[113], y[114], y[115]))
                {
                    return false;
                }
            }

            //
            // environment vs. robot collisions
            //

            // panda_link4
            if (sphere_environment_in_collision(environment, y[252], y[253], y[254], y[255]))
            {
                if (sphere_environment_in_collision(environment, y[52], y[53], y[54], y[55]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[56], y[57], y[58], y[59]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[60], y[61], y[62], y[63]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[64], y[65], y[66], y[67]))
                {
                    return false;
                }
            }

            //
            // environment vs. robot collisions
            //

            // panda_link3
            if (sphere_environment_in_collision(environment, y[248], y[249], y[250], y[251]))
            {
                if (sphere_environment_in_collision(environment, y[36], y[37], y[38], y[39]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[40], y[41], y[42], y[43]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[44], y[45], y[46], y[47]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[48], y[49], y[50], y[51]))
                {
                    return false;
                }
            }

            //
            // environment vs. robot collisions
            //

            // panda_link2
            if (sphere_environment_in_collision(environment, y[244], y[245], y[246], y[247]))
            {
                if (sphere_environment_in_collision(environment, y[20], y[21], y[22], y[23]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[24], y[25], y[26], y[27]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[28], y[29], y[30], y[31]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[32], y[33], y[34], y[35]))
                {
                    return false;
                }
            }

            //
            // environment vs. robot collisions
            //

            // panda_link1
            if (sphere_environment_in_collision(environment, y[240], y[241], y[242], y[243]))
            {
                if (sphere_environment_in_collision(environment, y[4], y[5], y[6], y[7]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[8], y[9], y[10], y[11]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[12], y[13], y[14], y[15]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[16], y[17], y[18], y[19]))
                {
                    return false;
                }
            }

            //
            // environment vs. robot collisions
            //

            // panda_link0
            if (sphere_environment_in_collision(environment, y[236], y[237], y[238], y[239]))
            {
                if (sphere_environment_in_collision(environment, y[0], y[1], y[2], y[3]))
                {
                    return false;
                }
            }

            //
            // robot self-collisions
            //

            // panda_link0 vs. panda_link5
            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[236], y[237], y[238], y[239], y[256], y[257], y[258], y[259]))
            {
                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[68], y[69], y[70], y[71]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[72], y[73], y[74], y[75]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[76], y[77], y[78], y[79]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[80], y[81], y[82], y[83]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[84], y[85], y[86], y[87]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[88], y[89], y[90], y[91]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[92], y[93], y[94], y[95]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[96], y[97], y[98], y[99]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[100], y[101], y[102], y[103]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[104], y[105], y[106], y[107]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[108], y[109], y[110], y[111]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[112], y[113], y[114], y[115]))
                {
                    return false;
                }
            }

            // panda_link0 vs. panda_link6
            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[236], y[237], y[238], y[239], y[260], y[261], y[262], y[263]))
            {
                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[116], y[117], y[118], y[119]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[120], y[121], y[122], y[123]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[124], y[125], y[126], y[127]))
                {
                    return false;
                }
            }

            // panda_link0 vs. panda_link7
            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[236], y[237], y[238], y[239], y[264], y[265], y[266], y[267]))
            {
                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[128], y[129], y[130], y[131]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[132], y[133], y[134], y[135]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[136], y[137], y[138], y[139]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[140], y[141], y[142], y[143]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[144], y[145], y[146], y[147]))
                {
                    return false;
                }
            }

            // panda_link0 vs. panda_hand
            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[236], y[237], y[238], y[239], y[268], y[269], y[270], y[271]))
            {
                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[148], y[149], y[150], y[151]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[152], y[153], y[154], y[155]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[156], y[157], y[158], y[159]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[160], y[161], y[162], y[163]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[164], y[165], y[166], y[167]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[168], y[169], y[170], y[171]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[172], y[173], y[174], y[175]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[176], y[177], y[178], y[179]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[180], y[181], y[182], y[183]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[184], y[185], y[186], y[187]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[188], y[189], y[190], y[191]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[192], y[193], y[194], y[195]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[196], y[197], y[198], y[199]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[200], y[201], y[202], y[203]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[204], y[205], y[206], y[207]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[208], y[209], y[210], y[211]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[212], y[213], y[214], y[215]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[216], y[217], y[218], y[219]))
                {
                    return false;
                }
            }

            // panda_link0 vs. panda_leftfinger
            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[236], y[237], y[238], y[239], y[272], y[273], y[274], y[275]))
            {
                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[220], y[221], y[222], y[223]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[224], y[225], y[226], y[227]))
                {
                    return false;
                }
            }

            // panda_link0 vs. panda_rightfinger
            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[236], y[237], y[238], y[239], y[276], y[277], y[278], y[279]))
            {
                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[228], y[229], y[230], y[231]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[232], y[233], y[234], y[235]))
                {
                    return false;
                }
            }

            // panda_link1 vs. panda_link5
            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[240], y[241], y[242], y[243], y[256], y[257], y[258], y[259]))
            {
                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[68], y[69], y[70], y[71]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[72], y[73], y[74], y[75]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[76], y[77], y[78], y[79]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[80], y[81], y[82], y[83]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[84], y[85], y[86], y[87]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[88], y[89], y[90], y[91]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[92], y[93], y[94], y[95]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[96], y[97], y[98], y[99]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[100], y[101], y[102], y[103]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[104], y[105], y[106], y[107]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[108], y[109], y[110], y[111]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[112], y[113], y[114], y[115]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[68], y[69], y[70], y[71]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[72], y[73], y[74], y[75]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[76], y[77], y[78], y[79]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[80], y[81], y[82], y[83]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[84], y[85], y[86], y[87]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[88], y[89], y[90], y[91]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[92], y[93], y[94], y[95]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[96], y[97], y[98], y[99]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[100], y[101], y[102], y[103]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[104], y[105], y[106], y[107]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[108], y[109], y[110], y[111]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[112], y[113], y[114], y[115]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[68], y[69], y[70], y[71]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[72], y[73], y[74], y[75]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[76], y[77], y[78], y[79]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[80], y[81], y[82], y[83]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[84], y[85], y[86], y[87]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[88], y[89], y[90], y[91]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[92], y[93], y[94], y[95]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[96], y[97], y[98], y[99]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[100], y[101], y[102], y[103]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[104], y[105], y[106], y[107]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[108], y[109], y[110], y[111]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[112], y[113], y[114], y[115]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[68], y[69], y[70], y[71]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[72], y[73], y[74], y[75]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[76], y[77], y[78], y[79]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[80], y[81], y[82], y[83]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[84], y[85], y[86], y[87]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[88], y[89], y[90], y[91]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[92], y[93], y[94], y[95]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[96], y[97], y[98], y[99]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[100], y[101], y[102], y[103]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[104], y[105], y[106], y[107]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[108], y[109], y[110], y[111]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[112], y[113], y[114], y[115]))
                {
                    return false;
                }
            }

            // panda_link1 vs. panda_link6
            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[240], y[241], y[242], y[243], y[260], y[261], y[262], y[263]))
            {
                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[116], y[117], y[118], y[119]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[120], y[121], y[122], y[123]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[124], y[125], y[126], y[127]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[116], y[117], y[118], y[119]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[120], y[121], y[122], y[123]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[124], y[125], y[126], y[127]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[116], y[117], y[118], y[119]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[120], y[121], y[122], y[123]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[124], y[125], y[126], y[127]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[116], y[117], y[118], y[119]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[120], y[121], y[122], y[123]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[124], y[125], y[126], y[127]))
                {
                    return false;
                }
            }

            // panda_link1 vs. panda_link7
            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[240], y[241], y[242], y[243], y[264], y[265], y[266], y[267]))
            {
                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[128], y[129], y[130], y[131]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[132], y[133], y[134], y[135]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[136], y[137], y[138], y[139]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[140], y[141], y[142], y[143]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[144], y[145], y[146], y[147]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[128], y[129], y[130], y[131]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[132], y[133], y[134], y[135]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[136], y[137], y[138], y[139]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[140], y[141], y[142], y[143]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[144], y[145], y[146], y[147]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[128], y[129], y[130], y[131]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[132], y[133], y[134], y[135]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[136], y[137], y[138], y[139]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[140], y[141], y[142], y[143]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[144], y[145], y[146], y[147]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[128], y[129], y[130], y[131]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[132], y[133], y[134], y[135]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[136], y[137], y[138], y[139]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[140], y[141], y[142], y[143]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[144], y[145], y[146], y[147]))
                {
                    return false;
                }
            }

            // panda_link1 vs. panda_hand
            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[240], y[241], y[242], y[243], y[268], y[269], y[270], y[271]))
            {
                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[148], y[149], y[150], y[151]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[152], y[153], y[154], y[155]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[156], y[157], y[158], y[159]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[160], y[161], y[162], y[163]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[164], y[165], y[166], y[167]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[168], y[169], y[170], y[171]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[172], y[173], y[174], y[175]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[176], y[177], y[178], y[179]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[180], y[181], y[182], y[183]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[184], y[185], y[186], y[187]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[188], y[189], y[190], y[191]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[192], y[193], y[194], y[195]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[196], y[197], y[198], y[199]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[200], y[201], y[202], y[203]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[204], y[205], y[206], y[207]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[208], y[209], y[210], y[211]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[212], y[213], y[214], y[215]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[216], y[217], y[218], y[219]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[148], y[149], y[150], y[151]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[152], y[153], y[154], y[155]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[156], y[157], y[158], y[159]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[160], y[161], y[162], y[163]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[164], y[165], y[166], y[167]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[168], y[169], y[170], y[171]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[172], y[173], y[174], y[175]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[176], y[177], y[178], y[179]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[180], y[181], y[182], y[183]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[184], y[185], y[186], y[187]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[188], y[189], y[190], y[191]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[192], y[193], y[194], y[195]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[196], y[197], y[198], y[199]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[200], y[201], y[202], y[203]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[204], y[205], y[206], y[207]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[208], y[209], y[210], y[211]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[212], y[213], y[214], y[215]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[216], y[217], y[218], y[219]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[148], y[149], y[150], y[151]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[152], y[153], y[154], y[155]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[156], y[157], y[158], y[159]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[160], y[161], y[162], y[163]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[164], y[165], y[166], y[167]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[168], y[169], y[170], y[171]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[172], y[173], y[174], y[175]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[176], y[177], y[178], y[179]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[180], y[181], y[182], y[183]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[184], y[185], y[186], y[187]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[188], y[189], y[190], y[191]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[192], y[193], y[194], y[195]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[196], y[197], y[198], y[199]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[200], y[201], y[202], y[203]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[204], y[205], y[206], y[207]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[208], y[209], y[210], y[211]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[212], y[213], y[214], y[215]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[216], y[217], y[218], y[219]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[148], y[149], y[150], y[151]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[152], y[153], y[154], y[155]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[156], y[157], y[158], y[159]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[160], y[161], y[162], y[163]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[164], y[165], y[166], y[167]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[168], y[169], y[170], y[171]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[172], y[173], y[174], y[175]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[176], y[177], y[178], y[179]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[180], y[181], y[182], y[183]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[184], y[185], y[186], y[187]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[188], y[189], y[190], y[191]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[192], y[193], y[194], y[195]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[196], y[197], y[198], y[199]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[200], y[201], y[202], y[203]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[204], y[205], y[206], y[207]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[208], y[209], y[210], y[211]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[212], y[213], y[214], y[215]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[216], y[217], y[218], y[219]))
                {
                    return false;
                }
            }

            // panda_link1 vs. panda_leftfinger
            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[240], y[241], y[242], y[243], y[272], y[273], y[274], y[275]))
            {
                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[220], y[221], y[222], y[223]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[224], y[225], y[226], y[227]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[220], y[221], y[222], y[223]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[224], y[225], y[226], y[227]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[220], y[221], y[222], y[223]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[224], y[225], y[226], y[227]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[220], y[221], y[222], y[223]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[224], y[225], y[226], y[227]))
                {
                    return false;
                }
            }

            // panda_link1 vs. panda_rightfinger
            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[240], y[241], y[242], y[243], y[276], y[277], y[278], y[279]))
            {
                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[228], y[229], y[230], y[231]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[232], y[233], y[234], y[235]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[228], y[229], y[230], y[231]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[232], y[233], y[234], y[235]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[228], y[229], y[230], y[231]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[232], y[233], y[234], y[235]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[228], y[229], y[230], y[231]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[232], y[233], y[234], y[235]))
                {
                    return false;
                }
            }

            // panda_link2 vs. panda_link5
            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[244], y[245], y[246], y[247], y[256], y[257], y[258], y[259]))
            {
                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[68], y[69], y[70], y[71]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[72], y[73], y[74], y[75]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[76], y[77], y[78], y[79]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[80], y[81], y[82], y[83]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[84], y[85], y[86], y[87]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[88], y[89], y[90], y[91]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[92], y[93], y[94], y[95]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[96], y[97], y[98], y[99]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[100], y[101], y[102], y[103]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[104], y[105], y[106], y[107]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[108], y[109], y[110], y[111]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[112], y[113], y[114], y[115]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[68], y[69], y[70], y[71]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[72], y[73], y[74], y[75]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[76], y[77], y[78], y[79]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[80], y[81], y[82], y[83]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[84], y[85], y[86], y[87]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[88], y[89], y[90], y[91]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[92], y[93], y[94], y[95]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[96], y[97], y[98], y[99]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[100], y[101], y[102], y[103]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[104], y[105], y[106], y[107]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[108], y[109], y[110], y[111]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[112], y[113], y[114], y[115]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[68], y[69], y[70], y[71]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[72], y[73], y[74], y[75]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[76], y[77], y[78], y[79]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[80], y[81], y[82], y[83]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[84], y[85], y[86], y[87]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[88], y[89], y[90], y[91]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[92], y[93], y[94], y[95]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[96], y[97], y[98], y[99]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[100], y[101], y[102], y[103]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[104], y[105], y[106], y[107]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[108], y[109], y[110], y[111]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[112], y[113], y[114], y[115]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[68], y[69], y[70], y[71]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[72], y[73], y[74], y[75]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[76], y[77], y[78], y[79]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[80], y[81], y[82], y[83]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[84], y[85], y[86], y[87]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[88], y[89], y[90], y[91]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[92], y[93], y[94], y[95]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[96], y[97], y[98], y[99]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[100], y[101], y[102], y[103]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[104], y[105], y[106], y[107]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[108], y[109], y[110], y[111]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[112], y[113], y[114], y[115]))
                {
                    return false;
                }
            }

            // panda_link2 vs. panda_link7
            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[244], y[245], y[246], y[247], y[264], y[265], y[266], y[267]))
            {
                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[128], y[129], y[130], y[131]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[132], y[133], y[134], y[135]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[136], y[137], y[138], y[139]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[140], y[141], y[142], y[143]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[144], y[145], y[146], y[147]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[128], y[129], y[130], y[131]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[132], y[133], y[134], y[135]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[136], y[137], y[138], y[139]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[140], y[141], y[142], y[143]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[144], y[145], y[146], y[147]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[128], y[129], y[130], y[131]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[132], y[133], y[134], y[135]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[136], y[137], y[138], y[139]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[140], y[141], y[142], y[143]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[144], y[145], y[146], y[147]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[128], y[129], y[130], y[131]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[132], y[133], y[134], y[135]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[136], y[137], y[138], y[139]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[140], y[141], y[142], y[143]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[144], y[145], y[146], y[147]))
                {
                    return false;
                }
            }

            // panda_link2 vs. panda_hand
            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[244], y[245], y[246], y[247], y[268], y[269], y[270], y[271]))
            {
                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[148], y[149], y[150], y[151]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[152], y[153], y[154], y[155]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[156], y[157], y[158], y[159]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[160], y[161], y[162], y[163]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[164], y[165], y[166], y[167]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[168], y[169], y[170], y[171]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[172], y[173], y[174], y[175]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[176], y[177], y[178], y[179]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[180], y[181], y[182], y[183]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[184], y[185], y[186], y[187]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[188], y[189], y[190], y[191]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[192], y[193], y[194], y[195]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[196], y[197], y[198], y[199]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[200], y[201], y[202], y[203]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[204], y[205], y[206], y[207]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[208], y[209], y[210], y[211]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[212], y[213], y[214], y[215]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[216], y[217], y[218], y[219]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[148], y[149], y[150], y[151]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[152], y[153], y[154], y[155]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[156], y[157], y[158], y[159]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[160], y[161], y[162], y[163]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[164], y[165], y[166], y[167]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[168], y[169], y[170], y[171]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[172], y[173], y[174], y[175]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[176], y[177], y[178], y[179]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[180], y[181], y[182], y[183]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[184], y[185], y[186], y[187]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[188], y[189], y[190], y[191]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[192], y[193], y[194], y[195]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[196], y[197], y[198], y[199]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[200], y[201], y[202], y[203]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[204], y[205], y[206], y[207]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[208], y[209], y[210], y[211]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[212], y[213], y[214], y[215]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[216], y[217], y[218], y[219]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[148], y[149], y[150], y[151]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[152], y[153], y[154], y[155]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[156], y[157], y[158], y[159]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[160], y[161], y[162], y[163]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[164], y[165], y[166], y[167]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[168], y[169], y[170], y[171]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[172], y[173], y[174], y[175]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[176], y[177], y[178], y[179]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[180], y[181], y[182], y[183]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[184], y[185], y[186], y[187]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[188], y[189], y[190], y[191]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[192], y[193], y[194], y[195]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[196], y[197], y[198], y[199]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[200], y[201], y[202], y[203]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[204], y[205], y[206], y[207]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[208], y[209], y[210], y[211]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[212], y[213], y[214], y[215]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[216], y[217], y[218], y[219]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[148], y[149], y[150], y[151]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[152], y[153], y[154], y[155]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[156], y[157], y[158], y[159]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[160], y[161], y[162], y[163]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[164], y[165], y[166], y[167]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[168], y[169], y[170], y[171]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[172], y[173], y[174], y[175]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[176], y[177], y[178], y[179]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[180], y[181], y[182], y[183]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[184], y[185], y[186], y[187]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[188], y[189], y[190], y[191]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[192], y[193], y[194], y[195]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[196], y[197], y[198], y[199]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[200], y[201], y[202], y[203]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[204], y[205], y[206], y[207]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[208], y[209], y[210], y[211]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[212], y[213], y[214], y[215]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[216], y[217], y[218], y[219]))
                {
                    return false;
                }
            }

            // panda_link2 vs. panda_leftfinger
            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[244], y[245], y[246], y[247], y[272], y[273], y[274], y[275]))
            {
                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[220], y[221], y[222], y[223]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[224], y[225], y[226], y[227]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[220], y[221], y[222], y[223]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[224], y[225], y[226], y[227]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[220], y[221], y[222], y[223]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[224], y[225], y[226], y[227]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[220], y[221], y[222], y[223]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[224], y[225], y[226], y[227]))
                {
                    return false;
                }
            }

            // panda_link2 vs. panda_rightfinger
            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[244], y[245], y[246], y[247], y[276], y[277], y[278], y[279]))
            {
                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[228], y[229], y[230], y[231]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[232], y[233], y[234], y[235]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[228], y[229], y[230], y[231]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[232], y[233], y[234], y[235]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[228], y[229], y[230], y[231]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[232], y[233], y[234], y[235]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[228], y[229], y[230], y[231]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[232], y[233], y[234], y[235]))
                {
                    return false;
                }
            }

            // panda_link5 vs. panda_link7
            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[256], y[257], y[258], y[259], y[264], y[265], y[266], y[267]))
            {
                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[68], y[69], y[70], y[71], y[128], y[129], y[130], y[131]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[68], y[69], y[70], y[71], y[132], y[133], y[134], y[135]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[68], y[69], y[70], y[71], y[136], y[137], y[138], y[139]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[68], y[69], y[70], y[71], y[140], y[141], y[142], y[143]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[68], y[69], y[70], y[71], y[144], y[145], y[146], y[147]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[72], y[73], y[74], y[75], y[128], y[129], y[130], y[131]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[72], y[73], y[74], y[75], y[132], y[133], y[134], y[135]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[72], y[73], y[74], y[75], y[136], y[137], y[138], y[139]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[72], y[73], y[74], y[75], y[140], y[141], y[142], y[143]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[72], y[73], y[74], y[75], y[144], y[145], y[146], y[147]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[76], y[77], y[78], y[79], y[128], y[129], y[130], y[131]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[76], y[77], y[78], y[79], y[132], y[133], y[134], y[135]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[76], y[77], y[78], y[79], y[136], y[137], y[138], y[139]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[76], y[77], y[78], y[79], y[140], y[141], y[142], y[143]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[76], y[77], y[78], y[79], y[144], y[145], y[146], y[147]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[80], y[81], y[82], y[83], y[128], y[129], y[130], y[131]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[80], y[81], y[82], y[83], y[132], y[133], y[134], y[135]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[80], y[81], y[82], y[83], y[136], y[137], y[138], y[139]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[80], y[81], y[82], y[83], y[140], y[141], y[142], y[143]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[80], y[81], y[82], y[83], y[144], y[145], y[146], y[147]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[84], y[85], y[86], y[87], y[128], y[129], y[130], y[131]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[84], y[85], y[86], y[87], y[132], y[133], y[134], y[135]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[84], y[85], y[86], y[87], y[136], y[137], y[138], y[139]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[84], y[85], y[86], y[87], y[140], y[141], y[142], y[143]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[84], y[85], y[86], y[87], y[144], y[145], y[146], y[147]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[88], y[89], y[90], y[91], y[128], y[129], y[130], y[131]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[88], y[89], y[90], y[91], y[132], y[133], y[134], y[135]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[88], y[89], y[90], y[91], y[136], y[137], y[138], y[139]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[88], y[89], y[90], y[91], y[140], y[141], y[142], y[143]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[88], y[89], y[90], y[91], y[144], y[145], y[146], y[147]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[92], y[93], y[94], y[95], y[128], y[129], y[130], y[131]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[92], y[93], y[94], y[95], y[132], y[133], y[134], y[135]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[92], y[93], y[94], y[95], y[136], y[137], y[138], y[139]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[92], y[93], y[94], y[95], y[140], y[141], y[142], y[143]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[92], y[93], y[94], y[95], y[144], y[145], y[146], y[147]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[96], y[97], y[98], y[99], y[128], y[129], y[130], y[131]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[96], y[97], y[98], y[99], y[132], y[133], y[134], y[135]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[96], y[97], y[98], y[99], y[136], y[137], y[138], y[139]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[96], y[97], y[98], y[99], y[140], y[141], y[142], y[143]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[96], y[97], y[98], y[99], y[144], y[145], y[146], y[147]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[100], y[101], y[102], y[103], y[128], y[129], y[130], y[131]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[100], y[101], y[102], y[103], y[132], y[133], y[134], y[135]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[100], y[101], y[102], y[103], y[136], y[137], y[138], y[139]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[100], y[101], y[102], y[103], y[140], y[141], y[142], y[143]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[100], y[101], y[102], y[103], y[144], y[145], y[146], y[147]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[104], y[105], y[106], y[107], y[128], y[129], y[130], y[131]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[104], y[105], y[106], y[107], y[132], y[133], y[134], y[135]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[104], y[105], y[106], y[107], y[136], y[137], y[138], y[139]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[104], y[105], y[106], y[107], y[140], y[141], y[142], y[143]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[104], y[105], y[106], y[107], y[144], y[145], y[146], y[147]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[108], y[109], y[110], y[111], y[128], y[129], y[130], y[131]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[108], y[109], y[110], y[111], y[132], y[133], y[134], y[135]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[108], y[109], y[110], y[111], y[136], y[137], y[138], y[139]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[108], y[109], y[110], y[111], y[140], y[141], y[142], y[143]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[108], y[109], y[110], y[111], y[144], y[145], y[146], y[147]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[112], y[113], y[114], y[115], y[128], y[129], y[130], y[131]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[112], y[113], y[114], y[115], y[132], y[133], y[134], y[135]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[112], y[113], y[114], y[115], y[136], y[137], y[138], y[139]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[112], y[113], y[114], y[115], y[140], y[141], y[142], y[143]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[112], y[113], y[114], y[115], y[144], y[145], y[146], y[147]))
                {
                    return false;
                }
            }

            // panda_link5 vs. panda_hand
            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[256], y[257], y[258], y[259], y[268], y[269], y[270], y[271]))
            {
                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[68], y[69], y[70], y[71], y[148], y[149], y[150], y[151]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[68], y[69], y[70], y[71], y[152], y[153], y[154], y[155]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[68], y[69], y[70], y[71], y[156], y[157], y[158], y[159]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[68], y[69], y[70], y[71], y[160], y[161], y[162], y[163]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[68], y[69], y[70], y[71], y[164], y[165], y[166], y[167]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[68], y[69], y[70], y[71], y[168], y[169], y[170], y[171]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[68], y[69], y[70], y[71], y[172], y[173], y[174], y[175]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[68], y[69], y[70], y[71], y[176], y[177], y[178], y[179]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[68], y[69], y[70], y[71], y[180], y[181], y[182], y[183]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[68], y[69], y[70], y[71], y[184], y[185], y[186], y[187]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[68], y[69], y[70], y[71], y[188], y[189], y[190], y[191]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[68], y[69], y[70], y[71], y[192], y[193], y[194], y[195]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[68], y[69], y[70], y[71], y[196], y[197], y[198], y[199]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[68], y[69], y[70], y[71], y[200], y[201], y[202], y[203]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[68], y[69], y[70], y[71], y[204], y[205], y[206], y[207]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[68], y[69], y[70], y[71], y[208], y[209], y[210], y[211]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[68], y[69], y[70], y[71], y[212], y[213], y[214], y[215]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[68], y[69], y[70], y[71], y[216], y[217], y[218], y[219]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[72], y[73], y[74], y[75], y[148], y[149], y[150], y[151]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[72], y[73], y[74], y[75], y[152], y[153], y[154], y[155]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[72], y[73], y[74], y[75], y[156], y[157], y[158], y[159]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[72], y[73], y[74], y[75], y[160], y[161], y[162], y[163]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[72], y[73], y[74], y[75], y[164], y[165], y[166], y[167]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[72], y[73], y[74], y[75], y[168], y[169], y[170], y[171]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[72], y[73], y[74], y[75], y[172], y[173], y[174], y[175]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[72], y[73], y[74], y[75], y[176], y[177], y[178], y[179]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[72], y[73], y[74], y[75], y[180], y[181], y[182], y[183]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[72], y[73], y[74], y[75], y[184], y[185], y[186], y[187]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[72], y[73], y[74], y[75], y[188], y[189], y[190], y[191]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[72], y[73], y[74], y[75], y[192], y[193], y[194], y[195]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[72], y[73], y[74], y[75], y[196], y[197], y[198], y[199]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[72], y[73], y[74], y[75], y[200], y[201], y[202], y[203]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[72], y[73], y[74], y[75], y[204], y[205], y[206], y[207]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[72], y[73], y[74], y[75], y[208], y[209], y[210], y[211]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[72], y[73], y[74], y[75], y[212], y[213], y[214], y[215]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[72], y[73], y[74], y[75], y[216], y[217], y[218], y[219]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[76], y[77], y[78], y[79], y[148], y[149], y[150], y[151]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[76], y[77], y[78], y[79], y[152], y[153], y[154], y[155]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[76], y[77], y[78], y[79], y[156], y[157], y[158], y[159]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[76], y[77], y[78], y[79], y[160], y[161], y[162], y[163]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[76], y[77], y[78], y[79], y[164], y[165], y[166], y[167]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[76], y[77], y[78], y[79], y[168], y[169], y[170], y[171]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[76], y[77], y[78], y[79], y[172], y[173], y[174], y[175]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[76], y[77], y[78], y[79], y[176], y[177], y[178], y[179]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[76], y[77], y[78], y[79], y[180], y[181], y[182], y[183]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[76], y[77], y[78], y[79], y[184], y[185], y[186], y[187]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[76], y[77], y[78], y[79], y[188], y[189], y[190], y[191]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[76], y[77], y[78], y[79], y[192], y[193], y[194], y[195]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[76], y[77], y[78], y[79], y[196], y[197], y[198], y[199]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[76], y[77], y[78], y[79], y[200], y[201], y[202], y[203]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[76], y[77], y[78], y[79], y[204], y[205], y[206], y[207]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[76], y[77], y[78], y[79], y[208], y[209], y[210], y[211]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[76], y[77], y[78], y[79], y[212], y[213], y[214], y[215]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[76], y[77], y[78], y[79], y[216], y[217], y[218], y[219]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[80], y[81], y[82], y[83], y[148], y[149], y[150], y[151]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[80], y[81], y[82], y[83], y[152], y[153], y[154], y[155]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[80], y[81], y[82], y[83], y[156], y[157], y[158], y[159]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[80], y[81], y[82], y[83], y[160], y[161], y[162], y[163]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[80], y[81], y[82], y[83], y[164], y[165], y[166], y[167]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[80], y[81], y[82], y[83], y[168], y[169], y[170], y[171]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[80], y[81], y[82], y[83], y[172], y[173], y[174], y[175]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[80], y[81], y[82], y[83], y[176], y[177], y[178], y[179]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[80], y[81], y[82], y[83], y[180], y[181], y[182], y[183]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[80], y[81], y[82], y[83], y[184], y[185], y[186], y[187]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[80], y[81], y[82], y[83], y[188], y[189], y[190], y[191]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[80], y[81], y[82], y[83], y[192], y[193], y[194], y[195]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[80], y[81], y[82], y[83], y[196], y[197], y[198], y[199]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[80], y[81], y[82], y[83], y[200], y[201], y[202], y[203]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[80], y[81], y[82], y[83], y[204], y[205], y[206], y[207]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[80], y[81], y[82], y[83], y[208], y[209], y[210], y[211]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[80], y[81], y[82], y[83], y[212], y[213], y[214], y[215]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[80], y[81], y[82], y[83], y[216], y[217], y[218], y[219]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[84], y[85], y[86], y[87], y[148], y[149], y[150], y[151]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[84], y[85], y[86], y[87], y[152], y[153], y[154], y[155]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[84], y[85], y[86], y[87], y[156], y[157], y[158], y[159]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[84], y[85], y[86], y[87], y[160], y[161], y[162], y[163]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[84], y[85], y[86], y[87], y[164], y[165], y[166], y[167]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[84], y[85], y[86], y[87], y[168], y[169], y[170], y[171]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[84], y[85], y[86], y[87], y[172], y[173], y[174], y[175]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[84], y[85], y[86], y[87], y[176], y[177], y[178], y[179]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[84], y[85], y[86], y[87], y[180], y[181], y[182], y[183]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[84], y[85], y[86], y[87], y[184], y[185], y[186], y[187]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[84], y[85], y[86], y[87], y[188], y[189], y[190], y[191]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[84], y[85], y[86], y[87], y[192], y[193], y[194], y[195]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[84], y[85], y[86], y[87], y[196], y[197], y[198], y[199]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[84], y[85], y[86], y[87], y[200], y[201], y[202], y[203]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[84], y[85], y[86], y[87], y[204], y[205], y[206], y[207]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[84], y[85], y[86], y[87], y[208], y[209], y[210], y[211]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[84], y[85], y[86], y[87], y[212], y[213], y[214], y[215]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[84], y[85], y[86], y[87], y[216], y[217], y[218], y[219]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[88], y[89], y[90], y[91], y[148], y[149], y[150], y[151]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[88], y[89], y[90], y[91], y[152], y[153], y[154], y[155]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[88], y[89], y[90], y[91], y[156], y[157], y[158], y[159]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[88], y[89], y[90], y[91], y[160], y[161], y[162], y[163]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[88], y[89], y[90], y[91], y[164], y[165], y[166], y[167]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[88], y[89], y[90], y[91], y[168], y[169], y[170], y[171]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[88], y[89], y[90], y[91], y[172], y[173], y[174], y[175]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[88], y[89], y[90], y[91], y[176], y[177], y[178], y[179]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[88], y[89], y[90], y[91], y[180], y[181], y[182], y[183]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[88], y[89], y[90], y[91], y[184], y[185], y[186], y[187]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[88], y[89], y[90], y[91], y[188], y[189], y[190], y[191]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[88], y[89], y[90], y[91], y[192], y[193], y[194], y[195]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[88], y[89], y[90], y[91], y[196], y[197], y[198], y[199]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[88], y[89], y[90], y[91], y[200], y[201], y[202], y[203]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[88], y[89], y[90], y[91], y[204], y[205], y[206], y[207]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[88], y[89], y[90], y[91], y[208], y[209], y[210], y[211]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[88], y[89], y[90], y[91], y[212], y[213], y[214], y[215]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[88], y[89], y[90], y[91], y[216], y[217], y[218], y[219]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[92], y[93], y[94], y[95], y[148], y[149], y[150], y[151]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[92], y[93], y[94], y[95], y[152], y[153], y[154], y[155]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[92], y[93], y[94], y[95], y[156], y[157], y[158], y[159]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[92], y[93], y[94], y[95], y[160], y[161], y[162], y[163]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[92], y[93], y[94], y[95], y[164], y[165], y[166], y[167]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[92], y[93], y[94], y[95], y[168], y[169], y[170], y[171]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[92], y[93], y[94], y[95], y[172], y[173], y[174], y[175]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[92], y[93], y[94], y[95], y[176], y[177], y[178], y[179]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[92], y[93], y[94], y[95], y[180], y[181], y[182], y[183]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[92], y[93], y[94], y[95], y[184], y[185], y[186], y[187]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[92], y[93], y[94], y[95], y[188], y[189], y[190], y[191]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[92], y[93], y[94], y[95], y[192], y[193], y[194], y[195]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[92], y[93], y[94], y[95], y[196], y[197], y[198], y[199]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[92], y[93], y[94], y[95], y[200], y[201], y[202], y[203]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[92], y[93], y[94], y[95], y[204], y[205], y[206], y[207]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[92], y[93], y[94], y[95], y[208], y[209], y[210], y[211]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[92], y[93], y[94], y[95], y[212], y[213], y[214], y[215]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[92], y[93], y[94], y[95], y[216], y[217], y[218], y[219]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[96], y[97], y[98], y[99], y[148], y[149], y[150], y[151]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[96], y[97], y[98], y[99], y[152], y[153], y[154], y[155]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[96], y[97], y[98], y[99], y[156], y[157], y[158], y[159]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[96], y[97], y[98], y[99], y[160], y[161], y[162], y[163]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[96], y[97], y[98], y[99], y[164], y[165], y[166], y[167]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[96], y[97], y[98], y[99], y[168], y[169], y[170], y[171]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[96], y[97], y[98], y[99], y[172], y[173], y[174], y[175]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[96], y[97], y[98], y[99], y[176], y[177], y[178], y[179]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[96], y[97], y[98], y[99], y[180], y[181], y[182], y[183]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[96], y[97], y[98], y[99], y[184], y[185], y[186], y[187]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[96], y[97], y[98], y[99], y[188], y[189], y[190], y[191]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[96], y[97], y[98], y[99], y[192], y[193], y[194], y[195]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[96], y[97], y[98], y[99], y[196], y[197], y[198], y[199]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[96], y[97], y[98], y[99], y[200], y[201], y[202], y[203]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[96], y[97], y[98], y[99], y[204], y[205], y[206], y[207]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[96], y[97], y[98], y[99], y[208], y[209], y[210], y[211]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[96], y[97], y[98], y[99], y[212], y[213], y[214], y[215]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[96], y[97], y[98], y[99], y[216], y[217], y[218], y[219]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[100], y[101], y[102], y[103], y[148], y[149], y[150], y[151]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[100], y[101], y[102], y[103], y[152], y[153], y[154], y[155]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[100], y[101], y[102], y[103], y[156], y[157], y[158], y[159]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[100], y[101], y[102], y[103], y[160], y[161], y[162], y[163]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[100], y[101], y[102], y[103], y[164], y[165], y[166], y[167]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[100], y[101], y[102], y[103], y[168], y[169], y[170], y[171]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[100], y[101], y[102], y[103], y[172], y[173], y[174], y[175]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[100], y[101], y[102], y[103], y[176], y[177], y[178], y[179]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[100], y[101], y[102], y[103], y[180], y[181], y[182], y[183]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[100], y[101], y[102], y[103], y[184], y[185], y[186], y[187]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[100], y[101], y[102], y[103], y[188], y[189], y[190], y[191]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[100], y[101], y[102], y[103], y[192], y[193], y[194], y[195]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[100], y[101], y[102], y[103], y[196], y[197], y[198], y[199]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[100], y[101], y[102], y[103], y[200], y[201], y[202], y[203]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[100], y[101], y[102], y[103], y[204], y[205], y[206], y[207]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[100], y[101], y[102], y[103], y[208], y[209], y[210], y[211]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[100], y[101], y[102], y[103], y[212], y[213], y[214], y[215]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[100], y[101], y[102], y[103], y[216], y[217], y[218], y[219]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[104], y[105], y[106], y[107], y[148], y[149], y[150], y[151]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[104], y[105], y[106], y[107], y[152], y[153], y[154], y[155]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[104], y[105], y[106], y[107], y[156], y[157], y[158], y[159]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[104], y[105], y[106], y[107], y[160], y[161], y[162], y[163]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[104], y[105], y[106], y[107], y[164], y[165], y[166], y[167]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[104], y[105], y[106], y[107], y[168], y[169], y[170], y[171]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[104], y[105], y[106], y[107], y[172], y[173], y[174], y[175]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[104], y[105], y[106], y[107], y[176], y[177], y[178], y[179]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[104], y[105], y[106], y[107], y[180], y[181], y[182], y[183]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[104], y[105], y[106], y[107], y[184], y[185], y[186], y[187]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[104], y[105], y[106], y[107], y[188], y[189], y[190], y[191]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[104], y[105], y[106], y[107], y[192], y[193], y[194], y[195]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[104], y[105], y[106], y[107], y[196], y[197], y[198], y[199]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[104], y[105], y[106], y[107], y[200], y[201], y[202], y[203]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[104], y[105], y[106], y[107], y[204], y[205], y[206], y[207]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[104], y[105], y[106], y[107], y[208], y[209], y[210], y[211]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[104], y[105], y[106], y[107], y[212], y[213], y[214], y[215]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[104], y[105], y[106], y[107], y[216], y[217], y[218], y[219]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[108], y[109], y[110], y[111], y[148], y[149], y[150], y[151]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[108], y[109], y[110], y[111], y[152], y[153], y[154], y[155]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[108], y[109], y[110], y[111], y[156], y[157], y[158], y[159]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[108], y[109], y[110], y[111], y[160], y[161], y[162], y[163]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[108], y[109], y[110], y[111], y[164], y[165], y[166], y[167]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[108], y[109], y[110], y[111], y[168], y[169], y[170], y[171]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[108], y[109], y[110], y[111], y[172], y[173], y[174], y[175]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[108], y[109], y[110], y[111], y[176], y[177], y[178], y[179]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[108], y[109], y[110], y[111], y[180], y[181], y[182], y[183]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[108], y[109], y[110], y[111], y[184], y[185], y[186], y[187]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[108], y[109], y[110], y[111], y[188], y[189], y[190], y[191]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[108], y[109], y[110], y[111], y[192], y[193], y[194], y[195]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[108], y[109], y[110], y[111], y[196], y[197], y[198], y[199]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[108], y[109], y[110], y[111], y[200], y[201], y[202], y[203]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[108], y[109], y[110], y[111], y[204], y[205], y[206], y[207]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[108], y[109], y[110], y[111], y[208], y[209], y[210], y[211]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[108], y[109], y[110], y[111], y[212], y[213], y[214], y[215]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[108], y[109], y[110], y[111], y[216], y[217], y[218], y[219]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[112], y[113], y[114], y[115], y[148], y[149], y[150], y[151]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[112], y[113], y[114], y[115], y[152], y[153], y[154], y[155]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[112], y[113], y[114], y[115], y[156], y[157], y[158], y[159]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[112], y[113], y[114], y[115], y[160], y[161], y[162], y[163]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[112], y[113], y[114], y[115], y[164], y[165], y[166], y[167]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[112], y[113], y[114], y[115], y[168], y[169], y[170], y[171]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[112], y[113], y[114], y[115], y[172], y[173], y[174], y[175]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[112], y[113], y[114], y[115], y[176], y[177], y[178], y[179]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[112], y[113], y[114], y[115], y[180], y[181], y[182], y[183]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[112], y[113], y[114], y[115], y[184], y[185], y[186], y[187]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[112], y[113], y[114], y[115], y[188], y[189], y[190], y[191]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[112], y[113], y[114], y[115], y[192], y[193], y[194], y[195]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[112], y[113], y[114], y[115], y[196], y[197], y[198], y[199]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[112], y[113], y[114], y[115], y[200], y[201], y[202], y[203]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[112], y[113], y[114], y[115], y[204], y[205], y[206], y[207]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[112], y[113], y[114], y[115], y[208], y[209], y[210], y[211]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[112], y[113], y[114], y[115], y[212], y[213], y[214], y[215]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[112], y[113], y[114], y[115], y[216], y[217], y[218], y[219]))
                {
                    return false;
                }
            }

            // panda_link5 vs. panda_leftfinger
            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[256], y[257], y[258], y[259], y[272], y[273], y[274], y[275]))
            {
                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[68], y[69], y[70], y[71], y[220], y[221], y[222], y[223]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[68], y[69], y[70], y[71], y[224], y[225], y[226], y[227]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[72], y[73], y[74], y[75], y[220], y[221], y[222], y[223]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[72], y[73], y[74], y[75], y[224], y[225], y[226], y[227]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[76], y[77], y[78], y[79], y[220], y[221], y[222], y[223]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[76], y[77], y[78], y[79], y[224], y[225], y[226], y[227]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[80], y[81], y[82], y[83], y[220], y[221], y[222], y[223]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[80], y[81], y[82], y[83], y[224], y[225], y[226], y[227]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[84], y[85], y[86], y[87], y[220], y[221], y[222], y[223]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[84], y[85], y[86], y[87], y[224], y[225], y[226], y[227]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[88], y[89], y[90], y[91], y[220], y[221], y[222], y[223]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[88], y[89], y[90], y[91], y[224], y[225], y[226], y[227]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[92], y[93], y[94], y[95], y[220], y[221], y[222], y[223]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[92], y[93], y[94], y[95], y[224], y[225], y[226], y[227]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[96], y[97], y[98], y[99], y[220], y[221], y[222], y[223]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[96], y[97], y[98], y[99], y[224], y[225], y[226], y[227]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[100], y[101], y[102], y[103], y[220], y[221], y[222], y[223]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[100], y[101], y[102], y[103], y[224], y[225], y[226], y[227]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[104], y[105], y[106], y[107], y[220], y[221], y[222], y[223]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[104], y[105], y[106], y[107], y[224], y[225], y[226], y[227]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[108], y[109], y[110], y[111], y[220], y[221], y[222], y[223]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[108], y[109], y[110], y[111], y[224], y[225], y[226], y[227]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[112], y[113], y[114], y[115], y[220], y[221], y[222], y[223]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[112], y[113], y[114], y[115], y[224], y[225], y[226], y[227]))
                {
                    return false;
                }
            }

            // panda_link5 vs. panda_rightfinger
            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[256], y[257], y[258], y[259], y[276], y[277], y[278], y[279]))
            {
                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[68], y[69], y[70], y[71], y[228], y[229], y[230], y[231]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[68], y[69], y[70], y[71], y[232], y[233], y[234], y[235]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[72], y[73], y[74], y[75], y[228], y[229], y[230], y[231]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[72], y[73], y[74], y[75], y[232], y[233], y[234], y[235]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[76], y[77], y[78], y[79], y[228], y[229], y[230], y[231]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[76], y[77], y[78], y[79], y[232], y[233], y[234], y[235]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[80], y[81], y[82], y[83], y[228], y[229], y[230], y[231]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[80], y[81], y[82], y[83], y[232], y[233], y[234], y[235]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[84], y[85], y[86], y[87], y[228], y[229], y[230], y[231]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[84], y[85], y[86], y[87], y[232], y[233], y[234], y[235]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[88], y[89], y[90], y[91], y[228], y[229], y[230], y[231]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[88], y[89], y[90], y[91], y[232], y[233], y[234], y[235]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[92], y[93], y[94], y[95], y[228], y[229], y[230], y[231]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[92], y[93], y[94], y[95], y[232], y[233], y[234], y[235]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[96], y[97], y[98], y[99], y[228], y[229], y[230], y[231]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[96], y[97], y[98], y[99], y[232], y[233], y[234], y[235]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[100], y[101], y[102], y[103], y[228], y[229], y[230], y[231]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[100], y[101], y[102], y[103], y[232], y[233], y[234], y[235]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[104], y[105], y[106], y[107], y[228], y[229], y[230], y[231]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[104], y[105], y[106], y[107], y[232], y[233], y[234], y[235]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[108], y[109], y[110], y[111], y[228], y[229], y[230], y[231]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[108], y[109], y[110], y[111], y[232], y[233], y[234], y[235]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[112], y[113], y[114], y[115], y[228], y[229], y[230], y[231]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[112], y[113], y[114], y[115], y[232], y[233], y[234], y[235]))
                {
                    return false;
                }
            }

            return true;
        }

        template <std::size_t rake>
        inline static bool fkcc_attach(
            const vamp::collision::Environment<FloatVector<rake>> &environment,
            const ConfigurationBlock<rake> &x) noexcept
        {
            std::array<FloatVector<rake, 1>, 54> v;
            std::array<FloatVector<rake, 1>, 292> y;

            v[0] = sin(x[0]);
            v[1] = -v[0];
            y[4] = -0.08 * v[1];
            v[2] = cos(x[0]);
            y[5] = -0.08 * v[2];
            y[8] = -0.03 * v[1];
            y[9] = -0.03 * v[2];
            y[20] = 0.03 * v[1];
            y[21] = 0.03 * v[2];
            y[24] = 0.08 * v[1];
            y[25] = 0.08 * v[2];
            v[3] = sin(x[1]);
            v[4] = -v[3];
            v[5] = cos(x[1]);
            v[6] = 4.89663865010925e-12 * v[5];
            v[7] = v[2] * v[4] + v[1] * v[6];
            y[28] = -0.12 * v[7];
            v[6] = v[0] * v[4] + v[2] * v[6];
            y[29] = -0.12 * v[6];
            v[4] = -1. * v[5];
            y[30] = 0.333 + -0.12 * v[4];
            y[32] = -0.17 * v[7];
            y[33] = -0.17 * v[6];
            y[34] = 0.333 + -0.17 * v[4];
            v[8] = -1. * v[7] + 4.89663865010925e-12 * v[1];
            v[9] = -0.316 * v[7];
            y[36] = -0.1 * v[8] + v[9];
            v[10] = -1. * v[6] + 4.89663865010925e-12 * v[2];
            v[11] = -0.316 * v[6];
            y[37] = -0.1 * v[10] + v[11];
            v[12] = 2.39770700697438e-23 + -1. * v[4];
            v[13] = 0.333 + -0.316 * v[4];
            y[38] = -0.1 * v[12] + v[13];
            y[40] = -0.06 * v[8] + v[9];
            y[41] = -0.06 * v[10] + v[11];
            y[42] = -0.06 * v[12] + v[13];
            v[14] = 4.89663865010925e-12 * v[3];
            v[15] = v[2] * v[5] + v[1] * v[14];
            v[16] = cos(x[2]);
            v[17] = sin(x[2]);
            v[18] = 4.89663865010925e-12 * v[17];
            v[19] = v[15] * v[16] + v[7] * v[18] + v[1] * v[17];
            v[20] = -v[17];
            v[21] = 4.89663865010925e-12 * v[16];
            v[15] = v[15] * v[20] + v[7] * v[21] + v[1] * v[16];
            y[44] = 0.08 * v[19] + 0.06 * v[15] + v[9];
            v[14] = v[0] * v[5] + v[2] * v[14];
            v[5] = v[14] * v[16] + v[6] * v[18] + v[2] * v[17];
            v[14] = v[14] * v[20] + v[6] * v[21] + v[2] * v[16];
            y[45] = 0.08 * v[5] + 0.06 * v[14] + v[11];
            v[3] = -1. * v[3];
            v[18] = v[3] * v[16] + v[4] * v[18] + 4.89663865010925e-12 * v[17];
            v[3] = v[3] * v[20] + v[4] * v[21] + 4.89663865010925e-12 * v[16];
            y[46] = 0.08 * v[18] + 0.06 * v[3] + v[13];
            y[48] = 0.08 * v[19] + 0.02 * v[15] + v[9];
            y[49] = 0.08 * v[5] + 0.02 * v[14] + v[11];
            y[50] = 0.08 * v[18] + 0.02 * v[3] + v[13];
            v[21] = cos(x[3]);
            v[20] = sin(x[3]);
            v[16] = 4.89663865010925e-12 * v[20];
            v[17] = v[19] * v[21] + v[15] * v[16] + v[8] * v[20];
            v[0] = -v[20];
            v[22] = 4.89663865010925e-12 * v[21];
            v[23] = v[19] * v[0] + v[15] * v[22] + v[8] * v[21];
            v[24] = v[9] + 0.0825 * v[19];
            y[52] = -0.08 * v[17] + 0.095 * v[23] + v[24];
            v[25] = v[5] * v[21] + v[14] * v[16] + v[10] * v[20];
            v[26] = v[5] * v[0] + v[14] * v[22] + v[10] * v[21];
            v[27] = v[11] + 0.0825 * v[5];
            y[53] = -0.08 * v[25] + 0.095 * v[26] + v[27];
            v[16] = v[18] * v[21] + v[3] * v[16] + v[12] * v[20];
            v[22] = v[18] * v[0] + v[3] * v[22] + v[12] * v[21];
            v[0] = v[13] + 0.0825 * v[18];
            y[54] = -0.08 * v[16] + 0.095 * v[22] + v[0];
            v[21] = -1. * v[15] + 4.89663865010925e-12 * v[8];
            y[56] = 0.02 * v[21] + v[24];
            v[20] = -1. * v[14] + 4.89663865010925e-12 * v[10];
            y[57] = 0.02 * v[20] + v[27];
            v[28] = -1. * v[3] + 4.89663865010925e-12 * v[12];
            y[58] = 0.02 * v[28] + v[0];
            y[60] = 0.06 * v[21] + v[24];
            y[61] = 0.06 * v[20] + v[27];
            y[62] = 0.06 * v[28] + v[0];
            y[64] = -0.08 * v[17] + 0.06 * v[23] + v[24];
            y[65] = -0.08 * v[25] + 0.06 * v[26] + v[27];
            y[66] = -0.08 * v[16] + 0.06 * v[22] + v[0];
            v[29] = sin(x[4]);
            v[30] = -v[29];
            v[31] = cos(x[4]);
            v[32] = 4.89663865010925e-12 * v[31];
            v[33] = -1. * v[31];
            v[34] = v[17] * v[30] + v[23] * v[32] + v[21] * v[33];
            y[116] = v[24] + -0.0825 * v[17] + 0.384 * v[23];
            y[68] = 0.055 * v[34] + y[116];
            v[35] = v[25] * v[30] + v[26] * v[32] + v[20] * v[33];
            y[117] = v[27] + -0.0825 * v[25] + 0.384 * v[26];
            y[69] = 0.055 * v[35] + y[117];
            v[33] = v[16] * v[30] + v[22] * v[32] + v[28] * v[33];
            y[118] = v[0] + -0.0825 * v[16] + 0.384 * v[22];
            y[70] = 0.055 * v[33] + y[118];
            y[72] = 0.075 * v[34] + y[116];
            y[73] = 0.075 * v[35] + y[117];
            y[74] = 0.075 * v[33] + y[118];
            v[32] = v[23] + 4.89663865010925e-12 * v[21];
            y[76] = -0.22 * v[32] + y[116];
            v[30] = v[26] + 4.89663865010925e-12 * v[20];
            y[77] = -0.22 * v[30] + y[117];
            v[36] = v[22] + 4.89663865010925e-12 * v[28];
            y[78] = -0.22 * v[36] + y[118];
            y[80] = 0.05 * v[34] + -0.18 * v[32] + y[116];
            y[81] = 0.05 * v[35] + -0.18 * v[30] + y[117];
            y[82] = 0.05 * v[33] + -0.18 * v[36] + y[118];
            v[37] = 4.89663865010925e-12 * v[29];
            v[29] = -1. * v[29];
            v[38] = v[17] * v[31] + v[23] * v[37] + v[21] * v[29];
            y[84] = 0.01 * v[38] + 0.08 * v[34] + -0.14 * v[32] + y[116];
            v[39] = v[25] * v[31] + v[26] * v[37] + v[20] * v[29];
            y[85] = 0.01 * v[39] + 0.08 * v[35] + -0.14 * v[30] + y[117];
            v[29] = v[16] * v[31] + v[22] * v[37] + v[28] * v[29];
            y[86] = 0.01 * v[29] + 0.08 * v[33] + -0.14 * v[36] + y[118];
            y[88] = 0.01 * v[38] + 0.085 * v[34] + -0.11 * v[32] + y[116];
            y[89] = 0.01 * v[39] + 0.085 * v[35] + -0.11 * v[30] + y[117];
            y[90] = 0.01 * v[29] + 0.085 * v[33] + -0.11 * v[36] + y[118];
            y[92] = 0.01 * v[38] + 0.09 * v[34] + -0.08 * v[32] + y[116];
            y[93] = 0.01 * v[39] + 0.09 * v[35] + -0.08 * v[30] + y[117];
            y[94] = 0.01 * v[29] + 0.09 * v[33] + -0.08 * v[36] + y[118];
            y[96] = 0.01 * v[38] + 0.095 * v[34] + -0.05 * v[32] + y[116];
            y[97] = 0.01 * v[39] + 0.095 * v[35] + -0.05 * v[30] + y[117];
            y[98] = 0.01 * v[29] + 0.095 * v[33] + -0.05 * v[36] + y[118];
            y[100] = -0.01 * v[38] + 0.08 * v[34] + -0.14 * v[32] + y[116];
            y[101] = -0.01 * v[39] + 0.08 * v[35] + -0.14 * v[30] + y[117];
            y[102] = -0.01 * v[29] + 0.08 * v[33] + -0.14 * v[36] + y[118];
            y[104] = -0.01 * v[38] + 0.085 * v[34] + -0.11 * v[32] + y[116];
            y[105] = -0.01 * v[39] + 0.085 * v[35] + -0.11 * v[30] + y[117];
            y[106] = -0.01 * v[29] + 0.085 * v[33] + -0.11 * v[36] + y[118];
            y[108] = -0.01 * v[38] + 0.09 * v[34] + -0.08 * v[32] + y[116];
            y[109] = -0.01 * v[39] + 0.09 * v[35] + -0.08 * v[30] + y[117];
            y[110] = -0.01 * v[29] + 0.09 * v[33] + -0.08 * v[36] + y[118];
            y[112] = -0.01 * v[38] + 0.095 * v[34] + -0.05 * v[32] + y[116];
            y[113] = -0.01 * v[39] + 0.095 * v[35] + -0.05 * v[30] + y[117];
            y[114] = -0.01 * v[29] + 0.095 * v[33] + -0.05 * v[36] + y[118];
            v[37] = cos(x[5]);
            v[31] = sin(x[5]);
            v[40] = 4.89663865010925e-12 * v[31];
            v[41] = v[38] * v[37] + v[34] * v[40] + v[32] * v[31];
            v[42] = -v[31];
            v[43] = 4.89663865010925e-12 * v[37];
            v[38] = v[38] * v[42] + v[34] * v[43] + v[32] * v[37];
            y[120] = 0.08 * v[41] + -0.01 * v[38] + y[116];
            v[44] = v[39] * v[37] + v[35] * v[40] + v[30] * v[31];
            v[39] = v[39] * v[42] + v[35] * v[43] + v[30] * v[37];
            y[121] = 0.08 * v[44] + -0.01 * v[39] + y[117];
            v[40] = v[29] * v[37] + v[33] * v[40] + v[36] * v[31];
            v[43] = v[29] * v[42] + v[33] * v[43] + v[36] * v[37];
            y[122] = 0.08 * v[40] + -0.01 * v[43] + y[118];
            y[124] = 0.08 * v[41] + 0.035 * v[38] + y[116];
            y[125] = 0.08 * v[44] + 0.035 * v[39] + y[117];
            y[126] = 0.08 * v[40] + 0.035 * v[43] + y[118];
            v[42] = -1. * v[34] + 4.89663865010925e-12 * v[32];
            y[289] = -1. * v[38] + 4.89663865010925e-12 * v[42];
            v[37] = y[116] + 0.088 * v[41];
            y[128] = 0.07 * y[289] + v[37];
            v[29] = -1. * v[35] + 4.89663865010925e-12 * v[30];
            y[290] = -1. * v[39] + 4.89663865010925e-12 * v[29];
            v[31] = y[117] + 0.088 * v[44];
            y[129] = 0.07 * y[290] + v[31];
            v[45] = -1. * v[33] + 4.89663865010925e-12 * v[36];
            y[291] = -1. * v[43] + 4.89663865010925e-12 * v[45];
            v[46] = y[118] + 0.088 * v[40];
            y[130] = 0.07 * y[291] + v[46];
            v[47] = cos(x[6]);
            v[48] = sin(x[6]);
            v[49] = 4.89663865010925e-12 * v[48];
            v[50] = v[41] * v[47] + v[38] * v[49] + v[42] * v[48];
            v[51] = -v[48];
            v[52] = 4.89663865010925e-12 * v[47];
            v[42] = v[41] * v[51] + v[38] * v[52] + v[42] * v[47];
            y[132] = 0.02 * v[50] + 0.04 * v[42] + 0.08 * y[289] + v[37];
            v[53] = v[44] * v[47] + v[39] * v[49] + v[29] * v[48];
            v[29] = v[44] * v[51] + v[39] * v[52] + v[29] * v[47];
            y[133] = 0.02 * v[53] + 0.04 * v[29] + 0.08 * y[290] + v[31];
            v[49] = v[40] * v[47] + v[43] * v[49] + v[45] * v[48];
            v[52] = v[40] * v[51] + v[43] * v[52] + v[45] * v[47];
            y[134] = 0.02 * v[49] + 0.04 * v[52] + 0.08 * y[291] + v[46];
            y[136] = 0.04 * v[50] + 0.02 * v[42] + 0.08 * y[289] + v[37];
            y[137] = 0.04 * v[53] + 0.02 * v[29] + 0.08 * y[290] + v[31];
            y[138] = 0.04 * v[49] + 0.02 * v[52] + 0.08 * y[291] + v[46];
            y[140] = 0.04 * v[50] + 0.06 * v[42] + 0.085 * y[289] + v[37];
            y[141] = 0.04 * v[53] + 0.06 * v[29] + 0.085 * y[290] + v[31];
            y[142] = 0.04 * v[49] + 0.06 * v[52] + 0.085 * y[291] + v[46];
            y[144] = 0.06 * v[50] + 0.04 * v[42] + 0.085 * y[289] + v[37];
            y[145] = 0.06 * v[53] + 0.04 * v[29] + 0.085 * y[290] + v[31];
            y[146] = 0.06 * v[49] + 0.04 * v[52] + 0.085 * y[291] + v[46];
            y[148] = -0.0530330085889673 * v[50] + -0.0530330085890148 * v[42] + 0.117 * y[289] + v[37];
            y[149] = -0.0530330085889673 * v[53] + -0.0530330085890148 * v[29] + 0.117 * y[290] + v[31];
            y[150] = -0.0530330085889673 * v[49] + -0.0530330085890148 * v[52] + 0.117 * y[291] + v[46];
            y[152] = -0.0318198051533804 * v[50] + -0.0318198051534089 * v[42] + 0.117 * y[289] + v[37];
            y[153] = -0.0318198051533804 * v[53] + -0.0318198051534089 * v[29] + 0.117 * y[290] + v[31];
            y[154] = -0.0318198051533804 * v[49] + -0.0318198051534089 * v[52] + 0.117 * y[291] + v[46];
            y[156] = -0.0106066017177935 * v[50] + -0.010606601717803 * v[42] + 0.117 * y[289] + v[37];
            y[157] = -0.0106066017177935 * v[53] + -0.010606601717803 * v[29] + 0.117 * y[290] + v[31];
            y[158] = -0.0106066017177935 * v[49] + -0.010606601717803 * v[52] + 0.117 * y[291] + v[46];
            y[160] = 0.0106066017177935 * v[50] + 0.010606601717803 * v[42] + 0.117 * y[289] + v[37];
            y[161] = 0.0106066017177935 * v[53] + 0.010606601717803 * v[29] + 0.117 * y[290] + v[31];
            y[162] = 0.0106066017177935 * v[49] + 0.010606601717803 * v[52] + 0.117 * y[291] + v[46];
            y[164] = 0.0318198051533804 * v[50] + 0.0318198051534089 * v[42] + 0.117 * y[289] + v[37];
            y[165] = 0.0318198051533804 * v[53] + 0.0318198051534089 * v[29] + 0.117 * y[290] + v[31];
            y[166] = 0.0318198051533804 * v[49] + 0.0318198051534089 * v[52] + 0.117 * y[291] + v[46];
            y[168] = 0.0530330085889673 * v[50] + 0.0530330085890148 * v[42] + 0.117 * y[289] + v[37];
            y[169] = 0.0530330085889673 * v[53] + 0.0530330085890148 * v[29] + 0.117 * y[290] + v[31];
            y[170] = 0.0530330085889673 * v[49] + 0.0530330085890148 * v[52] + 0.117 * y[291] + v[46];
            y[172] = -0.0530330085889673 * v[50] + -0.0530330085890148 * v[42] + 0.137 * y[289] + v[37];
            y[173] = -0.0530330085889673 * v[53] + -0.0530330085890148 * v[29] + 0.137 * y[290] + v[31];
            y[174] = -0.0530330085889673 * v[49] + -0.0530330085890148 * v[52] + 0.137 * y[291] + v[46];
            y[176] = -0.0318198051533804 * v[50] + -0.0318198051534089 * v[42] + 0.137 * y[289] + v[37];
            y[177] = -0.0318198051533804 * v[53] + -0.0318198051534089 * v[29] + 0.137 * y[290] + v[31];
            y[178] = -0.0318198051533804 * v[49] + -0.0318198051534089 * v[52] + 0.137 * y[291] + v[46];
            y[180] = -0.0106066017177935 * v[50] + -0.010606601717803 * v[42] + 0.137 * y[289] + v[37];
            y[181] = -0.0106066017177935 * v[53] + -0.010606601717803 * v[29] + 0.137 * y[290] + v[31];
            y[182] = -0.0106066017177935 * v[49] + -0.010606601717803 * v[52] + 0.137 * y[291] + v[46];
            y[184] = 0.0106066017177935 * v[50] + 0.010606601717803 * v[42] + 0.137 * y[289] + v[37];
            y[185] = 0.0106066017177935 * v[53] + 0.010606601717803 * v[29] + 0.137 * y[290] + v[31];
            y[186] = 0.0106066017177935 * v[49] + 0.010606601717803 * v[52] + 0.137 * y[291] + v[46];
            y[188] = 0.0318198051533804 * v[50] + 0.0318198051534089 * v[42] + 0.137 * y[289] + v[37];
            y[189] = 0.0318198051533804 * v[53] + 0.0318198051534089 * v[29] + 0.137 * y[290] + v[31];
            y[190] = 0.0318198051533804 * v[49] + 0.0318198051534089 * v[52] + 0.137 * y[291] + v[46];
            y[192] = 0.0530330085889673 * v[50] + 0.0530330085890148 * v[42] + 0.137 * y[289] + v[37];
            y[193] = 0.0530330085889673 * v[53] + 0.0530330085890148 * v[29] + 0.137 * y[290] + v[31];
            y[194] = 0.0530330085889673 * v[49] + 0.0530330085890148 * v[52] + 0.137 * y[291] + v[46];
            y[196] = -0.0530330085889673 * v[50] + -0.0530330085890148 * v[42] + 0.157 * y[289] + v[37];
            y[197] = -0.0530330085889673 * v[53] + -0.0530330085890148 * v[29] + 0.157 * y[290] + v[31];
            y[198] = -0.0530330085889673 * v[49] + -0.0530330085890148 * v[52] + 0.157 * y[291] + v[46];
            y[200] = -0.0318198051533804 * v[50] + -0.0318198051534089 * v[42] + 0.157 * y[289] + v[37];
            y[201] = -0.0318198051533804 * v[53] + -0.0318198051534089 * v[29] + 0.157 * y[290] + v[31];
            y[202] = -0.0318198051533804 * v[49] + -0.0318198051534089 * v[52] + 0.157 * y[291] + v[46];
            y[204] = -0.0106066017177935 * v[50] + -0.010606601717803 * v[42] + 0.157 * y[289] + v[37];
            y[205] = -0.0106066017177935 * v[53] + -0.010606601717803 * v[29] + 0.157 * y[290] + v[31];
            y[206] = -0.0106066017177935 * v[49] + -0.010606601717803 * v[52] + 0.157 * y[291] + v[46];
            y[208] = 0.0106066017177935 * v[50] + 0.010606601717803 * v[42] + 0.157 * y[289] + v[37];
            y[209] = 0.0106066017177935 * v[53] + 0.010606601717803 * v[29] + 0.157 * y[290] + v[31];
            y[210] = 0.0106066017177935 * v[49] + 0.010606601717803 * v[52] + 0.157 * y[291] + v[46];
            y[212] = 0.0318198051533804 * v[50] + 0.0318198051534089 * v[42] + 0.157 * y[289] + v[37];
            y[213] = 0.0318198051533804 * v[53] + 0.0318198051534089 * v[29] + 0.157 * y[290] + v[31];
            y[214] = 0.0318198051533804 * v[49] + 0.0318198051534089 * v[52] + 0.157 * y[291] + v[46];
            y[216] = 0.0530330085889673 * v[50] + 0.0530330085890148 * v[42] + 0.157 * y[289] + v[37];
            y[217] = 0.0530330085889673 * v[53] + 0.0530330085890148 * v[29] + 0.157 * y[290] + v[31];
            y[218] = 0.0530330085889673 * v[49] + 0.0530330085890148 * v[52] + 0.157 * y[291] + v[46];
            y[220] = 0.0565685424948984 * v[50] + 0.0565685424949492 * v[42] + 0.1874 * y[289] + v[37];
            y[221] = 0.0565685424948984 * v[53] + 0.0565685424949492 * v[29] + 0.1874 * y[290] + v[31];
            y[222] = 0.0565685424948984 * v[49] + 0.0565685424949492 * v[52] + 0.1874 * y[291] + v[46];
            y[224] = 0.0516187950265948 * v[50] + 0.0516187950266411 * v[42] + 0.2094 * y[289] + v[37];
            y[225] = 0.0516187950265948 * v[53] + 0.0516187950266411 * v[29] + 0.2094 * y[290] + v[31];
            y[226] = 0.0516187950265948 * v[49] + 0.0516187950266411 * v[52] + 0.2094 * y[291] + v[46];
            y[228] = -0.0565685424948984 * v[50] + -0.0565685424949492 * v[42] + 0.1874 * y[289] + v[37];
            y[229] = -0.0565685424948984 * v[53] + -0.0565685424949492 * v[29] + 0.1874 * y[290] + v[31];
            y[230] = -0.0565685424948984 * v[49] + -0.0565685424949492 * v[52] + 0.1874 * y[291] + v[46];
            y[232] = -0.0516187950265948 * v[50] + -0.0516187950266411 * v[42] + 0.2094 * y[289] + v[37];
            y[233] = -0.0516187950265948 * v[53] + -0.0516187950266411 * v[29] + 0.2094 * y[290] + v[31];
            y[234] = -0.0516187950265948 * v[49] + -0.0516187950266411 * v[52] + 0.2094 * y[291] + v[46];
            y[240] = -0.0399999991059303 * v[1];
            y[241] = -0.0399999991059303 * v[2];
            y[244] = -0.0850000008940697 * v[7] + 0.0399999991059303 * v[1];
            y[245] = -0.0850000008940697 * v[6] + 0.0399999991059303 * v[2];
            y[246] = 0.333 + 1.95865541626434e-13 + -0.0850000008940697 * v[4];
            y[248] =
                0.0385857857763767 * v[19] + 0.0289393402636051 * v[15] + -0.0517677664756775 * v[8] + v[9];
            y[249] =
                0.0385857857763767 * v[5] + 0.0289393402636051 * v[14] + -0.0517677664756775 * v[10] + v[11];
            y[250] =
                0.0385857857763767 * v[18] + 0.0289393402636051 * v[3] + -0.0517677664756775 * v[12] + v[13];
            y[252] =
                -0.041449997574091 * v[17] + 0.0492218732833862 * v[23] + 0.0289125014096498 * v[21] + v[24];
            y[253] =
                -0.041449997574091 * v[25] + 0.0492218732833862 * v[26] + 0.0289125014096498 * v[20] + v[27];
            y[254] =
                -0.041449997574091 * v[16] + 0.0492218732833862 * v[22] + 0.0289125014096498 * v[28] + v[0];
            y[256] = 0.0375000014901161 * v[34] + -0.109999999403954 * v[32] + y[116];
            y[257] = 0.0375000014901161 * v[35] + -0.109999999403954 * v[30] + y[117];
            y[258] = 0.0375000014901161 * v[33] + -0.109999999403954 * v[36] + y[118];
            y[260] = 0.0424309633672237 * v[41] + 0.0144476993009448 * v[38] + y[116];
            y[261] = 0.0424309633672237 * v[44] + 0.0144476993009448 * v[39] + y[117];
            y[262] = 0.0424309633672237 * v[40] + 0.0144476993009448 * v[43] + y[118];
            y[264] =
                0.0153005504980683 * v[50] + 0.0153005504980683 * v[42] + 0.0745901614427567 * y[289] + v[37];
            y[265] =
                0.0153005504980683 * v[53] + 0.0153005504980683 * v[29] + 0.0745901614427567 * y[290] + v[31];
            y[266] =
                0.0153005504980683 * v[49] + 0.0153005504980683 * v[52] + 0.0745901614427567 * y[291] + v[46];
            y[268] = -5.20417042793042e-18 * v[50] + -2.16840434497101e-18 * v[42] +
                     0.129201397299767 * y[289] + v[37];
            y[269] = -5.20417042793042e-18 * v[53] + -2.16840434497101e-18 * v[29] +
                     0.129201397299767 * y[290] + v[31];
            y[270] = -5.20417042793042e-18 * v[49] + -2.16840434497101e-18 * v[52] +
                     0.129201397299767 * y[291] + v[46];
            y[272] =
                0.0540936700999737 * v[50] + 0.0540936700999737 * v[42] + 0.198400005698204 * y[289] + v[37];
            y[273] =
                0.0540936700999737 * v[53] + 0.0540936700999737 * v[29] + 0.198400005698204 * y[290] + v[31];
            y[274] =
                0.0540936700999737 * v[49] + 0.0540936700999737 * v[52] + 0.198400005698204 * y[291] + v[46];
            y[276] = -0.0540936700999737 * v[50] + -0.0540936700999737 * v[42] + 0.198400005698204 * y[289] +
                     v[37];
            y[277] = -0.0540936700999737 * v[53] + -0.0540936700999737 * v[29] + 0.198400005698204 * y[290] +
                     v[31];
            y[278] = -0.0540936700999737 * v[49] + -0.0540936700999737 * v[52] + 0.198400005698204 * y[291] +
                     v[46];
            y[280] = v[37] + 0.212 * y[289];
            y[281] = v[31] + 0.212 * y[290];
            y[282] = v[46] + 0.212 * y[291];
            y[283] = 0.707106781186865 * v[50] + -0.70710678118623 * v[42];
            y[284] = 0.707106781186865 * v[53] + -0.70710678118623 * v[29];
            y[285] = 0.707106781186865 * v[49] + -0.70710678118623 * v[52];
            y[286] = 0.70710678118623 * v[50] + 0.707106781186865 * v[42];
            y[287] = 0.70710678118623 * v[53] + 0.707106781186865 * v[29];
            y[288] = 0.70710678118623 * v[49] + 0.707106781186865 * v[52];
            // dependent variables without operations
            y[0] = 0.;
            y[1] = 0.;
            y[2] = 0.05;
            y[3] = 0.0799999982118607;
            y[6] = 0.333;
            y[7] = 0.0599999986588955;
            y[10] = 0.333;
            y[11] = 0.0599999986588955;
            y[12] = 0.;
            y[13] = 0.;
            y[14] = 0.213;
            y[15] = 0.0599999986588955;
            y[16] = 0.;
            y[17] = 0.;
            y[18] = 0.163;
            y[19] = 0.0599999986588955;
            y[22] = 0.333000000000147;
            y[23] = 0.0599999986588955;
            y[26] = 0.333000000000392;
            y[27] = 0.0599999986588955;
            y[31] = 0.0599999986588955;
            y[35] = 0.0599999986588955;
            y[39] = 0.0599999986588955;
            y[43] = 0.0500000007450581;
            y[47] = 0.0549999997019768;
            y[51] = 0.0549999997019768;
            y[55] = 0.0599999986588955;
            y[59] = 0.0549999997019768;
            y[63] = 0.0549999997019768;
            y[67] = 0.0549999997019768;
            y[71] = 0.0599999986588955;
            y[75] = 0.0599999986588955;
            y[79] = 0.0599999986588955;
            y[83] = 0.0500000007450581;
            y[87] = 0.025000000372529;
            y[91] = 0.025000000372529;
            y[95] = 0.025000000372529;
            y[99] = 0.025000000372529;
            y[103] = 0.025000000372529;
            y[107] = 0.025000000372529;
            y[111] = 0.025000000372529;
            y[115] = 0.025000000372529;
            y[119] = 0.0500000007450581;
            y[123] = 0.0500000007450581;
            y[127] = 0.0520000010728836;
            y[131] = 0.0500000007450581;
            y[135] = 0.025000000372529;
            y[139] = 0.025000000372529;
            y[143] = 0.0199999995529652;
            y[147] = 0.0199999995529652;
            y[151] = 0.0280000008642673;
            y[155] = 0.0280000008642673;
            y[159] = 0.0280000008642673;
            y[163] = 0.0280000008642673;
            y[167] = 0.0280000008642673;
            y[171] = 0.0280000008642673;
            y[175] = 0.0260000005364418;
            y[179] = 0.0260000005364418;
            y[183] = 0.0260000005364418;
            y[187] = 0.0260000005364418;
            y[191] = 0.0260000005364418;
            y[195] = 0.0260000005364418;
            y[199] = 0.0240000002086163;
            y[203] = 0.0240000002086163;
            y[207] = 0.0240000002086163;
            y[211] = 0.0240000002086163;
            y[215] = 0.0240000002086163;
            y[219] = 0.0240000002086163;
            y[223] = 0.0120000001043081;
            y[227] = 0.0120000001043081;
            y[231] = 0.0120000001043081;
            y[235] = 0.0120000001043081;
            y[236] = 0.;
            y[237] = 0.;
            y[238] = 0.0500000007450581;
            y[239] = 0.0799999982118607;
            y[242] = 0.24799999910593;
            y[243] = 0.153941467404366;
            y[247] = 0.153941467404366;
            y[251] = 0.128210678696632;
            y[255] = 0.126465573906898;
            y[259] = 0.176216393709183;
            y[263] = 0.0948232412338257;
            y[267] = 0.0721197500824928;
            y[271] = 0.103986009955406;
            y[275] = 0.0235433969646692;
            y[279] = 0.0235433969646692;

            //
            // environment vs. robot collisions
            //

            // panda_rightfinger
            if (sphere_environment_in_collision(environment, y[276], y[277], y[278], y[279]))
            {
                if (sphere_environment_in_collision(environment, y[228], y[229], y[230], y[231]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[232], y[233], y[234], y[235]))
                {
                    return false;
                }
            }

            //
            // environment vs. robot collisions
            //

            // panda_leftfinger
            if (sphere_environment_in_collision(environment, y[272], y[273], y[274], y[275]))
            {
                if (sphere_environment_in_collision(environment, y[220], y[221], y[222], y[223]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[224], y[225], y[226], y[227]))
                {
                    return false;
                }
            }

            //
            // environment vs. robot collisions
            //

            // panda_hand
            if (sphere_environment_in_collision(environment, y[268], y[269], y[270], y[271]))
            {
                if (sphere_environment_in_collision(environment, y[148], y[149], y[150], y[151]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[152], y[153], y[154], y[155]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[156], y[157], y[158], y[159]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[160], y[161], y[162], y[163]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[164], y[165], y[166], y[167]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[168], y[169], y[170], y[171]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[172], y[173], y[174], y[175]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[176], y[177], y[178], y[179]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[180], y[181], y[182], y[183]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[184], y[185], y[186], y[187]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[188], y[189], y[190], y[191]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[192], y[193], y[194], y[195]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[196], y[197], y[198], y[199]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[200], y[201], y[202], y[203]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[204], y[205], y[206], y[207]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[208], y[209], y[210], y[211]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[212], y[213], y[214], y[215]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[216], y[217], y[218], y[219]))
                {
                    return false;
                }
            }

            //
            // environment vs. robot collisions
            //

            // panda_link7
            if (sphere_environment_in_collision(environment, y[264], y[265], y[266], y[267]))
            {
                if (sphere_environment_in_collision(environment, y[128], y[129], y[130], y[131]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[132], y[133], y[134], y[135]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[136], y[137], y[138], y[139]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[140], y[141], y[142], y[143]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[144], y[145], y[146], y[147]))
                {
                    return false;
                }
            }

            //
            // environment vs. robot collisions
            //

            // panda_link6
            if (sphere_environment_in_collision(environment, y[260], y[261], y[262], y[263]))
            {
                if (sphere_environment_in_collision(environment, y[116], y[117], y[118], y[119]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[120], y[121], y[122], y[123]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[124], y[125], y[126], y[127]))
                {
                    return false;
                }
            }

            //
            // environment vs. robot collisions
            //

            // panda_link5
            if (sphere_environment_in_collision(environment, y[256], y[257], y[258], y[259]))
            {
                if (sphere_environment_in_collision(environment, y[68], y[69], y[70], y[71]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[72], y[73], y[74], y[75]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[76], y[77], y[78], y[79]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[80], y[81], y[82], y[83]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[84], y[85], y[86], y[87]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[88], y[89], y[90], y[91]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[92], y[93], y[94], y[95]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[96], y[97], y[98], y[99]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[100], y[101], y[102], y[103]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[104], y[105], y[106], y[107]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[108], y[109], y[110], y[111]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[112], y[113], y[114], y[115]))
                {
                    return false;
                }
            }

            //
            // environment vs. robot collisions
            //

            // panda_link4
            if (sphere_environment_in_collision(environment, y[252], y[253], y[254], y[255]))
            {
                if (sphere_environment_in_collision(environment, y[52], y[53], y[54], y[55]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[56], y[57], y[58], y[59]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[60], y[61], y[62], y[63]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[64], y[65], y[66], y[67]))
                {
                    return false;
                }
            }

            //
            // environment vs. robot collisions
            //

            // panda_link3
            if (sphere_environment_in_collision(environment, y[248], y[249], y[250], y[251]))
            {
                if (sphere_environment_in_collision(environment, y[36], y[37], y[38], y[39]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[40], y[41], y[42], y[43]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[44], y[45], y[46], y[47]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[48], y[49], y[50], y[51]))
                {
                    return false;
                }
            }

            //
            // environment vs. robot collisions
            //

            // panda_link2
            if (sphere_environment_in_collision(environment, y[244], y[245], y[246], y[247]))
            {
                if (sphere_environment_in_collision(environment, y[20], y[21], y[22], y[23]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[24], y[25], y[26], y[27]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[28], y[29], y[30], y[31]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[32], y[33], y[34], y[35]))
                {
                    return false;
                }
            }

            //
            // environment vs. robot collisions
            //

            // panda_link1
            if (sphere_environment_in_collision(environment, y[240], y[241], y[242], y[243]))
            {
                if (sphere_environment_in_collision(environment, y[4], y[5], y[6], y[7]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[8], y[9], y[10], y[11]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[12], y[13], y[14], y[15]))
                {
                    return false;
                }

                if (sphere_environment_in_collision(environment, y[16], y[17], y[18], y[19]))
                {
                    return false;
                }
            }

            //
            // environment vs. robot collisions
            //

            // panda_link0
            if (sphere_environment_in_collision(environment, y[236], y[237], y[238], y[239]))
            {
                if (sphere_environment_in_collision(environment, y[0], y[1], y[2], y[3]))
                {
                    return false;
                }
            }

            //
            // robot self-collisions
            //

            // panda_link0 vs. panda_link5
            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[236], y[237], y[238], y[239], y[256], y[257], y[258], y[259]))
            {
                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[68], y[69], y[70], y[71]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[72], y[73], y[74], y[75]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[76], y[77], y[78], y[79]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[80], y[81], y[82], y[83]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[84], y[85], y[86], y[87]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[88], y[89], y[90], y[91]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[92], y[93], y[94], y[95]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[96], y[97], y[98], y[99]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[100], y[101], y[102], y[103]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[104], y[105], y[106], y[107]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[108], y[109], y[110], y[111]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[112], y[113], y[114], y[115]))
                {
                    return false;
                }
            }

            // panda_link0 vs. panda_link6
            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[236], y[237], y[238], y[239], y[260], y[261], y[262], y[263]))
            {
                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[116], y[117], y[118], y[119]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[120], y[121], y[122], y[123]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[124], y[125], y[126], y[127]))
                {
                    return false;
                }
            }

            // panda_link0 vs. panda_link7
            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[236], y[237], y[238], y[239], y[264], y[265], y[266], y[267]))
            {
                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[128], y[129], y[130], y[131]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[132], y[133], y[134], y[135]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[136], y[137], y[138], y[139]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[140], y[141], y[142], y[143]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[144], y[145], y[146], y[147]))
                {
                    return false;
                }
            }

            // panda_link0 vs. panda_hand
            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[236], y[237], y[238], y[239], y[268], y[269], y[270], y[271]))
            {
                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[148], y[149], y[150], y[151]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[152], y[153], y[154], y[155]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[156], y[157], y[158], y[159]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[160], y[161], y[162], y[163]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[164], y[165], y[166], y[167]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[168], y[169], y[170], y[171]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[172], y[173], y[174], y[175]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[176], y[177], y[178], y[179]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[180], y[181], y[182], y[183]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[184], y[185], y[186], y[187]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[188], y[189], y[190], y[191]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[192], y[193], y[194], y[195]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[196], y[197], y[198], y[199]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[200], y[201], y[202], y[203]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[204], y[205], y[206], y[207]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[208], y[209], y[210], y[211]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[212], y[213], y[214], y[215]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[216], y[217], y[218], y[219]))
                {
                    return false;
                }
            }

            // panda_link0 vs. panda_leftfinger
            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[236], y[237], y[238], y[239], y[272], y[273], y[274], y[275]))
            {
                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[220], y[221], y[222], y[223]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[224], y[225], y[226], y[227]))
                {
                    return false;
                }
            }

            // panda_link0 vs. panda_rightfinger
            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[236], y[237], y[238], y[239], y[276], y[277], y[278], y[279]))
            {
                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[228], y[229], y[230], y[231]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[0], y[1], y[2], y[3], y[232], y[233], y[234], y[235]))
                {
                    return false;
                }
            }

            // panda_link1 vs. panda_link5
            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[240], y[241], y[242], y[243], y[256], y[257], y[258], y[259]))
            {
                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[68], y[69], y[70], y[71]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[72], y[73], y[74], y[75]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[76], y[77], y[78], y[79]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[80], y[81], y[82], y[83]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[84], y[85], y[86], y[87]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[88], y[89], y[90], y[91]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[92], y[93], y[94], y[95]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[96], y[97], y[98], y[99]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[100], y[101], y[102], y[103]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[104], y[105], y[106], y[107]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[108], y[109], y[110], y[111]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[112], y[113], y[114], y[115]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[68], y[69], y[70], y[71]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[72], y[73], y[74], y[75]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[76], y[77], y[78], y[79]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[80], y[81], y[82], y[83]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[84], y[85], y[86], y[87]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[88], y[89], y[90], y[91]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[92], y[93], y[94], y[95]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[96], y[97], y[98], y[99]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[100], y[101], y[102], y[103]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[104], y[105], y[106], y[107]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[108], y[109], y[110], y[111]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[112], y[113], y[114], y[115]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[68], y[69], y[70], y[71]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[72], y[73], y[74], y[75]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[76], y[77], y[78], y[79]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[80], y[81], y[82], y[83]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[84], y[85], y[86], y[87]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[88], y[89], y[90], y[91]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[92], y[93], y[94], y[95]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[96], y[97], y[98], y[99]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[100], y[101], y[102], y[103]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[104], y[105], y[106], y[107]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[108], y[109], y[110], y[111]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[112], y[113], y[114], y[115]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[68], y[69], y[70], y[71]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[72], y[73], y[74], y[75]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[76], y[77], y[78], y[79]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[80], y[81], y[82], y[83]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[84], y[85], y[86], y[87]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[88], y[89], y[90], y[91]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[92], y[93], y[94], y[95]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[96], y[97], y[98], y[99]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[100], y[101], y[102], y[103]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[104], y[105], y[106], y[107]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[108], y[109], y[110], y[111]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[112], y[113], y[114], y[115]))
                {
                    return false;
                }
            }

            // panda_link1 vs. panda_link6
            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[240], y[241], y[242], y[243], y[260], y[261], y[262], y[263]))
            {
                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[116], y[117], y[118], y[119]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[120], y[121], y[122], y[123]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[124], y[125], y[126], y[127]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[116], y[117], y[118], y[119]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[120], y[121], y[122], y[123]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[124], y[125], y[126], y[127]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[116], y[117], y[118], y[119]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[120], y[121], y[122], y[123]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[124], y[125], y[126], y[127]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[116], y[117], y[118], y[119]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[120], y[121], y[122], y[123]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[124], y[125], y[126], y[127]))
                {
                    return false;
                }
            }

            // panda_link1 vs. panda_link7
            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[240], y[241], y[242], y[243], y[264], y[265], y[266], y[267]))
            {
                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[128], y[129], y[130], y[131]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[132], y[133], y[134], y[135]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[136], y[137], y[138], y[139]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[140], y[141], y[142], y[143]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[144], y[145], y[146], y[147]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[128], y[129], y[130], y[131]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[132], y[133], y[134], y[135]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[136], y[137], y[138], y[139]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[140], y[141], y[142], y[143]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[144], y[145], y[146], y[147]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[128], y[129], y[130], y[131]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[132], y[133], y[134], y[135]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[136], y[137], y[138], y[139]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[140], y[141], y[142], y[143]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[144], y[145], y[146], y[147]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[128], y[129], y[130], y[131]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[132], y[133], y[134], y[135]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[136], y[137], y[138], y[139]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[140], y[141], y[142], y[143]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[144], y[145], y[146], y[147]))
                {
                    return false;
                }
            }

            // panda_link1 vs. panda_hand
            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[240], y[241], y[242], y[243], y[268], y[269], y[270], y[271]))
            {
                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[148], y[149], y[150], y[151]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[152], y[153], y[154], y[155]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[156], y[157], y[158], y[159]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[160], y[161], y[162], y[163]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[164], y[165], y[166], y[167]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[168], y[169], y[170], y[171]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[172], y[173], y[174], y[175]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[176], y[177], y[178], y[179]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[180], y[181], y[182], y[183]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[184], y[185], y[186], y[187]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[188], y[189], y[190], y[191]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[192], y[193], y[194], y[195]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[196], y[197], y[198], y[199]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[200], y[201], y[202], y[203]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[204], y[205], y[206], y[207]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[208], y[209], y[210], y[211]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[212], y[213], y[214], y[215]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[216], y[217], y[218], y[219]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[148], y[149], y[150], y[151]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[152], y[153], y[154], y[155]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[156], y[157], y[158], y[159]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[160], y[161], y[162], y[163]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[164], y[165], y[166], y[167]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[168], y[169], y[170], y[171]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[172], y[173], y[174], y[175]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[176], y[177], y[178], y[179]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[180], y[181], y[182], y[183]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[184], y[185], y[186], y[187]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[188], y[189], y[190], y[191]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[192], y[193], y[194], y[195]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[196], y[197], y[198], y[199]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[200], y[201], y[202], y[203]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[204], y[205], y[206], y[207]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[208], y[209], y[210], y[211]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[212], y[213], y[214], y[215]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[216], y[217], y[218], y[219]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[148], y[149], y[150], y[151]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[152], y[153], y[154], y[155]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[156], y[157], y[158], y[159]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[160], y[161], y[162], y[163]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[164], y[165], y[166], y[167]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[168], y[169], y[170], y[171]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[172], y[173], y[174], y[175]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[176], y[177], y[178], y[179]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[180], y[181], y[182], y[183]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[184], y[185], y[186], y[187]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[188], y[189], y[190], y[191]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[192], y[193], y[194], y[195]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[196], y[197], y[198], y[199]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[200], y[201], y[202], y[203]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[204], y[205], y[206], y[207]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[208], y[209], y[210], y[211]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[212], y[213], y[214], y[215]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[216], y[217], y[218], y[219]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[148], y[149], y[150], y[151]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[152], y[153], y[154], y[155]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[156], y[157], y[158], y[159]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[160], y[161], y[162], y[163]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[164], y[165], y[166], y[167]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[168], y[169], y[170], y[171]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[172], y[173], y[174], y[175]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[176], y[177], y[178], y[179]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[180], y[181], y[182], y[183]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[184], y[185], y[186], y[187]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[188], y[189], y[190], y[191]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[192], y[193], y[194], y[195]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[196], y[197], y[198], y[199]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[200], y[201], y[202], y[203]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[204], y[205], y[206], y[207]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[208], y[209], y[210], y[211]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[212], y[213], y[214], y[215]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[216], y[217], y[218], y[219]))
                {
                    return false;
                }
            }

            // panda_link1 vs. panda_leftfinger
            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[240], y[241], y[242], y[243], y[272], y[273], y[274], y[275]))
            {
                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[220], y[221], y[222], y[223]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[224], y[225], y[226], y[227]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[220], y[221], y[222], y[223]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[224], y[225], y[226], y[227]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[220], y[221], y[222], y[223]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[224], y[225], y[226], y[227]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[220], y[221], y[222], y[223]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[224], y[225], y[226], y[227]))
                {
                    return false;
                }
            }

            // panda_link1 vs. panda_rightfinger
            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[240], y[241], y[242], y[243], y[276], y[277], y[278], y[279]))
            {
                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[228], y[229], y[230], y[231]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[4], y[5], y[6], y[7], y[232], y[233], y[234], y[235]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[228], y[229], y[230], y[231]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[8], y[9], y[10], y[11], y[232], y[233], y[234], y[235]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[228], y[229], y[230], y[231]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[12], y[13], y[14], y[15], y[232], y[233], y[234], y[235]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[228], y[229], y[230], y[231]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[16], y[17], y[18], y[19], y[232], y[233], y[234], y[235]))
                {
                    return false;
                }
            }

            // panda_link2 vs. panda_link5
            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[244], y[245], y[246], y[247], y[256], y[257], y[258], y[259]))
            {
                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[68], y[69], y[70], y[71]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[72], y[73], y[74], y[75]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[76], y[77], y[78], y[79]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[80], y[81], y[82], y[83]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[84], y[85], y[86], y[87]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[88], y[89], y[90], y[91]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[92], y[93], y[94], y[95]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[96], y[97], y[98], y[99]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[100], y[101], y[102], y[103]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[104], y[105], y[106], y[107]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[108], y[109], y[110], y[111]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[112], y[113], y[114], y[115]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[68], y[69], y[70], y[71]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[72], y[73], y[74], y[75]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[76], y[77], y[78], y[79]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[80], y[81], y[82], y[83]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[84], y[85], y[86], y[87]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[88], y[89], y[90], y[91]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[92], y[93], y[94], y[95]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[96], y[97], y[98], y[99]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[100], y[101], y[102], y[103]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[104], y[105], y[106], y[107]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[108], y[109], y[110], y[111]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[112], y[113], y[114], y[115]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[68], y[69], y[70], y[71]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[72], y[73], y[74], y[75]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[76], y[77], y[78], y[79]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[80], y[81], y[82], y[83]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[84], y[85], y[86], y[87]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[88], y[89], y[90], y[91]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[92], y[93], y[94], y[95]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[96], y[97], y[98], y[99]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[100], y[101], y[102], y[103]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[104], y[105], y[106], y[107]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[108], y[109], y[110], y[111]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[112], y[113], y[114], y[115]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[68], y[69], y[70], y[71]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[72], y[73], y[74], y[75]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[76], y[77], y[78], y[79]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[80], y[81], y[82], y[83]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[84], y[85], y[86], y[87]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[88], y[89], y[90], y[91]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[92], y[93], y[94], y[95]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[96], y[97], y[98], y[99]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[100], y[101], y[102], y[103]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[104], y[105], y[106], y[107]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[108], y[109], y[110], y[111]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[112], y[113], y[114], y[115]))
                {
                    return false;
                }
            }

            // panda_link2 vs. panda_link7
            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[244], y[245], y[246], y[247], y[264], y[265], y[266], y[267]))
            {
                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[128], y[129], y[130], y[131]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[132], y[133], y[134], y[135]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[136], y[137], y[138], y[139]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[140], y[141], y[142], y[143]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[144], y[145], y[146], y[147]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[128], y[129], y[130], y[131]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[132], y[133], y[134], y[135]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[136], y[137], y[138], y[139]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[140], y[141], y[142], y[143]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[144], y[145], y[146], y[147]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[128], y[129], y[130], y[131]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[132], y[133], y[134], y[135]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[136], y[137], y[138], y[139]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[140], y[141], y[142], y[143]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[144], y[145], y[146], y[147]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[128], y[129], y[130], y[131]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[132], y[133], y[134], y[135]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[136], y[137], y[138], y[139]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[140], y[141], y[142], y[143]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[144], y[145], y[146], y[147]))
                {
                    return false;
                }
            }

            // panda_link2 vs. panda_hand
            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[244], y[245], y[246], y[247], y[268], y[269], y[270], y[271]))
            {
                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[148], y[149], y[150], y[151]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[152], y[153], y[154], y[155]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[156], y[157], y[158], y[159]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[160], y[161], y[162], y[163]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[164], y[165], y[166], y[167]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[168], y[169], y[170], y[171]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[172], y[173], y[174], y[175]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[176], y[177], y[178], y[179]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[180], y[181], y[182], y[183]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[184], y[185], y[186], y[187]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[188], y[189], y[190], y[191]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[192], y[193], y[194], y[195]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[196], y[197], y[198], y[199]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[200], y[201], y[202], y[203]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[204], y[205], y[206], y[207]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[208], y[209], y[210], y[211]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[212], y[213], y[214], y[215]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[216], y[217], y[218], y[219]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[148], y[149], y[150], y[151]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[152], y[153], y[154], y[155]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[156], y[157], y[158], y[159]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[160], y[161], y[162], y[163]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[164], y[165], y[166], y[167]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[168], y[169], y[170], y[171]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[172], y[173], y[174], y[175]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[176], y[177], y[178], y[179]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[180], y[181], y[182], y[183]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[184], y[185], y[186], y[187]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[188], y[189], y[190], y[191]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[192], y[193], y[194], y[195]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[196], y[197], y[198], y[199]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[200], y[201], y[202], y[203]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[204], y[205], y[206], y[207]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[208], y[209], y[210], y[211]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[212], y[213], y[214], y[215]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[216], y[217], y[218], y[219]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[148], y[149], y[150], y[151]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[152], y[153], y[154], y[155]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[156], y[157], y[158], y[159]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[160], y[161], y[162], y[163]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[164], y[165], y[166], y[167]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[168], y[169], y[170], y[171]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[172], y[173], y[174], y[175]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[176], y[177], y[178], y[179]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[180], y[181], y[182], y[183]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[184], y[185], y[186], y[187]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[188], y[189], y[190], y[191]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[192], y[193], y[194], y[195]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[196], y[197], y[198], y[199]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[200], y[201], y[202], y[203]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[204], y[205], y[206], y[207]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[208], y[209], y[210], y[211]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[212], y[213], y[214], y[215]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[216], y[217], y[218], y[219]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[148], y[149], y[150], y[151]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[152], y[153], y[154], y[155]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[156], y[157], y[158], y[159]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[160], y[161], y[162], y[163]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[164], y[165], y[166], y[167]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[168], y[169], y[170], y[171]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[172], y[173], y[174], y[175]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[176], y[177], y[178], y[179]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[180], y[181], y[182], y[183]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[184], y[185], y[186], y[187]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[188], y[189], y[190], y[191]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[192], y[193], y[194], y[195]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[196], y[197], y[198], y[199]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[200], y[201], y[202], y[203]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[204], y[205], y[206], y[207]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[208], y[209], y[210], y[211]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[212], y[213], y[214], y[215]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[216], y[217], y[218], y[219]))
                {
                    return false;
                }
            }

            // panda_link2 vs. panda_leftfinger
            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[244], y[245], y[246], y[247], y[272], y[273], y[274], y[275]))
            {
                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[220], y[221], y[222], y[223]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[224], y[225], y[226], y[227]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[220], y[221], y[222], y[223]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[224], y[225], y[226], y[227]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[220], y[221], y[222], y[223]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[224], y[225], y[226], y[227]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[220], y[221], y[222], y[223]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[224], y[225], y[226], y[227]))
                {
                    return false;
                }
            }

            // panda_link2 vs. panda_rightfinger
            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[244], y[245], y[246], y[247], y[276], y[277], y[278], y[279]))
            {
                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[228], y[229], y[230], y[231]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[20], y[21], y[22], y[23], y[232], y[233], y[234], y[235]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[228], y[229], y[230], y[231]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[24], y[25], y[26], y[27], y[232], y[233], y[234], y[235]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[228], y[229], y[230], y[231]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[28], y[29], y[30], y[31], y[232], y[233], y[234], y[235]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[228], y[229], y[230], y[231]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[32], y[33], y[34], y[35], y[232], y[233], y[234], y[235]))
                {
                    return false;
                }
            }

            // panda_link5 vs. panda_link7
            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[256], y[257], y[258], y[259], y[264], y[265], y[266], y[267]))
            {
                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[68], y[69], y[70], y[71], y[128], y[129], y[130], y[131]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[68], y[69], y[70], y[71], y[132], y[133], y[134], y[135]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[68], y[69], y[70], y[71], y[136], y[137], y[138], y[139]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[68], y[69], y[70], y[71], y[140], y[141], y[142], y[143]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[68], y[69], y[70], y[71], y[144], y[145], y[146], y[147]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[72], y[73], y[74], y[75], y[128], y[129], y[130], y[131]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[72], y[73], y[74], y[75], y[132], y[133], y[134], y[135]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[72], y[73], y[74], y[75], y[136], y[137], y[138], y[139]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[72], y[73], y[74], y[75], y[140], y[141], y[142], y[143]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[72], y[73], y[74], y[75], y[144], y[145], y[146], y[147]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[76], y[77], y[78], y[79], y[128], y[129], y[130], y[131]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[76], y[77], y[78], y[79], y[132], y[133], y[134], y[135]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[76], y[77], y[78], y[79], y[136], y[137], y[138], y[139]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[76], y[77], y[78], y[79], y[140], y[141], y[142], y[143]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[76], y[77], y[78], y[79], y[144], y[145], y[146], y[147]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[80], y[81], y[82], y[83], y[128], y[129], y[130], y[131]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[80], y[81], y[82], y[83], y[132], y[133], y[134], y[135]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[80], y[81], y[82], y[83], y[136], y[137], y[138], y[139]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[80], y[81], y[82], y[83], y[140], y[141], y[142], y[143]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[80], y[81], y[82], y[83], y[144], y[145], y[146], y[147]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[84], y[85], y[86], y[87], y[128], y[129], y[130], y[131]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[84], y[85], y[86], y[87], y[132], y[133], y[134], y[135]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[84], y[85], y[86], y[87], y[136], y[137], y[138], y[139]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[84], y[85], y[86], y[87], y[140], y[141], y[142], y[143]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[84], y[85], y[86], y[87], y[144], y[145], y[146], y[147]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[88], y[89], y[90], y[91], y[128], y[129], y[130], y[131]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[88], y[89], y[90], y[91], y[132], y[133], y[134], y[135]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[88], y[89], y[90], y[91], y[136], y[137], y[138], y[139]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[88], y[89], y[90], y[91], y[140], y[141], y[142], y[143]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[88], y[89], y[90], y[91], y[144], y[145], y[146], y[147]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[92], y[93], y[94], y[95], y[128], y[129], y[130], y[131]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[92], y[93], y[94], y[95], y[132], y[133], y[134], y[135]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[92], y[93], y[94], y[95], y[136], y[137], y[138], y[139]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[92], y[93], y[94], y[95], y[140], y[141], y[142], y[143]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[92], y[93], y[94], y[95], y[144], y[145], y[146], y[147]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[96], y[97], y[98], y[99], y[128], y[129], y[130], y[131]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[96], y[97], y[98], y[99], y[132], y[133], y[134], y[135]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[96], y[97], y[98], y[99], y[136], y[137], y[138], y[139]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[96], y[97], y[98], y[99], y[140], y[141], y[142], y[143]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[96], y[97], y[98], y[99], y[144], y[145], y[146], y[147]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[100], y[101], y[102], y[103], y[128], y[129], y[130], y[131]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[100], y[101], y[102], y[103], y[132], y[133], y[134], y[135]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[100], y[101], y[102], y[103], y[136], y[137], y[138], y[139]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[100], y[101], y[102], y[103], y[140], y[141], y[142], y[143]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[100], y[101], y[102], y[103], y[144], y[145], y[146], y[147]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[104], y[105], y[106], y[107], y[128], y[129], y[130], y[131]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[104], y[105], y[106], y[107], y[132], y[133], y[134], y[135]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[104], y[105], y[106], y[107], y[136], y[137], y[138], y[139]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[104], y[105], y[106], y[107], y[140], y[141], y[142], y[143]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[104], y[105], y[106], y[107], y[144], y[145], y[146], y[147]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[108], y[109], y[110], y[111], y[128], y[129], y[130], y[131]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[108], y[109], y[110], y[111], y[132], y[133], y[134], y[135]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[108], y[109], y[110], y[111], y[136], y[137], y[138], y[139]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[108], y[109], y[110], y[111], y[140], y[141], y[142], y[143]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[108], y[109], y[110], y[111], y[144], y[145], y[146], y[147]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[112], y[113], y[114], y[115], y[128], y[129], y[130], y[131]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[112], y[113], y[114], y[115], y[132], y[133], y[134], y[135]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[112], y[113], y[114], y[115], y[136], y[137], y[138], y[139]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[112], y[113], y[114], y[115], y[140], y[141], y[142], y[143]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[112], y[113], y[114], y[115], y[144], y[145], y[146], y[147]))
                {
                    return false;
                }
            }

            // panda_link5 vs. panda_hand
            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[256], y[257], y[258], y[259], y[268], y[269], y[270], y[271]))
            {
                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[68], y[69], y[70], y[71], y[148], y[149], y[150], y[151]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[68], y[69], y[70], y[71], y[152], y[153], y[154], y[155]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[68], y[69], y[70], y[71], y[156], y[157], y[158], y[159]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[68], y[69], y[70], y[71], y[160], y[161], y[162], y[163]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[68], y[69], y[70], y[71], y[164], y[165], y[166], y[167]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[68], y[69], y[70], y[71], y[168], y[169], y[170], y[171]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[68], y[69], y[70], y[71], y[172], y[173], y[174], y[175]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[68], y[69], y[70], y[71], y[176], y[177], y[178], y[179]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[68], y[69], y[70], y[71], y[180], y[181], y[182], y[183]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[68], y[69], y[70], y[71], y[184], y[185], y[186], y[187]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[68], y[69], y[70], y[71], y[188], y[189], y[190], y[191]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[68], y[69], y[70], y[71], y[192], y[193], y[194], y[195]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[68], y[69], y[70], y[71], y[196], y[197], y[198], y[199]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[68], y[69], y[70], y[71], y[200], y[201], y[202], y[203]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[68], y[69], y[70], y[71], y[204], y[205], y[206], y[207]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[68], y[69], y[70], y[71], y[208], y[209], y[210], y[211]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[68], y[69], y[70], y[71], y[212], y[213], y[214], y[215]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[68], y[69], y[70], y[71], y[216], y[217], y[218], y[219]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[72], y[73], y[74], y[75], y[148], y[149], y[150], y[151]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[72], y[73], y[74], y[75], y[152], y[153], y[154], y[155]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[72], y[73], y[74], y[75], y[156], y[157], y[158], y[159]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[72], y[73], y[74], y[75], y[160], y[161], y[162], y[163]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[72], y[73], y[74], y[75], y[164], y[165], y[166], y[167]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[72], y[73], y[74], y[75], y[168], y[169], y[170], y[171]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[72], y[73], y[74], y[75], y[172], y[173], y[174], y[175]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[72], y[73], y[74], y[75], y[176], y[177], y[178], y[179]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[72], y[73], y[74], y[75], y[180], y[181], y[182], y[183]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[72], y[73], y[74], y[75], y[184], y[185], y[186], y[187]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[72], y[73], y[74], y[75], y[188], y[189], y[190], y[191]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[72], y[73], y[74], y[75], y[192], y[193], y[194], y[195]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[72], y[73], y[74], y[75], y[196], y[197], y[198], y[199]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[72], y[73], y[74], y[75], y[200], y[201], y[202], y[203]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[72], y[73], y[74], y[75], y[204], y[205], y[206], y[207]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[72], y[73], y[74], y[75], y[208], y[209], y[210], y[211]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[72], y[73], y[74], y[75], y[212], y[213], y[214], y[215]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[72], y[73], y[74], y[75], y[216], y[217], y[218], y[219]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[76], y[77], y[78], y[79], y[148], y[149], y[150], y[151]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[76], y[77], y[78], y[79], y[152], y[153], y[154], y[155]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[76], y[77], y[78], y[79], y[156], y[157], y[158], y[159]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[76], y[77], y[78], y[79], y[160], y[161], y[162], y[163]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[76], y[77], y[78], y[79], y[164], y[165], y[166], y[167]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[76], y[77], y[78], y[79], y[168], y[169], y[170], y[171]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[76], y[77], y[78], y[79], y[172], y[173], y[174], y[175]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[76], y[77], y[78], y[79], y[176], y[177], y[178], y[179]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[76], y[77], y[78], y[79], y[180], y[181], y[182], y[183]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[76], y[77], y[78], y[79], y[184], y[185], y[186], y[187]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[76], y[77], y[78], y[79], y[188], y[189], y[190], y[191]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[76], y[77], y[78], y[79], y[192], y[193], y[194], y[195]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[76], y[77], y[78], y[79], y[196], y[197], y[198], y[199]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[76], y[77], y[78], y[79], y[200], y[201], y[202], y[203]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[76], y[77], y[78], y[79], y[204], y[205], y[206], y[207]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[76], y[77], y[78], y[79], y[208], y[209], y[210], y[211]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[76], y[77], y[78], y[79], y[212], y[213], y[214], y[215]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[76], y[77], y[78], y[79], y[216], y[217], y[218], y[219]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[80], y[81], y[82], y[83], y[148], y[149], y[150], y[151]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[80], y[81], y[82], y[83], y[152], y[153], y[154], y[155]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[80], y[81], y[82], y[83], y[156], y[157], y[158], y[159]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[80], y[81], y[82], y[83], y[160], y[161], y[162], y[163]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[80], y[81], y[82], y[83], y[164], y[165], y[166], y[167]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[80], y[81], y[82], y[83], y[168], y[169], y[170], y[171]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[80], y[81], y[82], y[83], y[172], y[173], y[174], y[175]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[80], y[81], y[82], y[83], y[176], y[177], y[178], y[179]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[80], y[81], y[82], y[83], y[180], y[181], y[182], y[183]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[80], y[81], y[82], y[83], y[184], y[185], y[186], y[187]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[80], y[81], y[82], y[83], y[188], y[189], y[190], y[191]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[80], y[81], y[82], y[83], y[192], y[193], y[194], y[195]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[80], y[81], y[82], y[83], y[196], y[197], y[198], y[199]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[80], y[81], y[82], y[83], y[200], y[201], y[202], y[203]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[80], y[81], y[82], y[83], y[204], y[205], y[206], y[207]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[80], y[81], y[82], y[83], y[208], y[209], y[210], y[211]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[80], y[81], y[82], y[83], y[212], y[213], y[214], y[215]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[80], y[81], y[82], y[83], y[216], y[217], y[218], y[219]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[84], y[85], y[86], y[87], y[148], y[149], y[150], y[151]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[84], y[85], y[86], y[87], y[152], y[153], y[154], y[155]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[84], y[85], y[86], y[87], y[156], y[157], y[158], y[159]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[84], y[85], y[86], y[87], y[160], y[161], y[162], y[163]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[84], y[85], y[86], y[87], y[164], y[165], y[166], y[167]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[84], y[85], y[86], y[87], y[168], y[169], y[170], y[171]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[84], y[85], y[86], y[87], y[172], y[173], y[174], y[175]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[84], y[85], y[86], y[87], y[176], y[177], y[178], y[179]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[84], y[85], y[86], y[87], y[180], y[181], y[182], y[183]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[84], y[85], y[86], y[87], y[184], y[185], y[186], y[187]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[84], y[85], y[86], y[87], y[188], y[189], y[190], y[191]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[84], y[85], y[86], y[87], y[192], y[193], y[194], y[195]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[84], y[85], y[86], y[87], y[196], y[197], y[198], y[199]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[84], y[85], y[86], y[87], y[200], y[201], y[202], y[203]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[84], y[85], y[86], y[87], y[204], y[205], y[206], y[207]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[84], y[85], y[86], y[87], y[208], y[209], y[210], y[211]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[84], y[85], y[86], y[87], y[212], y[213], y[214], y[215]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[84], y[85], y[86], y[87], y[216], y[217], y[218], y[219]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[88], y[89], y[90], y[91], y[148], y[149], y[150], y[151]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[88], y[89], y[90], y[91], y[152], y[153], y[154], y[155]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[88], y[89], y[90], y[91], y[156], y[157], y[158], y[159]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[88], y[89], y[90], y[91], y[160], y[161], y[162], y[163]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[88], y[89], y[90], y[91], y[164], y[165], y[166], y[167]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[88], y[89], y[90], y[91], y[168], y[169], y[170], y[171]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[88], y[89], y[90], y[91], y[172], y[173], y[174], y[175]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[88], y[89], y[90], y[91], y[176], y[177], y[178], y[179]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[88], y[89], y[90], y[91], y[180], y[181], y[182], y[183]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[88], y[89], y[90], y[91], y[184], y[185], y[186], y[187]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[88], y[89], y[90], y[91], y[188], y[189], y[190], y[191]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[88], y[89], y[90], y[91], y[192], y[193], y[194], y[195]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[88], y[89], y[90], y[91], y[196], y[197], y[198], y[199]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[88], y[89], y[90], y[91], y[200], y[201], y[202], y[203]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[88], y[89], y[90], y[91], y[204], y[205], y[206], y[207]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[88], y[89], y[90], y[91], y[208], y[209], y[210], y[211]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[88], y[89], y[90], y[91], y[212], y[213], y[214], y[215]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[88], y[89], y[90], y[91], y[216], y[217], y[218], y[219]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[92], y[93], y[94], y[95], y[148], y[149], y[150], y[151]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[92], y[93], y[94], y[95], y[152], y[153], y[154], y[155]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[92], y[93], y[94], y[95], y[156], y[157], y[158], y[159]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[92], y[93], y[94], y[95], y[160], y[161], y[162], y[163]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[92], y[93], y[94], y[95], y[164], y[165], y[166], y[167]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[92], y[93], y[94], y[95], y[168], y[169], y[170], y[171]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[92], y[93], y[94], y[95], y[172], y[173], y[174], y[175]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[92], y[93], y[94], y[95], y[176], y[177], y[178], y[179]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[92], y[93], y[94], y[95], y[180], y[181], y[182], y[183]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[92], y[93], y[94], y[95], y[184], y[185], y[186], y[187]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[92], y[93], y[94], y[95], y[188], y[189], y[190], y[191]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[92], y[93], y[94], y[95], y[192], y[193], y[194], y[195]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[92], y[93], y[94], y[95], y[196], y[197], y[198], y[199]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[92], y[93], y[94], y[95], y[200], y[201], y[202], y[203]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[92], y[93], y[94], y[95], y[204], y[205], y[206], y[207]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[92], y[93], y[94], y[95], y[208], y[209], y[210], y[211]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[92], y[93], y[94], y[95], y[212], y[213], y[214], y[215]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[92], y[93], y[94], y[95], y[216], y[217], y[218], y[219]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[96], y[97], y[98], y[99], y[148], y[149], y[150], y[151]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[96], y[97], y[98], y[99], y[152], y[153], y[154], y[155]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[96], y[97], y[98], y[99], y[156], y[157], y[158], y[159]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[96], y[97], y[98], y[99], y[160], y[161], y[162], y[163]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[96], y[97], y[98], y[99], y[164], y[165], y[166], y[167]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[96], y[97], y[98], y[99], y[168], y[169], y[170], y[171]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[96], y[97], y[98], y[99], y[172], y[173], y[174], y[175]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[96], y[97], y[98], y[99], y[176], y[177], y[178], y[179]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[96], y[97], y[98], y[99], y[180], y[181], y[182], y[183]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[96], y[97], y[98], y[99], y[184], y[185], y[186], y[187]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[96], y[97], y[98], y[99], y[188], y[189], y[190], y[191]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[96], y[97], y[98], y[99], y[192], y[193], y[194], y[195]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[96], y[97], y[98], y[99], y[196], y[197], y[198], y[199]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[96], y[97], y[98], y[99], y[200], y[201], y[202], y[203]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[96], y[97], y[98], y[99], y[204], y[205], y[206], y[207]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[96], y[97], y[98], y[99], y[208], y[209], y[210], y[211]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[96], y[97], y[98], y[99], y[212], y[213], y[214], y[215]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[96], y[97], y[98], y[99], y[216], y[217], y[218], y[219]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[100], y[101], y[102], y[103], y[148], y[149], y[150], y[151]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[100], y[101], y[102], y[103], y[152], y[153], y[154], y[155]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[100], y[101], y[102], y[103], y[156], y[157], y[158], y[159]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[100], y[101], y[102], y[103], y[160], y[161], y[162], y[163]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[100], y[101], y[102], y[103], y[164], y[165], y[166], y[167]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[100], y[101], y[102], y[103], y[168], y[169], y[170], y[171]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[100], y[101], y[102], y[103], y[172], y[173], y[174], y[175]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[100], y[101], y[102], y[103], y[176], y[177], y[178], y[179]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[100], y[101], y[102], y[103], y[180], y[181], y[182], y[183]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[100], y[101], y[102], y[103], y[184], y[185], y[186], y[187]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[100], y[101], y[102], y[103], y[188], y[189], y[190], y[191]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[100], y[101], y[102], y[103], y[192], y[193], y[194], y[195]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[100], y[101], y[102], y[103], y[196], y[197], y[198], y[199]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[100], y[101], y[102], y[103], y[200], y[201], y[202], y[203]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[100], y[101], y[102], y[103], y[204], y[205], y[206], y[207]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[100], y[101], y[102], y[103], y[208], y[209], y[210], y[211]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[100], y[101], y[102], y[103], y[212], y[213], y[214], y[215]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[100], y[101], y[102], y[103], y[216], y[217], y[218], y[219]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[104], y[105], y[106], y[107], y[148], y[149], y[150], y[151]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[104], y[105], y[106], y[107], y[152], y[153], y[154], y[155]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[104], y[105], y[106], y[107], y[156], y[157], y[158], y[159]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[104], y[105], y[106], y[107], y[160], y[161], y[162], y[163]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[104], y[105], y[106], y[107], y[164], y[165], y[166], y[167]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[104], y[105], y[106], y[107], y[168], y[169], y[170], y[171]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[104], y[105], y[106], y[107], y[172], y[173], y[174], y[175]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[104], y[105], y[106], y[107], y[176], y[177], y[178], y[179]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[104], y[105], y[106], y[107], y[180], y[181], y[182], y[183]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[104], y[105], y[106], y[107], y[184], y[185], y[186], y[187]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[104], y[105], y[106], y[107], y[188], y[189], y[190], y[191]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[104], y[105], y[106], y[107], y[192], y[193], y[194], y[195]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[104], y[105], y[106], y[107], y[196], y[197], y[198], y[199]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[104], y[105], y[106], y[107], y[200], y[201], y[202], y[203]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[104], y[105], y[106], y[107], y[204], y[205], y[206], y[207]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[104], y[105], y[106], y[107], y[208], y[209], y[210], y[211]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[104], y[105], y[106], y[107], y[212], y[213], y[214], y[215]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[104], y[105], y[106], y[107], y[216], y[217], y[218], y[219]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[108], y[109], y[110], y[111], y[148], y[149], y[150], y[151]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[108], y[109], y[110], y[111], y[152], y[153], y[154], y[155]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[108], y[109], y[110], y[111], y[156], y[157], y[158], y[159]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[108], y[109], y[110], y[111], y[160], y[161], y[162], y[163]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[108], y[109], y[110], y[111], y[164], y[165], y[166], y[167]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[108], y[109], y[110], y[111], y[168], y[169], y[170], y[171]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[108], y[109], y[110], y[111], y[172], y[173], y[174], y[175]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[108], y[109], y[110], y[111], y[176], y[177], y[178], y[179]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[108], y[109], y[110], y[111], y[180], y[181], y[182], y[183]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[108], y[109], y[110], y[111], y[184], y[185], y[186], y[187]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[108], y[109], y[110], y[111], y[188], y[189], y[190], y[191]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[108], y[109], y[110], y[111], y[192], y[193], y[194], y[195]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[108], y[109], y[110], y[111], y[196], y[197], y[198], y[199]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[108], y[109], y[110], y[111], y[200], y[201], y[202], y[203]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[108], y[109], y[110], y[111], y[204], y[205], y[206], y[207]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[108], y[109], y[110], y[111], y[208], y[209], y[210], y[211]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[108], y[109], y[110], y[111], y[212], y[213], y[214], y[215]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[108], y[109], y[110], y[111], y[216], y[217], y[218], y[219]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[112], y[113], y[114], y[115], y[148], y[149], y[150], y[151]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[112], y[113], y[114], y[115], y[152], y[153], y[154], y[155]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[112], y[113], y[114], y[115], y[156], y[157], y[158], y[159]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[112], y[113], y[114], y[115], y[160], y[161], y[162], y[163]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[112], y[113], y[114], y[115], y[164], y[165], y[166], y[167]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[112], y[113], y[114], y[115], y[168], y[169], y[170], y[171]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[112], y[113], y[114], y[115], y[172], y[173], y[174], y[175]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[112], y[113], y[114], y[115], y[176], y[177], y[178], y[179]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[112], y[113], y[114], y[115], y[180], y[181], y[182], y[183]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[112], y[113], y[114], y[115], y[184], y[185], y[186], y[187]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[112], y[113], y[114], y[115], y[188], y[189], y[190], y[191]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[112], y[113], y[114], y[115], y[192], y[193], y[194], y[195]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[112], y[113], y[114], y[115], y[196], y[197], y[198], y[199]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[112], y[113], y[114], y[115], y[200], y[201], y[202], y[203]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[112], y[113], y[114], y[115], y[204], y[205], y[206], y[207]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[112], y[113], y[114], y[115], y[208], y[209], y[210], y[211]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[112], y[113], y[114], y[115], y[212], y[213], y[214], y[215]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[112], y[113], y[114], y[115], y[216], y[217], y[218], y[219]))
                {
                    return false;
                }
            }

            // panda_link5 vs. panda_leftfinger
            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[256], y[257], y[258], y[259], y[272], y[273], y[274], y[275]))
            {
                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[68], y[69], y[70], y[71], y[220], y[221], y[222], y[223]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[68], y[69], y[70], y[71], y[224], y[225], y[226], y[227]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[72], y[73], y[74], y[75], y[220], y[221], y[222], y[223]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[72], y[73], y[74], y[75], y[224], y[225], y[226], y[227]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[76], y[77], y[78], y[79], y[220], y[221], y[222], y[223]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[76], y[77], y[78], y[79], y[224], y[225], y[226], y[227]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[80], y[81], y[82], y[83], y[220], y[221], y[222], y[223]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[80], y[81], y[82], y[83], y[224], y[225], y[226], y[227]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[84], y[85], y[86], y[87], y[220], y[221], y[222], y[223]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[84], y[85], y[86], y[87], y[224], y[225], y[226], y[227]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[88], y[89], y[90], y[91], y[220], y[221], y[222], y[223]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[88], y[89], y[90], y[91], y[224], y[225], y[226], y[227]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[92], y[93], y[94], y[95], y[220], y[221], y[222], y[223]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[92], y[93], y[94], y[95], y[224], y[225], y[226], y[227]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[96], y[97], y[98], y[99], y[220], y[221], y[222], y[223]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[96], y[97], y[98], y[99], y[224], y[225], y[226], y[227]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[100], y[101], y[102], y[103], y[220], y[221], y[222], y[223]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[100], y[101], y[102], y[103], y[224], y[225], y[226], y[227]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[104], y[105], y[106], y[107], y[220], y[221], y[222], y[223]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[104], y[105], y[106], y[107], y[224], y[225], y[226], y[227]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[108], y[109], y[110], y[111], y[220], y[221], y[222], y[223]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[108], y[109], y[110], y[111], y[224], y[225], y[226], y[227]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[112], y[113], y[114], y[115], y[220], y[221], y[222], y[223]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[112], y[113], y[114], y[115], y[224], y[225], y[226], y[227]))
                {
                    return false;
                }
            }

            // panda_link5 vs. panda_rightfinger
            if (sphere_sphere_self_collision<decltype(x[0])>(
                    y[256], y[257], y[258], y[259], y[276], y[277], y[278], y[279]))
            {
                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[68], y[69], y[70], y[71], y[228], y[229], y[230], y[231]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[68], y[69], y[70], y[71], y[232], y[233], y[234], y[235]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[72], y[73], y[74], y[75], y[228], y[229], y[230], y[231]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[72], y[73], y[74], y[75], y[232], y[233], y[234], y[235]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[76], y[77], y[78], y[79], y[228], y[229], y[230], y[231]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[76], y[77], y[78], y[79], y[232], y[233], y[234], y[235]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[80], y[81], y[82], y[83], y[228], y[229], y[230], y[231]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[80], y[81], y[82], y[83], y[232], y[233], y[234], y[235]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[84], y[85], y[86], y[87], y[228], y[229], y[230], y[231]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[84], y[85], y[86], y[87], y[232], y[233], y[234], y[235]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[88], y[89], y[90], y[91], y[228], y[229], y[230], y[231]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[88], y[89], y[90], y[91], y[232], y[233], y[234], y[235]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[92], y[93], y[94], y[95], y[228], y[229], y[230], y[231]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[92], y[93], y[94], y[95], y[232], y[233], y[234], y[235]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[96], y[97], y[98], y[99], y[228], y[229], y[230], y[231]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[96], y[97], y[98], y[99], y[232], y[233], y[234], y[235]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[100], y[101], y[102], y[103], y[228], y[229], y[230], y[231]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[100], y[101], y[102], y[103], y[232], y[233], y[234], y[235]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[104], y[105], y[106], y[107], y[228], y[229], y[230], y[231]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[104], y[105], y[106], y[107], y[232], y[233], y[234], y[235]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[108], y[109], y[110], y[111], y[228], y[229], y[230], y[231]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[108], y[109], y[110], y[111], y[232], y[233], y[234], y[235]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[112], y[113], y[114], y[115], y[228], y[229], y[230], y[231]))
                {
                    return false;
                }

                if (sphere_sphere_self_collision<decltype(x[0])>(
                        y[112], y[113], y[114], y[115], y[232], y[233], y[234], y[235]))
                {
                    return false;
                }
            }

            // attaching at panda_grasptarget
            set_attachment_pose(environment, to_isometry(&y[280]));

            //
            // attachment vs. environment collisions
            //
            if (attachment_environment_collision(environment))
            {
                return false;
            }

            //
            // attachment vs. robot collisions
            //

            // Attachment vs. panda_link0
            if (attachment_sphere_collision<decltype(x[0])>(environment, y[236], y[237], y[238], y[239]))
            {
                if (attachment_sphere_collision<decltype(x[0])>(environment, y[0], y[1], y[2], y[3]))
                {
                    return false;
                }
            }

            // Attachment vs. panda_link1
            if (attachment_sphere_collision<decltype(x[0])>(environment, y[240], y[241], y[242], y[243]))
            {
                if (attachment_sphere_collision<decltype(x[0])>(environment, y[4], y[5], y[6], y[7]))
                {
                    return false;
                }

                if (attachment_sphere_collision<decltype(x[0])>(environment, y[8], y[9], y[10], y[11]))
                {
                    return false;
                }

                if (attachment_sphere_collision<decltype(x[0])>(environment, y[12], y[13], y[14], y[15]))
                {
                    return false;
                }

                if (attachment_sphere_collision<decltype(x[0])>(environment, y[16], y[17], y[18], y[19]))
                {
                    return false;
                }
            }

            // Attachment vs. panda_link2
            if (attachment_sphere_collision<decltype(x[0])>(environment, y[244], y[245], y[246], y[247]))
            {
                if (attachment_sphere_collision<decltype(x[0])>(environment, y[20], y[21], y[22], y[23]))
                {
                    return false;
                }

                if (attachment_sphere_collision<decltype(x[0])>(environment, y[24], y[25], y[26], y[27]))
                {
                    return false;
                }

                if (attachment_sphere_collision<decltype(x[0])>(environment, y[28], y[29], y[30], y[31]))
                {
                    return false;
                }

                if (attachment_sphere_collision<decltype(x[0])>(environment, y[32], y[33], y[34], y[35]))
                {
                    return false;
                }
            }

            // Attachment vs. panda_link5
            if (attachment_sphere_collision<decltype(x[0])>(environment, y[256], y[257], y[258], y[259]))
            {
                if (attachment_sphere_collision<decltype(x[0])>(environment, y[68], y[69], y[70], y[71]))
                {
                    return false;
                }

                if (attachment_sphere_collision<decltype(x[0])>(environment, y[72], y[73], y[74], y[75]))
                {
                    return false;
                }

                if (attachment_sphere_collision<decltype(x[0])>(environment, y[76], y[77], y[78], y[79]))
                {
                    return false;
                }

                if (attachment_sphere_collision<decltype(x[0])>(environment, y[80], y[81], y[82], y[83]))
                {
                    return false;
                }

                if (attachment_sphere_collision<decltype(x[0])>(environment, y[84], y[85], y[86], y[87]))
                {
                    return false;
                }

                if (attachment_sphere_collision<decltype(x[0])>(environment, y[88], y[89], y[90], y[91]))
                {
                    return false;
                }

                if (attachment_sphere_collision<decltype(x[0])>(environment, y[92], y[93], y[94], y[95]))
                {
                    return false;
                }

                if (attachment_sphere_collision<decltype(x[0])>(environment, y[96], y[97], y[98], y[99]))
                {
                    return false;
                }

                if (attachment_sphere_collision<decltype(x[0])>(environment, y[100], y[101], y[102], y[103]))
                {
                    return false;
                }

                if (attachment_sphere_collision<decltype(x[0])>(environment, y[104], y[105], y[106], y[107]))
                {
                    return false;
                }

                if (attachment_sphere_collision<decltype(x[0])>(environment, y[108], y[109], y[110], y[111]))
                {
                    return false;
                }

                if (attachment_sphere_collision<decltype(x[0])>(environment, y[112], y[113], y[114], y[115]))
                {
                    return false;
                }
            }

            return true;
        }

        inline static auto eefk(const std::array<float, 21> &x) noexcept -> Eigen::Isometry3f
        {
            std::array<float, 36> v;
            std::array<float, 12> y;

            v[0] = cos(x[0]);
            v[1] = sin(x[1]);
            v[2] = -v[1];
            v[3] = sin(x[0]);
            v[4] = -v[3];
            v[5] = cos(x[1]);
            v[6] = 4.89663865010925e-12 * v[5];
            v[7] = v[0] * v[2] + v[4] * v[6];
            v[8] = 4.89663865010925e-12 * v[1];
            v[9] = v[0] * v[5] + v[4] * v[8];
            v[10] = cos(x[2]);
            v[11] = sin(x[2]);
            v[12] = 4.89663865010925e-12 * v[11];
            v[13] = v[9] * v[10] + v[7] * v[12] + v[4] * v[11];
            v[14] = cos(x[3]);
            v[15] = -v[11];
            v[16] = 4.89663865010925e-12 * v[10];
            v[9] = v[9] * v[15] + v[7] * v[16] + v[4] * v[10];
            v[17] = sin(x[3]);
            v[18] = 4.89663865010925e-12 * v[17];
            v[4] = -1. * v[7] + 4.89663865010925e-12 * v[4];
            v[19] = v[13] * v[14] + v[9] * v[18] + v[4] * v[17];
            v[20] = -v[17];
            v[21] = 4.89663865010925e-12 * v[14];
            v[22] = v[13] * v[20] + v[9] * v[21] + v[4] * v[14];
            v[23] = cos(x[4]);
            v[24] = sin(x[4]);
            v[25] = 4.89663865010925e-12 * v[24];
            v[4] = -1. * v[9] + 4.89663865010925e-12 * v[4];
            v[9] = -1. * v[24];
            v[26] = v[19] * v[23] + v[22] * v[25] + v[4] * v[9];
            v[27] = cos(x[5]);
            v[24] = -v[24];
            v[28] = 4.89663865010925e-12 * v[23];
            v[29] = -1. * v[23];
            v[30] = v[19] * v[24] + v[22] * v[28] + v[4] * v[29];
            v[31] = sin(x[5]);
            v[32] = 4.89663865010925e-12 * v[31];
            v[4] = v[22] + 4.89663865010925e-12 * v[4];
            v[33] = v[26] * v[27] + v[30] * v[32] + v[4] * v[31];
            v[34] = -v[31];
            v[35] = 4.89663865010925e-12 * v[27];
            v[26] = v[26] * v[34] + v[30] * v[35] + v[4] * v[27];
            v[4] = -1. * v[30] + 4.89663865010925e-12 * v[4];
            y[9] = -1. * v[26] + 4.89663865010925e-12 * v[4];
            y[0] = -0.316 * v[7] + 0.0825 * v[13] + -0.0825 * v[19] + 0.384 * v[22] + 0.088 * v[33] +
                   0.212 * y[9];
            v[6] = v[3] * v[2] + v[0] * v[6];
            v[8] = v[3] * v[5] + v[0] * v[8];
            v[3] = v[8] * v[10] + v[6] * v[12] + v[0] * v[11];
            v[8] = v[8] * v[15] + v[6] * v[16] + v[0] * v[10];
            v[0] = -1. * v[6] + 4.89663865010925e-12 * v[0];
            v[2] = v[3] * v[14] + v[8] * v[18] + v[0] * v[17];
            v[22] = v[3] * v[20] + v[8] * v[21] + v[0] * v[14];
            v[0] = -1. * v[8] + 4.89663865010925e-12 * v[0];
            v[8] = v[2] * v[23] + v[22] * v[25] + v[0] * v[9];
            v[19] = v[2] * v[24] + v[22] * v[28] + v[0] * v[29];
            v[0] = v[22] + 4.89663865010925e-12 * v[0];
            v[13] = v[8] * v[27] + v[19] * v[32] + v[0] * v[31];
            v[8] = v[8] * v[34] + v[19] * v[35] + v[0] * v[27];
            v[0] = -1. * v[19] + 4.89663865010925e-12 * v[0];
            y[10] = -1. * v[8] + 4.89663865010925e-12 * v[0];
            y[1] = -0.316 * v[6] + 0.0825 * v[3] + -0.0825 * v[2] + 0.384 * v[22] + 0.088 * v[13] +
                   0.212 * y[10];
            v[5] = -1. * v[5];
            v[1] = -1. * v[1];
            v[12] = v[1] * v[10] + v[5] * v[12] + 4.89663865010925e-12 * v[11];
            v[1] = v[1] * v[15] + v[5] * v[16] + 4.89663865010925e-12 * v[10];
            v[16] = 2.39770700697438e-23 + -1. * v[5];
            v[18] = v[12] * v[14] + v[1] * v[18] + v[16] * v[17];
            v[21] = v[12] * v[20] + v[1] * v[21] + v[16] * v[14];
            v[16] = -1. * v[1] + 4.89663865010925e-12 * v[16];
            v[9] = v[18] * v[23] + v[21] * v[25] + v[16] * v[9];
            v[29] = v[18] * v[24] + v[21] * v[28] + v[16] * v[29];
            v[16] = v[21] + 4.89663865010925e-12 * v[16];
            v[32] = v[9] * v[27] + v[29] * v[32] + v[16] * v[31];
            v[9] = v[9] * v[34] + v[29] * v[35] + v[16] * v[27];
            v[16] = -1. * v[29] + 4.89663865010925e-12 * v[16];
            y[11] = -1. * v[9] + 4.89663865010925e-12 * v[16];
            y[2] = 0.333 + -0.316 * v[5] + 0.0825 * v[12] + -0.0825 * v[18] + 0.384 * v[21] + 0.088 * v[32] +
                   0.212 * y[11];
            v[21] = cos(x[6]);
            v[18] = sin(x[6]);
            v[12] = 4.89663865010925e-12 * v[18];
            v[5] = v[33] * v[21] + v[26] * v[12] + v[4] * v[18];
            v[29] = -v[18];
            v[35] = 4.89663865010925e-12 * v[21];
            v[4] = v[33] * v[29] + v[26] * v[35] + v[4] * v[21];
            y[3] = 0.707106781186865 * v[5] + -0.70710678118623 * v[4];
            v[26] = v[13] * v[21] + v[8] * v[12] + v[0] * v[18];
            v[0] = v[13] * v[29] + v[8] * v[35] + v[0] * v[21];
            y[4] = 0.707106781186865 * v[26] + -0.70710678118623 * v[0];
            v[12] = v[32] * v[21] + v[9] * v[12] + v[16] * v[18];
            v[35] = v[32] * v[29] + v[9] * v[35] + v[16] * v[21];
            y[5] = 0.707106781186865 * v[12] + -0.70710678118623 * v[35];
            y[6] = 0.70710678118623 * v[5] + 0.707106781186865 * v[4];
            y[7] = 0.70710678118623 * v[26] + 0.707106781186865 * v[0];
            y[8] = 0.70710678118623 * v[12] + 0.707106781186865 * v[35];

            return to_isometry(y.data());
        }
    };
}  // namespace vamp::robots

// NOLINTEND(*-magic-numbers)
